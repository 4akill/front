/**
 * Smart Network Metrics v1.0.2
 * –ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ—Ç–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫
 * –ê–≤—Ç–æ—Ä: AI Assistant
 * –î–∞—Ç–∞: 2025-01-03
 */

console.log('üöÄ [START] –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è smart-network-metrics.js');

/**
 * Smart Network Metrics Module
 * –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * 
 * @version 1.0.0
 * @author AI Assistant
 * @date 2025-01-07
 * @purpose –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∞–º–∏ —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
 */

class SmartNetworkMetrics {
    constructor() {
        this.lastNetworkData = [];
        this.elements = {};
        this.initializeElements();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫
     */
    initializeElements() {
        this.elements = {
            speed: document.querySelector('#current-network-speed'),
            upload: document.querySelector('#network-upload'),
            download: document.querySelector('#network-download'),
            status: document.querySelector('#network-status-text'),
            indicator: document.querySelector('#network-indicator'),
            speedValue: document.querySelector('#current-network-speed')
        };

        console.log('üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã —Å–µ—Ç–∏:', this.elements);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫
     * @param {Array} networkData - –¥–∞–Ω–Ω—ã–µ —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
     */
    updateNetworkMetrics(networkData) {
        console.log('üåê [–°–ï–¢–¨] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', networkData);
        console.log('üåê [–°–ï–¢–¨] –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:', typeof networkData);
        console.log('üåê [–°–ï–¢–¨] –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Å—Å–∏–≤–æ–º:', Array.isArray(networkData));
        
        if (!networkData) {
            console.warn('üåê [–°–ï–¢–¨] –î–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
            this.setDefaultValues();
            return;
        }

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
        const metrics = this.calculateNetworkMetrics(networkData);
        console.log('üåê [–°–ï–¢–¨] –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:', metrics);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.updateInterface(metrics);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ
        this.lastNetworkData = networkData;
        this.lastUpdateTime = new Date();
        
        console.log('üåê [–°–ï–¢–¨] –ú–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    }

    /**
     * –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
     * @param {Array} networkData - –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
     * @returns {Object} –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
     */
    calculateNetworkMetrics(networkData) {
        console.log('üßÆ [–†–ê–°–ß–ï–¢] –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á–µ—Ç —Å–µ—Ç–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫');
        console.log('üßÆ [–†–ê–°–ß–ï–¢] –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', networkData);
        console.log('üßÆ [–†–ê–°–ß–ï–¢] –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏:', networkData[0]);
        
        if (!networkData || !Array.isArray(networkData) || networkData.length === 0) {
            console.warn('üßÆ [–†–ê–°–ß–ï–¢] –ü—É—Å—Ç—ã–µ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–ª–∏');
            return {
                totalData: 0,
                avgSpeed: 0,
                uploadTraffic: 0,
                downloadTraffic: 0,
                isActive: false,
                status: '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞',
                recordsCount: 0
            };
        }

        let totalUpload = 0;
        let totalDownload = 0;
        let totalSpeed = 0;
        let validRecords = 0;

        console.log('üßÆ [–†–ê–°–ß–ï–¢] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏:', networkData.length);

        // –°–Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º –æ–±—â–∏–π —Ç—Ä–∞—Ñ–∏–∫
        networkData.forEach((record, index) => {
            console.log(`üßÆ [–†–ê–°–ß–ï–¢] –ó–∞–ø–∏—Å—å ${index}:`, record);
            
            if (record && typeof record === 'object') {
                // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π –ø–æ–ª–µ–π
                const upload = record.upload || record.upload_bytes || record.sent || record.bytes_sent || 0;
                const download = record.download || record.download_bytes || record.received || record.bytes_received || 0;
                const speed = record.speed || record.bandwidth || record.rate || 0;

                console.log(`üßÆ [–†–ê–°–ß–ï–¢] –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: upload=${upload}, download=${download}, speed=${speed}`);

                if (upload > 0 || download > 0) {
                    totalUpload += Number(upload) || 0;
                    totalDownload += Number(download) || 0;
                    validRecords++;
                }
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å –≥–æ—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å–∫–æ—Ä–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
                if (speed > 0) {
                    totalSpeed += Number(speed) || 0;
                }
            }
        });

        // –ï—Å–ª–∏ –Ω–µ—Ç –≥–æ—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏, —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
        let avgSpeed = 0;
        if (validRecords > 0 && totalSpeed > 0) {
            // –ï—Å—Ç—å –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
            avgSpeed = totalSpeed / validRecords;
            console.log('üßÆ [–†–ê–°–ß–ï–¢] –°–∫–æ—Ä–æ—Å—Ç—å –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', avgSpeed);
        } else if (networkData.length >= 2 && totalUpload + totalDownload > 0) {
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞
            const timeSpanMinutes = networkData.length; // –ü—Ä–∏–º–µ—Ä–Ω–æ 1 –∑–∞–ø–∏—Å—å = 1 –º–∏–Ω—É—Ç–∞
            const totalBytes = totalUpload + totalDownload;
            const avgBytesPerMinute = totalBytes / timeSpanMinutes;
            const avgBytesPerSecond = avgBytesPerMinute / 60;
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –º–µ–≥–∞–±–∏—Ç—ã –≤ —Å–µ–∫—É–Ω–¥—É (1 –±–∞–π—Ç = 8 –±–∏—Ç, 1 –º–µ–≥–∞–±–∏—Ç = 1,000,000 –±–∏—Ç)
            avgSpeed = (avgBytesPerSecond * 8) / 1000000;
            console.log('üßÆ [–†–ê–°–ß–ï–¢] –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å:', {
                totalBytes,
                timeSpanMinutes,
                avgBytesPerSecond,
                avgSpeedMbps: avgSpeed
            });
        }

        const isActive = totalUpload > 0 || totalDownload > 0 || avgSpeed > 0;

        const result = {
            totalData: totalUpload + totalDownload,
            avgSpeed: avgSpeed,
            uploadTraffic: totalUpload,
            downloadTraffic: totalDownload,
            isActive: isActive,
            status: isActive ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞',
            recordsCount: validRecords
        };

        console.log('üßÆ [–†–ê–°–ß–ï–¢] –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
        return result;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
     * @param {Object} metrics - –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
     */
    updateInterface(metrics) {
        console.log('üñ•Ô∏è [–ò–ù–¢–ï–†–§–ï–ô–°] –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏:', metrics);
        
        if (!metrics) {
            console.warn('üñ•Ô∏è [–ò–ù–¢–ï–†–§–ï–ô–°] –ú–µ—Ç—Ä–∏–∫–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã');
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å —Å–µ—Ç–∏
        this.updateElement(this.elements.speedValue, `${metrics.avgSpeed.toFixed(1)}`);
        console.log('üñ•Ô∏è [–ò–ù–¢–ï–†–§–ï–ô–°] –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å:', `${metrics.avgSpeed.toFixed(1)} Mbps`);

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∞—Ñ–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤—ã–≥—Ä—É–∑–∫–∏
        this.updateElement(this.elements.upload, this.formatBytes(metrics.uploadTraffic));
        this.updateElement(this.elements.download, this.formatBytes(metrics.downloadTraffic));
        console.log('üñ•Ô∏è [–ò–ù–¢–ï–†–§–ï–ô–°] –û–±–Ω–æ–≤–ª–µ–Ω —Ç—Ä–∞—Ñ–∏–∫: upload=' + this.formatBytes(metrics.uploadTraffic) + ', download=' + this.formatBytes(metrics.downloadTraffic));

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        this.updateElement(this.elements.status, metrics.status || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
        console.log('üñ•Ô∏è [–ò–ù–¢–ï–†–§–ï–ô–°] –û–±–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å:', metrics.status);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if (this.elements.indicator) {
            this.elements.indicator.className = 'indicator-dot ' + 
                (metrics.isActive ? 'active' : 'inactive');
            console.log('üñ•Ô∏è [–ò–ù–¢–ï–†–§–ï–ô–°] –û–±–Ω–æ–≤–ª–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä:', metrics.isActive ? '–∞–∫—Ç–∏–≤–µ–Ω' : '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω');
        }

        console.log('üñ•Ô∏è [–ò–ù–¢–ï–†–§–ï–ô–°] –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    setDefaultValues() {
        console.log('üìä –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å–µ—Ç–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
        
        this.updateElement(this.elements.speed, '0');
        this.updateElement(this.elements.speedValue, '0');
        this.updateElement(this.elements.status, '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞');
        this.updateElement(this.elements.upload, '0 B');
        this.updateElement(this.elements.download, '0 B');
        
        if (this.elements.indicator) {
            this.elements.indicator.className = 'indicator-dot inactive';
        }
    }

    /**
     * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–∞
     * @param {Element} element - DOM —ç–ª–µ–º–µ–Ω—Ç
     * @param {string} value - –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
     */
    updateElement(element, value) {
        if (element && element.textContent !== value) {
            element.textContent = value;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–π—Ç–æ–≤ –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
     * @param {number} bytes - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤
     * @returns {string} –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
     */
    formatBytes(bytes) {
        if (!bytes || bytes === 0) return '0 B';
        
        const k = 1024;
        const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        
        const value = parseFloat((bytes / Math.pow(k, i)).toFixed(2));
        return `${value} ${sizes[i]}`;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ç–∏
     * @returns {Array} –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
     */
    getLastNetworkData() {
        return this.lastNetworkData;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ç–∏
     * @returns {boolean} –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —Å–µ—Ç—å
     */
    isNetworkActive() {
        if (!this.lastNetworkData || this.lastNetworkData.length === 0) {
            return false;
        }

        return this.lastNetworkData.some(entry => 
            (entry.bytes_sent && entry.bytes_sent > 0) || 
            (entry.bytes_received && entry.bytes_received > 0)
        );
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
     */
    initWithTestData() {
        console.log('üß™ [–¢–ï–°–¢] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
        
        const testData = [
            {
                bytes_sent: 1024000,    // 1MB –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                bytes_received: 2048000, // 2MB –ø–æ–ª—É—á–µ–Ω–æ
                speed: 50.5             // 50.5 Mbps
            },
            {
                bytes_sent: 512000,     // 512KB –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                bytes_received: 1536000, // 1.5MB –ø–æ–ª—É—á–µ–Ω–æ
                speed: 25.2             // 25.2 Mbps
            }
        ];
        
        console.log('üß™ [–¢–ï–°–¢] –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', testData);
        this.updateNetworkMetrics(testData);
    }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥—É–ª—è –∏ –¥–µ–ª–∞–µ–º –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
console.log('üåê [–°–û–ó–î–ê–ù–ò–ï] –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä smartNetworkMetrics');
try {
    window.smartNetworkMetrics = new SmartNetworkMetrics();
    console.log('‚úÖ [–°–û–ó–î–ê–ù–ò–ï] –≠–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
} catch (error) {
    console.error('‚ùå [–°–û–ó–î–ê–ù–ò–ï] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:', error);
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.updateNetworkMetrics = function(networkData) {
    console.log('üåê [–ì–õ–û–ë–ê–õ] –í—ã–∑–≤–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è updateNetworkMetrics —Å –¥–∞–Ω–Ω—ã–º–∏:', networkData);
    
    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ –∏–ª–∏ null, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    if (!networkData || !Array.isArray(networkData) || networkData.length === 0) {
        console.log('üåê [–ì–õ–û–ë–ê–õ] –î–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
        window.smartNetworkMetrics.setDefaultValues();
        return;
    }
    
    window.smartNetworkMetrics.updateNetworkMetrics(networkData);
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
console.log('üåê [–ì–û–¢–û–í–ù–û–°–¢–¨] –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DOM:', document.readyState);

if (document.readyState === 'loading') {
    console.log('üåê [–û–ñ–ò–î–ê–ù–ò–ï] DOM –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –∂–¥–µ–º DOMContentLoaded');
    document.addEventListener('DOMContentLoaded', initNetworkModule);
} else {
    console.log('üåê [–ì–û–¢–û–í] DOM —É–∂–µ –≥–æ—Ç–æ–≤, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
    initNetworkModule();
}

function initNetworkModule() {
    console.log('üåê [–ò–ù–ò–¢] –ú–æ–¥—É–ª—å —Å–µ—Ç–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    try {
        // –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
        console.log('üåê [–ò–ù–ò–¢] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
        window.smartNetworkMetrics.initializeElements();
        
        console.log('üåê [–ò–ù–ò–¢] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π');
        window.smartNetworkMetrics.setDefaultValues();
        
        console.log('‚úÖ [–ò–ù–ò–¢] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
        console.error('‚ùå [–ò–ù–ò–¢] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    }

    // –í—Ä–µ–º–µ–Ω–Ω–æ: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    setTimeout(() => {
        console.log('üß™ [–ê–í–¢–û–¢–ï–°–¢] –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏');
        window.smartNetworkMetrics.initWithTestData();
    }, 3000);
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑:
    // window.smartNetworkMetrics.initWithTestData();
}

console.log('üåê Smart Network Metrics –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω'); 