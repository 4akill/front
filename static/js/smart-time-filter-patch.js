/**
 * üîß –ü–∞—Ç—á –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —É–º–Ω–æ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ –≤—Ä–µ–º–µ–Ω–∏
 * –ê–≤—Ç–æ—Ä: AI Assistant
 * –î–∞—Ç–∞: 2024
 * –í–µ—Ä—Å–∏—è: v0.1
 * –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–∑–æ–≤—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
 */

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
let originalUpdateMainMetricsWithRealActivity = null;
let originalUpdateMainMetricsWithRealActivityPrecise = null;

// –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∞—Ç—á–∞
let isFilterPatchInitialized = false;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∞—Ç—á –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –≤—ã–∑–æ–≤–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
 */
function initializeFilterPatch() {
    if (isFilterPatchInitialized) return;
    
    console.log('üîß [–ü–ê–¢–ß] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ç—á–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤
    const checkAndPatch = () => {
        // –ü–∞—Ç—á–∏–º —Ç–æ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        if (typeof updateMainMetricsWithRealActivityPrecise === 'function' && !originalUpdateMainMetricsWithRealActivityPrecise) {
            originalUpdateMainMetricsWithRealActivityPrecise = updateMainMetricsWithRealActivityPrecise;
            
            window.updateMainMetricsWithRealActivityPrecise = function(windowData) {
                console.log('üéØ [–ü–ê–¢–ß] –ü–µ—Ä–µ—Ö–≤–∞—Ç —Ç–æ—á–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ - –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é');
                
                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º—ã—à–∏ –∏–∑ window.lastLoadedData
                const mouseData = window.lastLoadedData?.mouse || [];
                
                // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
                const filters = getCurrentActiveFilters();
                const { filteredWindowData, filteredMouseData } = filterDataForSmartCalculator(windowData, mouseData, filters);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º window.lastLoadedData —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                window.lastLoadedData = {
                    ...window.lastLoadedData,
                    activities: filteredWindowData,
                    mouse: filteredMouseData
                };
                
                // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                return originalUpdateMainMetricsWithRealActivityPrecise.call(this, filteredWindowData);
            };
            
            console.log('‚úÖ [–ü–ê–¢–ß] –¢–æ—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–æ–ø–∞—Ç—á–µ–Ω');
        }
        
        // –ü–∞—Ç—á–∏–º –æ–±—ã—á–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        if (typeof updateMainMetricsWithRealActivity === 'function' && !originalUpdateMainMetricsWithRealActivity) {
            originalUpdateMainMetricsWithRealActivity = updateMainMetricsWithRealActivity;
            
            window.updateMainMetricsWithRealActivity = function(windowData) {
                console.log('üéØ [–ü–ê–¢–ß] –ü–µ—Ä–µ—Ö–≤–∞—Ç —É–º–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ - –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é');
                
                // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º—ã—à–∏ –∏–∑ window.lastLoadedData
                const mouseData = window.lastLoadedData?.mouse || [];
                
                // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
                const filters = getCurrentActiveFilters();
                const { filteredWindowData, filteredMouseData } = filterDataForSmartCalculator(windowData, mouseData, filters);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º window.lastLoadedData —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                window.lastLoadedData = {
                    ...window.lastLoadedData,
                    activities: filteredWindowData,
                    mouse: filteredMouseData
                };
                
                // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                return originalUpdateMainMetricsWithRealActivity.call(this, filteredWindowData);
            };
            
            console.log('‚úÖ [–ü–ê–¢–ß] –£–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–æ–ø–∞—Ç—á–µ–Ω');
        }
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
    checkAndPatch();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Å–ª—É—á–∞–µ–≤ –ø–æ–∑–¥–Ω–µ–π –∑–∞–≥—Ä—É–∑–∫–∏
    const patchInterval = setInterval(() => {
        checkAndPatch();
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –µ—Å–ª–∏ –æ–±–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –ø—Ä–æ–ø–∞—Ç—á–µ–Ω—ã
        if (originalUpdateMainMetricsWithRealActivity && originalUpdateMainMetricsWithRealActivityPrecise) {
            clearInterval(patchInterval);
            isFilterPatchInitialized = true;
            console.log('üéâ [–ü–ê–¢–ß] –í—Å–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–ø–∞—Ç—á–µ–Ω—ã');
        }
    }, 100);
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        clearInterval(patchInterval);
        isFilterPatchInitialized = true;
        console.log('‚è∞ [–ü–ê–¢–ß] –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ, –ø–∞—Ç—á –∑–∞–≤–µ—Ä—à–µ–Ω');
    }, 5000);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ç—á –∫–æ–≥–¥–∞ DOM –≥–æ—Ç–æ–≤
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeFilterPatch);
} else {
    initializeFilterPatch();
}

// –¢–∞–∫–∂–µ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ç—á –µ—Å–ª–∏ window.lastLoadedData –∏–∑–º–µ–Ω—è–µ—Ç—Å—è (–∑–Ω–∞—á–∏—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã)
let lastDataWatcher = null;
Object.defineProperty(window, 'lastLoadedData', {
    get() {
        return lastDataWatcher;
    },
    set(value) {
        lastDataWatcher = value;
        // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ç—á
        if (!isFilterPatchInitialized) {
            setTimeout(initializeFilterPatch, 100);
        }
    }
});

console.log('üöÄ [–ü–ê–¢–ß] –ú–æ–¥—É–ª—å –ø–∞—Ç—á–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ'); 