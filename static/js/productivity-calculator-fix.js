/**
 * üìä –ú–û–î–£–õ–¨ –†–ê–°–ß–ï–¢–ê –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–ò
 * –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
 * –ê–≤—Ç–æ—Ä: AI Assistant, –¥–∞—Ç–∞: 2025-01-07, –≤–µ—Ä—Å–∏—è: v1.0
 */

(function() {
    'use strict';
    
    console.log('üìä –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–¥—É–ª—å —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const PRODUCTIVE_APPS = {
        'acad.exe': 100,           // AutoCAD - –æ—á–µ–Ω—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ
        'AutoCAD': 100,
        'chrome.exe': 70,          // Chrome - —É–º–µ—Ä–µ–Ω–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ
        'Google Chrome': 70,
        'Taskmgr.exe': 30,         // –î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á - –Ω–∏–∑–∫–∞—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        '–î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á': 30,
        'AnyDesk.exe': 80,         // –£–¥–∞–ª–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø - –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ
        'AnyDesk': 80,
        'smart_client.exe': 10,    // –ù–∞—à –∫–ª–∏–µ–Ω—Ç - –Ω–∏–∑–∫–∞—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        'ApplicationFrameHost.exe': 20, // –•–æ—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π - –Ω–∏–∑–∫–∞—è
        'KYOCERA Print Center': 40 // –ü–µ—á–∞—Ç—å - —Å—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    };
    
    // –§–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (–Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)
    const BACKGROUND_PROCESSES = [
        'TextInputHost.exe',
        'dwm.exe',
        'winlogon.exe',
        'csrss.exe',
        'lsass.exe',
        'spoolsv.exe'
    ];
    
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * @param {string} appName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * @returns {number} - –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (0-100)
     */
    function calculateAppProductivity(appName) {
        if (!appName) return 50; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        if (BACKGROUND_PROCESSES.includes(appName)) {
            return 0; // –§–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ —Å—á–∏—Ç–∞—é—Ç—Å—è
        }
        
        // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        if (PRODUCTIVE_APPS[appName] !== undefined) {
            return PRODUCTIVE_APPS[appName];
        }
        
        // –ò—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        const appLower = appName.toLowerCase();
        for (const [key, value] of Object.entries(PRODUCTIVE_APPS)) {
            if (appLower.includes(key.toLowerCase()) || key.toLowerCase().includes(appLower)) {
                return value;
            }
        }
        
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Å—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        return 50;
    }
    
    /**
     * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â—É—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
     * @param {Array} activities - –ú–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
     * @returns {Object} - –û–±—ä–µ–∫—Ç —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
     */
    function calculateProductivityMetrics(activities) {
        if (!activities || activities.length === 0) {
            return {
                totalProductiveTime: 0,
                totalUnproductiveTime: 0,
                averageProductivity: 0,
                productivityScore: 0
            };
        }
        
        let totalWeightedProductivity = 0;
        let totalTime = 0;
        let productiveTime = 0;
        let unproductiveTime = 0;
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
        const appGroups = {};
        
        activities.forEach(activity => {
            const appName = activity.app_name || activity.application || '';
            const duration = parseInt(activity.duration) || 0;
            
            if (duration > 0) {
                if (!appGroups[appName]) {
                    appGroups[appName] = { totalTime: 0, activities: [] };
                }
                appGroups[appName].totalTime += duration;
                appGroups[appName].activities.push(activity);
            }
        });
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        Object.entries(appGroups).forEach(([appName, group]) => {
            const productivity = calculateAppProductivity(appName);
            const timeInMinutes = group.totalTime / 60;
            
            totalTime += timeInMinutes;
            totalWeightedProductivity += productivity * timeInMinutes;
            
            if (productivity >= 70) {
                productiveTime += timeInMinutes;
            } else if (productivity <= 30) {
                unproductiveTime += timeInMinutes;
            } else {
                // –ß–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è
                const productivePart = (productivity / 100) * timeInMinutes;
                productiveTime += productivePart;
                unproductiveTime += (timeInMinutes - productivePart);
            }
            
            console.log(`üìä [–ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨] ${appName}: ${Math.round(timeInMinutes)}–º, –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${productivity}%`);
        });
        
        const averageProductivity = totalTime > 0 ? Math.round(totalWeightedProductivity / totalTime) : 0;
        const productivityScore = totalTime > 0 ? Math.round((productiveTime / totalTime) * 100) : 0;
        
        console.log(`üìä [–ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨] –ò—Ç–æ–≥–æ:`);
        console.log(`   ‚è∞ –û–±—â–µ–µ –≤—Ä–µ–º—è: ${Math.round(totalTime)}–º`);
        console.log(`   ‚úÖ –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è: ${Math.round(productiveTime)}–º`);
        console.log(`   ‚ùå –ù–µ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è: ${Math.round(unproductiveTime)}–º`);
        console.log(`   üìà –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${averageProductivity}%`);
        console.log(`   üéØ –ë–∞–ª–ª –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${productivityScore}%`);
        
        return {
            totalProductiveTime: Math.round(productiveTime),
            totalUnproductiveTime: Math.round(unproductiveTime),
            averageProductivity: averageProductivity,
            productivityScore: productivityScore
        };
    }
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ö–æ—Ç—Ñ–∏–∫—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const originalHotfix = window.updateMainMetricsWithRealActivity;
    
    if (originalHotfix) {
        window.updateMainMetricsWithRealActivity = function(windowData, mouseData = null) {
            console.log('üìä [–ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨] –ü–µ—Ä–µ—Ö–≤–∞—Ç —Ö–æ—Ç—Ñ–∏–∫—Å–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
            
            // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ö–æ—Ç—Ñ–∏–∫—Å
            const result = originalHotfix.call(this, windowData, mouseData);
            
            if (result && result.activities) {
                // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
                const productivityMetrics = calculateProductivityMetrics(result.activities);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                if (result.real_activity_stats) {
                    // –ó–∞–º–µ–Ω—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ
                    result.real_activity_stats.productive_time = productivityMetrics.totalProductiveTime;
                    result.real_activity_stats.productivity_score = productivityMetrics.averageProductivity;
                    
                    console.log('üìä [–ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨] –û–±–Ω–æ–≤–ª–µ–Ω—ã –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ');
                }
            }
            
            return result;
        };
        
        console.log('üìä [–ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨] –•–æ—Ç—Ñ–∏–∫—Å —Ä–∞—Å—à–∏—Ä–µ–Ω –º–æ–¥—É–ª–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    }
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
    window.calculateAppProductivity = calculateAppProductivity;
    window.calculateProductivityMetrics = calculateProductivityMetrics;
    
    console.log('‚úÖ –ú–æ–¥—É–ª—å —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω');
    
})(); 