/**
 * –£–ú–ù–´–ô –°–ò–°–¢–ï–ú–ù–´–ô –§–ò–ö–°
 * –ê–≤—Ç–æ—Ä: AI Assistant
 * –î–∞—Ç–∞: 2025-01-22
 * –í–µ—Ä—Å–∏—è: 1.0
 * –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π, –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */

(function() {
    'use strict';
    
    console.log('üîß –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —É–º–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∏–∫—Å...');
    
    // ==================== 1. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ì–õ–û–ë–ê–õ–¨–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–• ====================
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    if (typeof window.lastValidMetrics === 'undefined') {
        window.lastValidMetrics = {
            totalTime: 0,
            productiveTime: 0,
            productivity: 0,
            breaks: 0
        };
    }
    
    if (typeof window.lastValidResources === 'undefined') {
        window.lastValidResources = {
            cpu: { current: 0, max: 0, avg: 0 },
            ram: { current: 0, max: 0, avg: 0 },
            disk: { current: 0, max: 0, avg: 0 }
        };
    }
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ window.lastLoadedData
    function getLastLoadedData() {
        return window.lastLoadedData || {};
    }
    
    function setLastLoadedData(data) {
        window.lastLoadedData = data || {};
    }
    
    // ==================== 2. –¶–ï–ù–¢–†–ê–õ–ò–ó–û–í–ê–ù–ù–´–ô –ú–ï–ù–ï–î–ñ–ï–† –ú–ï–¢–†–ò–ö ====================
    
    class MetricsManager {
        constructor() {
            this.isUpdating = false;
            this.updateQueue = [];
            this.lastUpdateTime = 0;
            this.updateThrottle = 100; // –ú–∏–Ω–∏–º—É–º 100–º—Å –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
        }
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        safeUpdateMetrics(data, source = 'unknown') {
            const now = Date.now();
            
            // –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            if (now - this.lastUpdateTime < this.updateThrottle) {
                console.log(`‚è≥ [–§–ò–ö–°] –û—Ç–ª–æ–∂–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –æ—Ç ${source} (–∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞)`);
                this.updateQueue.push({ data, source, timestamp: now });
                return;
            }
            
            // –ó–∞—â–∏—Ç–∞ –æ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            if (this.isUpdating) {
                console.log(`üîÑ [–§–ò–ö–°] –ü—Ä–æ–ø—É—â–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç ${source} (—É–∂–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è)`);
                return;
            }
            
            this.isUpdating = true;
            this.lastUpdateTime = now;
            
            try {
                console.log(`üìä [–§–ò–ö–°] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –æ—Ç ${source}`);
                this._processUpdate(data, source);
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Å–ø–µ—à–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
                if (data && data.real_activity_stats) {
                    this._saveValidMetrics(data.real_activity_stats);
                }
                
            } catch (error) {
                console.error(`‚ùå [–§–ò–ö–°] –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –æ—Ç ${source}:`, error);
                this._displaySavedMetrics();
            } finally {
                this.isUpdating = false;
                this._processQueue();
            }
        }
        
        _processUpdate(data, source) {
            if (!data) {
                console.warn(`‚ö†Ô∏è [–§–ò–ö–°] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç ${source}`);
                this._displaySavedMetrics();
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —É–º–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
            if (data.real_activity_stats) {
                console.log(`üß† [–§–ò–ö–°] –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —É–º–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –æ—Ç ${source}`);
                this._updateFromSmartCalculator(data.real_activity_stats);
            } else {
                console.log(`üìä [–§–ò–ö–°] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç ${source}`);
                this._updateFromStandardData(data);
            }
        }
        
        _updateFromSmartCalculator(stats) {
            const totalMinutes = this._safeRound(stats.total_time);        // –ú–ê–®–ò–ù–ù–û–ï –æ–±—â–µ–µ –≤—Ä–µ–º—è (–æ—Ç –ø–µ—Ä–≤–æ–π –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
            const activeMinutes = this._safeRound(stats.active_time);      // –ê–ö–¢–ò–í–ù–û–ï –≤—Ä–µ–º—è (—Å –º—ã—à–∏–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é)
            const passiveMinutes = this._safeRound(stats.passive_time);    // –ü–ê–°–°–ò–í–ù–û–ï –≤—Ä–µ–º—è (—Ñ–æ–Ω/—Ç—Ä–µ–π –±–µ–∑ –º—ã—à–∏–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
            const activityPercent = this._safeRound(stats.activity_ratio * 100); // % –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç –º–∞—à–∏–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ü–†–ê–í–ò–õ–¨–ù–û–ô –ª–æ–≥–∏–∫–æ–π
            // 1. –ú–ê–®–ò–ù–ù–û–ï –æ–±—â–µ–µ –≤—Ä–µ–º—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º total_time (–æ—Ç –ø–µ—Ä–≤–æ–π –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∫–ª—é—á–∞—è –ø–µ—Ä–µ—Ä—ã–≤—ã)
            this._updateElement('total-working-time', this._formatTime(totalMinutes), '–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—â–µ–µ –≤—Ä–µ–º—è –æ—Ç –ø–µ—Ä–≤–æ–π –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
            
            // 2. –ê–ö–¢–ò–í–ù–û–ï –≤—Ä–µ–º—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è —Å —Ä–µ–∞–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –º—ã—à–∏
            this._updateElement('productive-time', this._formatTime(activeMinutes), `–ê–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è (${activityPercent}% –æ—Ç –º–∞—à–∏–Ω–Ω–æ–≥–æ ${this._formatTime(totalMinutes)})`);
            
            // 3. –ê–ö–¢–ò–í–ù–û–°–¢–¨ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç –º–∞—à–∏–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            this._updateElement('activity-score', `${activityPercent}%`, '–ü—Ä–æ—Ü–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç –º–∞—à–∏–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏');
            
            // 4. –ü–ê–°–°–ò–í–ù–û–ï –í–†–ï–ú–Ø - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è —Ñ–æ–Ω–∞/—Ç—Ä–µ—è –±–µ–∑ –º—ã—à–∏–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            this._updateElement('break-time', this._formatTime(passiveMinutes), '–ü–∞—Å—Å–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è (—Ñ–æ–Ω/—Ç—Ä–µ–π –±–µ–∑ –º—ã—à–∏–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            this._saveValidMetrics(stats);
        }
        
        _updateFromStandardData(data) {
            // –û–±–Ω—É–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —É–º–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
            this._updateElement('total-working-time', '0–º', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞');
            this._updateElement('productive-time', '0–º', '0% –æ—Ç –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏');
            this._updateElement('activity-score', '0%', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
            this._updateElement('break-time', '0–º', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
        }
        
        _displaySavedMetrics() {
            if (!window.lastValidMetrics || window.lastValidMetrics.totalTime === 0) {
                console.log('üìä [–§–ò–ö–°] –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω—É–ª–∏');
                this._updateFromStandardData({});
                return;
            }
            
            console.log('üíæ [–§–ò–ö–°] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:', window.lastValidMetrics);
            
            const metrics = window.lastValidMetrics;
            this._updateElement('total-working-time', this._formatTime(metrics.totalTime));
            this._updateElement('productive-time', this._formatTime(metrics.productiveTime));
            this._updateElement('activity-score', `${metrics.productivity.toFixed(1)}%`);
            this._updateElement('break-time', this._formatTime(metrics.breaks));
        }
        
        _saveValidMetrics(stats) {
            window.lastValidMetrics = {
                totalTime: this._safeRound(stats.total_time),
                productiveTime: this._safeRound(stats.active_time),
                productivity: this._safeRound(stats.activity_ratio * 100),
                breaks: this._safeRound(stats.passive_time)
            };
        }
        
        _updateElement(elementId, value, subtitle = null) {
            const element = document.getElementById(elementId);
            if (element) {
                element.textContent = value;
                
                if (subtitle) {
                    const subtitleElement = element.parentElement.querySelector('.metric-subtitle');
                    if (subtitleElement) {
                        subtitleElement.textContent = subtitle;
                    }
                }
            }
        }
        
        _formatTime(minutes) {
            if (!minutes || isNaN(minutes) || minutes <= 0) return '0–º';
            
            const hours = Math.floor(minutes / 60);
            const mins = Math.round(minutes % 60);
            
            if (hours > 0) {
                return `${hours}—á ${mins}–º`;
            } else {
                return `${mins}–º`;
            }
        }
        
        _safeRound(value) {
            if (typeof value !== 'number' || isNaN(value)) return 0;
            return Math.round(value);
        }
        
        _processQueue() {
            if (this.updateQueue.length > 0) {
                const nextUpdate = this.updateQueue.shift();
                setTimeout(() => {
                    this.safeUpdateMetrics(nextUpdate.data, nextUpdate.source + '-queued');
                }, this.updateThrottle);
            }
        }
    }
    
    // ==================== 3. –°–û–ó–î–ê–ù–ò–ï –ï–î–ò–ù–û–ì–û –ú–ï–ù–ï–î–ñ–ï–†–ê ====================
    
    const metricsManager = new MetricsManager();
    
    // ==================== 4. –ü–ï–†–ï–û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ö–û–ù–§–õ–ò–ö–¢–£–Æ–©–ò–• –§–£–ù–ö–¶–ò–ô ====================
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    const originalFunctions = {
        updateMetrics: window.updateMetrics,
        updateMainMetricsWithRealActivity: window.updateMainMetricsWithRealActivity,
        updateMainMetricsWithRealActivityPrecise: window.updateMainMetricsWithRealActivityPrecise
    };
    
    // –ï–¥–∏–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫
    window.updateMetrics = function(data) {
        metricsManager.safeUpdateMetrics(data, 'updateMetrics');
    };
    
    // –ó–∞–º–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —É–º–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    window.updateMainMetricsWithRealActivity = function(windowData) {
        console.log('üîß [–§–ò–ö–°] –ü–µ—Ä–µ—Ö–≤–∞—Ç updateMainMetricsWithRealActivity');
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        if (originalFunctions.updateMainMetricsWithRealActivity) {
            try {
                originalFunctions.updateMainMetricsWithRealActivity.call(this, windowData);
            } catch (error) {
                console.error('‚ùå [–§–ò–ö–°] –û—à–∏–±–∫–∞ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞:', error);
                metricsManager.safeUpdateMetrics({ activities: windowData }, 'smart-calculator-fallback');
            }
        } else {
            metricsManager.safeUpdateMetrics({ activities: windowData }, 'smart-calculator-direct');
        }
    };
    
    // –ó–∞–º–µ–Ω–∞ —Ç–æ—á–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    window.updateMainMetricsWithRealActivityPrecise = function(windowData) {
        console.log('üîß [–§–ò–ö–°] –ü–µ—Ä–µ—Ö–≤–∞—Ç updateMainMetricsWithRealActivityPrecise');
        
        if (originalFunctions.updateMainMetricsWithRealActivityPrecise) {
            try {
                originalFunctions.updateMainMetricsWithRealActivityPrecise.call(this, windowData);
            } catch (error) {
                console.error('‚ùå [–§–ò–ö–°] –û—à–∏–±–∫–∞ –≤ —Ç–æ—á–Ω–æ–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ:', error);
                metricsManager.safeUpdateMetrics({ activities: windowData }, 'precise-calculator-fallback');
            }
        } else {
            metricsManager.safeUpdateMetrics({ activities: windowData }, 'precise-calculator-direct');
        }
    };
    
    // ==================== 5. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö ====================
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
    function safeGetElement(id) {
        const element = document.getElementById(id);
        if (!element) {
            console.warn(`‚ö†Ô∏è [–§–ò–ö–°] –≠–ª–µ–º–µ–Ω—Ç ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM`);
        }
        return element;
    }
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
    function safeUpdateElement(id, value, fallback = '-') {
        const element = safeGetElement(id);
        if (element) {
            element.textContent = value || fallback;
            return true;
        }
        return false;
    }
    
    // ==================== 6. –ó–ê–©–ò–¢–ê –û–¢ –ö–û–ù–§–õ–ò–ö–¢–û–í –ü–ê–¢–ß–ï–ô ====================
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏–º–µ–Ω—è–ª–∏—Å—å –ª–∏ —É–∂–µ –¥—Ä—É–≥–∏–µ –ø–∞—Ç—á–∏
    if (window.systemFixApplied) {
        console.warn('‚ö†Ô∏è [–§–ò–ö–°] –°–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∏–∫—Å —É–∂–µ –±—ã–ª –ø—Ä–∏–º–µ–Ω–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ —Ñ–∏–∫—Å –ø—Ä–∏–º–µ–Ω–µ–Ω
    window.systemFixApplied = true;
    
    // ==================== 7. –≠–ö–°–ü–û–†–¢ –£–¢–ò–õ–ò–¢ ====================
    
    window.smartSystemFix = {
        metricsManager: metricsManager,
        safeGetElement: safeGetElement,
        safeUpdateElement: safeUpdateElement,
        getLastLoadedData: getLastLoadedData,
        setLastLoadedData: setLastLoadedData,
        
        // –ú–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        forceUpdateMetrics: function(data, source = 'manual') {
            metricsManager.isUpdating = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
            metricsManager.safeUpdateMetrics(data, source);
        },
        
        // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
        restoreMetrics: function() {
            metricsManager._displaySavedMetrics();
        },
        
        // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        diagnostics: function() {
            return {
                lastValidMetrics: window.lastValidMetrics,
                lastValidResources: window.lastValidResources,
                isUpdating: metricsManager.isUpdating,
                queueLength: metricsManager.updateQueue.length,
                lastUpdateTime: metricsManager.lastUpdateTime,
                systemFixApplied: window.systemFixApplied
            };
        }
    };
    
    // ==================== 8. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    setTimeout(() => {
        if (document.getElementById('total-working-time')) {
            console.log('üîß [–§–ò–ö–°] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏');
            metricsManager._displaySavedMetrics();
        }
    }, 100);
    
    console.log('‚úÖ [–§–ò–ö–°] –£–º–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω!');
    console.log('üîß [–§–ò–ö–°] –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã: window.smartSystemFix');
    console.log('üìä [–§–ò–ö–°] –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: window.smartSystemFix.diagnostics()');
    
})(); 