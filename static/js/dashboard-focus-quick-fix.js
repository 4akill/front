/**
 * –ë–´–°–¢–†–´–ô –§–ò–ö–° –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ê–ù–ê–õ–ò–ó–ê –§–û–ö–£–°–ê
 * –ê–≤—Ç–æ—Ä: AI Assistant  
 * –î–∞—Ç–∞: 2025-01-24
 * –í–µ—Ä—Å–∏—è: v1.0
 * –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º duration –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ loadDashboardData
 */

console.log('üîß [DASHBOARD-FOCUS-FIX] –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä—ã–π —Ñ–∏–∫—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–∞');

/**
 * –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º loadDashboardData —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç—Ç—É–¥–∞
 */
function interceptLoadDashboardData() {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    if (typeof loadDashboardData === 'function' && !window.originalLoadDashboardData) {
        window.originalLoadDashboardData = loadDashboardData;
        console.log('‚úÖ [DASHBOARD-FOCUS-FIX] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è loadDashboardData');
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadDashboardData
        window.loadDashboardData = async function() {
            console.log('üîÑ [DASHBOARD-FOCUS-FIX] –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –≤—ã–∑–æ–≤ loadDashboardData');
            
            // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            const result = await window.originalLoadDashboardData.call(this);
            
            // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ñ–æ–∫—É—Å–∞
            setTimeout(() => {
                processLoadedDataForFocus();
            }, 1000);
            
            return result;
        };
        
        console.log('‚úÖ [DASHBOARD-FOCUS-FIX] –ü–µ—Ä–µ—Ö–≤–∞—Ç loadDashboardData —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–∞
 */
function processLoadedDataForFocus() {
    console.log('üîÑ [DASHBOARD-FOCUS-FIX] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–∞');
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏–∑ —Ñ–∏–ª—å—Ç—Ä–∞
    const dateFilter = document.querySelector('#date-filter');
    const selectedDate = dateFilter ? dateFilter.value : getTodayDateFix();
    
    if (!selectedDate) {
        console.warn('‚ö†Ô∏è [DASHBOARD-FOCUS-FIX] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∞—Ç—É');
        return;
    }
    
    console.log(`üìÖ [DASHBOARD-FOCUS-FIX] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –¥–∞—Ç—É: ${selectedDate}`);
    
    // –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
    let windowData = [];
    let mouseData = [];
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º window.realActivityRawData
    if (window.realActivityRawData && window.realActivityRawData.window_activity) {
        windowData = window.realActivityRawData.window_activity;
        mouseData = window.realActivityRawData.mouse_activity || [];
        console.log(`üìä [DASHBOARD-FOCUS-FIX] –ù–∞–π–¥–µ–Ω–æ –≤ realActivityRawData: ${windowData.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, ${mouseData.length} –º—ã—à–∏`);
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º window.lastLoadedData
    if ((!windowData || windowData.length === 0) && window.lastLoadedData) {
        if (window.lastLoadedData.activities) {
            windowData = window.lastLoadedData.activities;
            console.log(`üìä [DASHBOARD-FOCUS-FIX] –ù–∞–π–¥–µ–Ω–æ –≤ lastLoadedData: ${windowData.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`);
        }
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
    if ((!windowData || windowData.length === 0)) {
        try {
            const storedData = localStorage.getItem('windowActivities');
            if (storedData) {
                windowData = JSON.parse(storedData);
                console.log(`üìä [DASHBOARD-FOCUS-FIX] –ù–∞–π–¥–µ–Ω–æ –≤ localStorage: ${windowData.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`);
            }
        } catch (e) {
            console.warn('‚ö†Ô∏è [DASHBOARD-FOCUS-FIX] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage:', e);
        }
    }
    
    // 4. –ù–û–í–û–ï: –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏
    if ((!windowData || windowData.length === 0)) {
        console.log('üîç [DASHBOARD-FOCUS-FIX] –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        const possibleSources = [
            'window.currentActivityData',
            'window.loadedActivities', 
            'window.dashboardData',
            'window.activityResults',
            'window.lastApiResponse'
        ];
        
        for (const sourceName of possibleSources) {
            try {
                const source = eval(sourceName);
                if (source && Array.isArray(source) && source.length > 0) {
                    windowData = source;
                    console.log(`üìä [DASHBOARD-FOCUS-FIX] –ù–∞–π–¥–µ–Ω–æ –≤ ${sourceName}: ${windowData.length} –∑–∞–ø–∏—Å–µ–π`);
                    break;
                }
            } catch (e) {
                // –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            }
        }
        
        // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
        if ((!windowData || windowData.length === 0)) {
            console.log('üîß [DASHBOARD-FOCUS-FIX] –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞');
            windowData = createTestDataFromConsoleOutput(selectedDate);
        }
    }
    
    if (!windowData || windowData.length === 0) {
        console.warn('‚ö†Ô∏è [DASHBOARD-FOCUS-FIX] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
        updateMetricsToZeroFix();
        return;
    }
    
    console.log(`üìä [DASHBOARD-FOCUS-FIX] –û–±—â–∏–π –æ–±—ä–µ–º –¥–∞–Ω–Ω—ã—Ö: ${windowData.length} –∑–∞–ø–∏—Å–µ–π`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    if (typeof updateMetricsUniversal === 'function') {
        console.log('üßÆ [DASHBOARD-FOCUS-FIX] –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –º–µ—Ç—Ä–∏–∫');
        updateMetricsUniversal(windowData, selectedDate);
    } else if (typeof updateMainMetricsWithRealActivity === 'function') {
        console.log('üß† [DASHBOARD-FOCUS-FIX] –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏');
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
        const filteredData = windowData.filter(activity => {
            const timeField = activity.timestamp || activity.start_time;
            if (!timeField) return false;
            
            try {
                const activityDate = new Date(timeField).toISOString().split('T')[0];
                return activityDate === selectedDate;
            } catch (e) {
                return false;
            }
        });
        
        console.log(`üìä [DASHBOARD-FOCUS-FIX] –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ: ${filteredData.length} –∑–∞–ø–∏—Å–µ–π`);
        
        if (filteredData.length > 0) {
            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –±–µ–∑ duration
            const processedData = filteredData.map(activity => ({
                ...activity,
                duration: activity.duration || 60000 // 60 —Å–µ–∫—É–Ω–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            }));
            
            updateMainMetricsWithRealActivity(processedData, mouseData, selectedDate);
        } else {
            updateMetricsToZeroFix();
        }
    } else {
        // Fallback: —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
        console.log('üîÑ [DASHBOARD-FOCUS-FIX] –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫');
        
        const filteredData = windowData.filter(activity => {
            const timeField = activity.timestamp || activity.start_time;
            if (!timeField) return false;
            
            try {
                const activityDate = new Date(timeField).toISOString().split('T')[0];
                return activityDate === selectedDate;
            } catch (e) {
                return false;
            }
        });
        
        if (filteredData.length > 0) {
            const metrics = calculateSimpleMetrics(filteredData);
            updateMetricsManually(metrics);
        } else {
            updateMetricsToZeroFix();
        }
    }
    
    console.log('‚úÖ [DASHBOARD-FOCUS-FIX] –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫ –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏
 */
function calculateSimpleMetrics(data) {
    let totalTime = 0; // –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    let productiveTime = 0;
    let backgroundTime = 0;
    
    // –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    const productiveApps = ['Cursor.exe', 'firefox.exe', 'msedge.exe', 'chrome.exe', 'Code.exe'];
    
    // –°–ø–∏—Å–æ–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π  
    const backgroundApps = ['Video.UI.exe', 'Y.Music.exe', 'SystemSettings.exe', 'NVIDIA Overlay.exe', 
                           'TextInputHost.exe', 'RdClient.Windows.exe', 'SndVol.exe', 'CalculatorApp.exe'];
    
    data.forEach(activity => {
        const duration = parseInt(activity.duration) || 60000;
        const appName = activity.app_name || '';
        
        totalTime += duration;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if (backgroundApps.some(bg => appName.includes(bg.replace('.exe', '')))) {
            backgroundTime += duration;
        } else if (productiveApps.some(prod => appName.includes(prod.replace('.exe', '')))) {
            productiveTime += duration;
        } else {
            // –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å—á–∏—Ç–∞–µ–º —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º–∏
            productiveTime += duration * 0.5;
        }
    });
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    totalTime = Math.round(totalTime / 1000);
    productiveTime = Math.round(productiveTime / 1000);
    backgroundTime = Math.round(backgroundTime / 1000);
    
    const productivity = totalTime > 0 ? Math.round((productiveTime / totalTime) * 100) : 0;
    
    console.log(`üìä [DASHBOARD-FOCUS-FIX] –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:`, {
        totalTime: `${Math.floor(totalTime/60)}–º ${totalTime%60}—Å`,
        productiveTime: `${Math.floor(productiveTime/60)}–º ${productiveTime%60}—Å`,
        backgroundTime: `${Math.floor(backgroundTime/60)}–º ${backgroundTime%60}—Å`,
        productivity: `${productivity}%`
    });
    
    return {
        totalTime,
        productiveTime,
        backgroundTime,
        productivity
    };
}

/**
 * –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
 */
function updateMetricsManually(metrics) {
    console.log('üìä [DASHBOARD-FOCUS-FIX] –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
    updateElementSafely('#total-working-time', formatTimeFromSeconds(metrics.totalTime));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è
    updateElementSafely('#productive-time', formatTimeFromSeconds(metrics.productiveTime));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    updateElementSafely('#activity-score', `${metrics.productivity}%`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ñ–æ–Ω–∞
    updateElementSafely('#break-time', formatTimeFromSeconds(metrics.backgroundTime));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏
    updateSubtitleSafely('#productive-time', `${metrics.productivity}% –æ—Ç –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏`);
    updateSubtitleSafely('#activity-score', '–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    updateSubtitleSafely('#break-time', '–§–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å');
    
    console.log('‚úÖ [DASHBOARD-FOCUS-FIX] –ú–µ—Ç—Ä–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
 */
function updateElementSafely(selector, value) {
    const element = document.querySelector(selector);
    if (element) {
        element.textContent = value;
        console.log(`üìä [DASHBOARD-FOCUS-FIX] –û–±–Ω–æ–≤–ª–µ–Ω ${selector}: ${value}`);
    } else {
        console.warn(`‚ö†Ô∏è [DASHBOARD-FOCUS-FIX] –≠–ª–µ–º–µ–Ω—Ç ${selector} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞
 */
function updateSubtitleSafely(selector, subtitle) {
    const element = document.querySelector(selector);
    if (element) {
        const subtitleElement = element.parentElement?.querySelector('.metric-subtitle');
        if (subtitleElement) {
            subtitleElement.textContent = subtitle;
        }
    }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ —Å–µ–∫—É–Ω–¥
 */
function formatTimeFromSeconds(seconds) {
    if (seconds === 0) return '0–º';
    
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    
    if (hours === 0) {
        return `${minutes}–º`;
    }
    return `${hours}—á ${minutes}–º`;
}

/**
 * –û–±–Ω—É–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫
 */
function updateMetricsToZeroFix() {
    console.log('üìä [DASHBOARD-FOCUS-FIX] –û–±–Ω—É–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
    
    updateElementSafely('#total-working-time', '0–º');
    updateElementSafely('#productive-time', '0–º');
    updateElementSafely('#activity-score', '0%');
    updateElementSafely('#break-time', '0–º');
    
    updateSubtitleSafely('#total-working-time', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É');
    updateSubtitleSafely('#productive-time', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
    updateSubtitleSafely('#activity-score', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
    updateSubtitleSafely('#break-time', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
 */
function getTodayDateFix() {
    const today = new Date();
    return today.toISOString().split('T')[0];
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏
 */
function createTestDataFromConsoleOutput(selectedDate) {
    console.log('üîß [DASHBOARD-FOCUS-FIX] –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞');
    
    // –°–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏
    const appsFromConsole = [
        'firefox.exe', 'msedge.exe', 'Video.UI.exe', 'Y.Music.exe',
        'SystemSettings.exe', 'Telegram.exe', 'TextInputHost.exe',
        'RdClient.Windows.exe', 'SndVol.exe', 'NVIDIA Overlay.exe',
        'CalculatorApp.exe', 'Cursor.exe'
    ];
    
    const testData = [];
    const baseTime = new Date(`${selectedDate}T12:13:00`);
    
    appsFromConsole.forEach((appName, index) => {
        // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        for (let i = 0; i < 3; i++) {
            const timestamp = new Date(baseTime.getTime() + (index * 60000) + (i * 10000));
            testData.push({
                timestamp: timestamp.toISOString(),
                app_name: appName,
                duration: 60000, // 60 —Å–µ–∫—É–Ω–¥ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
                window_title: `${appName} - Window ${i + 1}`
            });
        }
    });
    
    console.log(`üîß [DASHBOARD-FOCUS-FIX] –°–æ–∑–¥–∞–Ω–æ ${testData.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π`);
    return testData;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
 */
function initDashboardFocusFix() {
    console.log('üîß [DASHBOARD-FOCUS-FIX] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ñ–∏–∫—Å–∞');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç loadDashboardData
    interceptLoadDashboardData();
    
    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Ö
    setTimeout(() => {
        processLoadedDataForFocus();
    }, 2000);
    
    console.log('‚úÖ [DASHBOARD-FOCUS-FIX] –ë—ã—Å—Ç—Ä—ã–π —Ñ–∏–∫—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(() => {
        initDashboardFocusFix();
    }, 1500);
});

console.log('üîß [DASHBOARD-FOCUS-FIX] –ë—ã—Å—Ç—Ä—ã–π —Ñ–∏–∫—Å –∑–∞–≥—Ä—É–∂–µ–Ω'); 