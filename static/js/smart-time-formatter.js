/**
 * Smart Time Formatter Module
 * –ú–æ–¥—É–ª—å —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
 * –í–µ—Ä—Å–∏—è: 1.0
 * –î–∞—Ç–∞: 2025-01-27
 * –ê–≤—Ç–æ—Ä: AI Assistant
 */

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
function formatDurationSmart(seconds) {
    console.log('üïí –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è:', seconds);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (seconds === null || seconds === undefined || isNaN(seconds) || seconds < 0) {
        return '0—Å';
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª–æ–≥–æ
    const totalSeconds = Math.round(Number(seconds));
    
    if (totalSeconds === 0) {
        return '0—Å';
    }
    
    const hours = Math.floor(totalSeconds / 3600);
    const minutes = Math.floor((totalSeconds % 3600) / 60);
    const remainingSeconds = totalSeconds % 60;
    
    const parts = [];
    
    if (hours > 0) {
        parts.push(`${hours}—á`);
    }
    if (minutes > 0) {
        parts.push(`${minutes}–º`);
    }
    if (remainingSeconds > 0 || parts.length === 0) {
        parts.push(`${remainingSeconds}—Å`);
    }
    
    const result = parts.join(' ');
    console.log('‚úÖ –í—Ä–µ–º—è –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–æ:', result);
    return result;
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ø–∞–ø–∫–∞—Ö
function processFolderActivitySmart(windowData) {
    console.log('üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ø–∞–ø–∫–∞—Ö (—É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)');
    const folderStats = {};

    windowData.forEach(item => {
        const windowTitle = item.window_title || '';
        const appName = (item.app_name || '').toLowerCase();
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ –∏ —Ñ–∞–π–ª–æ–≤—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–∞—Ö
        const isFileManager = appName.includes('explorer') || 
                             appName.includes('totalcmd') || 
                             appName.includes('winrar') || 
                             appName.includes('7z') ||
                             windowTitle.includes('\\') ||
                             windowTitle.match(/[A-Z]:\\/);
        
        if (!isFileManager) {
            return;
        }
        
        let folderPath = null;
        
        // –†–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø—É—Ç–∏ –ø–∞–ø–∫–∏
        if (windowTitle.includes(' - ')) {
            // –§–æ—Ä–º–∞—Ç "Filename - Folder"
            const parts = windowTitle.split(' - ');
            if (parts.length >= 2) {
                const pathPart = parts[parts.length - 1];
                if (pathPart.match(/[A-Z]:\\/)) {
                    folderPath = pathPart;
                }
            }
        }
        
        // –ü—Ä—è–º–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        if (!folderPath) {
            const pathMatch = windowTitle.match(/([A-Z]:\\[^"<>|?*\n\r]+)/i);
            if (pathMatch) {
                folderPath = pathMatch[1].trim();
            }
        }
        
        // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–∏–ø–∞ "Documents (C:\Users\...)"
        if (!folderPath) {
            const bracketMatch = windowTitle.match(/\(([A-Z]:\\[^)]+)\)/i);
            if (bracketMatch) {
                folderPath = bracketMatch[1];
            }
        }
        
        // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –¥–∏—Å–∫
        if (!folderPath && windowTitle.match(/^[A-Z]:\s*$/)) {
            folderPath = windowTitle.trim();
        }
        
        // –ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –ø–∞–ø–∫–∞–º Windows
        if (!folderPath) {
            const standardFolders = [
                '–î–æ–∫—É–º–µ–Ω—Ç—ã', 'Documents', '–ó–∞–≥—Ä—É–∑–∫–∏', 'Downloads', 
                '–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª', 'Desktop', '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'Pictures',
                '–ú—É–∑—ã–∫–∞', 'Music', '–í–∏–¥–µ–æ', 'Videos'
            ];
            
            for (const folder of standardFolders) {
                if (windowTitle.includes(folder)) {
                    folderPath = folder;
                    break;
                }
            }
        }
        
        if (folderPath) {
            // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—É—Ç—å
            folderPath = folderPath.replace(/\/$/, '');
            
            if (!folderStats[folderPath]) {
                folderStats[folderPath] = {
                    folder_path: folderPath,
                    duration: 0,
                    visits: 0
                };
            }
            folderStats[folderPath].duration += item.duration || 0;
            folderStats[folderPath].visits += 1;
            
            console.log(`üìÇ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–∞–ø–∫–∞: ${folderPath} (${Math.round((item.duration || 0)/60)}–º)`);
        }
    });

    const result = Object.values(folderStats);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${result.length} –ø–∞–ø–æ–∫ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é`);
    return result;
}

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
if (typeof window !== 'undefined') {
    // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –Ω–æ–≤—É—é
    const originalFormatDuration = window.formatDuration;
    window.formatDuration = formatDurationSmart;
    window.formatDurationSmart = formatDurationSmart;
    
    const originalProcessFolderActivity = window.processFolderActivity;
    window.processFolderActivity = processFolderActivitySmart;
    window.processFolderActivitySmart = processFolderActivitySmart;
    
    console.log('üîÑ –§—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∞–ø–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
} 