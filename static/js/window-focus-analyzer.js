/**
 * –£–ú–ù–´–ô –ê–ù–ê–õ–ò–ó–ê–¢–û–† –§–û–ö–£–°–ê –û–ö–û–ù
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω, –º—ã—à–∏ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º
 * –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (¬±5 —Å–µ–∫—É–Ω–¥) –∏ —Å–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
 */

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
const FOCUS_ANALYZER_CONSTANTS = {
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤ –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    MAX_GAP_SECONDS: 30,
    
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∞ —Ñ–æ–∫—É—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    MIN_FOCUS_PERIOD_SECONDS: 10,
    
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ —Ñ–æ–∫—É—Å–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    MAX_FOCUS_PERIOD_SECONDS: 3600, // 1 —á–∞—Å
    
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª—É—á—à–µ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    PROCESS_PRIORITIES: {
        'Cursor.exe': 10,
        'Code.exe': 9,
        'msedge.exe': 8,
        'firefox.exe': 8,
        'brave.exe': 8,
        'chrome.exe': 8,
        'notepad.exe': 7,
        'Telegram.exe': 6,
        'WhatsApp.exe': 6,
        'CalculatorApp.exe': 5,
        'SystemSettings.exe': 2,
        'TextInputHost.exe': 1,
        'NVIDIA Overlay.exe': 1,
        'Video.UI.exe': 1,
        'Y.Music.exe': 3
    },
    
    // –§–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (–∏—Å–∫–ª—é—á–∞—é—Ç—Å—è –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞)
    BACKGROUND_PROCESSES: [
        'NVIDIA Overlay.exe',
        'TextInputHost.exe',
        'Video.UI.exe',
        'SystemSettings.exe',
        'dwm.exe',
        'explorer.exe',
        'winlogon.exe',
        'csrss.exe',
        'wininit.exe',
        'services.exe',
        'lsass.exe',
        'svchost.exe',
        'RuntimeBroker.exe',
        'ApplicationFrameHost.exe',
        'ShellExperienceHost.exe',
        'StartMenuExperienceHost.exe',
        'SearchUI.exe',
        'MsMpEng.exe',
        'SecurityHealthSystray.exe'
    ]
};

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–∞ –æ–∫–æ–Ω
 * @param {string} selectedDate - –í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
 */
async function analyzeFocus(selectedDate) {
    console.log('üß† –ù–∞—á–∏–Ω–∞–µ–º —É–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–æ–∫—É—Å–∞ –æ–∫–æ–Ω –¥–ª—è –¥–∞—Ç—ã:', selectedDate);
    
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const analyzeBtn = document.getElementById('analyze-focus-btn');
        const originalText = analyzeBtn.innerHTML;
        analyzeBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...';
        analyzeBtn.disabled = true;
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
        const allData = await loadAllDataForAnalysis(selectedDate);
        
        if (!allData || Object.keys(allData).length === 0) {
            throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
        }
        
        console.log('üìä –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:', {
            windowActivities: allData.windowActivities?.length || 0,
            mouseActivities: allData.mouseActivities?.length || 0,
            resourceData: allData.resourceData?.length || 0,
            browserActivities: allData.browserActivities?.length || 0,
            websiteVisits: allData.websiteVisits?.length || 0
        });
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º —É–º–Ω–æ–µ —Å–ª–∏—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        const mergedData = performSmartMerging(allData);
        console.log('üîÑ –°–æ–∑–¥–∞–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:', mergedData.length);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        window.lastAnalyzedData = mergedData;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        window.lastAnalyzedRawData = allData;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        updateFocusTable(mergedData);
        
        // üîó –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞
        updateDashboardMetricsFromFocusAnalyzer(allData);
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        analyzeBtn.innerHTML = originalText;
        analyzeBtn.disabled = false;
        
        console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ —Ñ–æ–∫—É—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–æ–∫—É—Å–∞:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ —Ç–∞–±–ª–∏—Ü–µ
        const tbody = document.querySelector('#window-focus-table tbody');
        tbody.innerHTML = `
            <tr>
                <td colspan="8" class="text-center text-danger">
                    <i class="bi bi-exclamation-triangle"></i> 
                    –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: ${error.message}
                </td>
            </tr>
        `;
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        const analyzeBtn = document.getElementById('analyze-focus-btn');
        analyzeBtn.innerHTML = '<i class="bi bi-cpu"></i> –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ–∫—É—Å';
        analyzeBtn.disabled = false;
    }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
 * @param {string} selectedDate - –î–∞—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */
async function loadAllDataForAnalysis(selectedDate) {
    console.log('üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:', { selectedDate });
    
    try {
        const employeeId = getCurrentEmployeeId();
        const deviceId = getCurrentDeviceId();
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
        const baseParams = new URLSearchParams({
            start_date: selectedDate,
            end_date: selectedDate
        });
        
        if (employeeId) baseParams.append('employee_id', employeeId);
        if (deviceId) baseParams.append('device_id', deviceId);
        
        console.log('üì° –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:', baseParams.toString());
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å–æ –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
        const [
            activitiesResponse,
            mouseResponse,
            monitoringResponse,
            browserResponse,
            websiteResponse
        ] = await Promise.allSettled([
            fetch(`/api/public/activity/windows?${baseParams}`),
            fetch(`/api/public/activity/mouse?${baseParams}`),
            fetch(`/api/public/monitoring/data?${baseParams}`),
            fetch(`/api/public/browser-activity?${baseParams}`),
            fetch(`/api/public/activity/website_visits?${baseParams}`)
        ]);
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const windowActivities = await handleResponse(activitiesResponse, 'activity/windows');
        const mouseActivities = await handleResponse(mouseResponse, 'activity/mouse');
        const resourceData = await handleResponse(monitoringResponse, 'monitoring/data');
        const browserActivities = await handleResponse(browserResponse, 'browser-activity');
        const websiteVisits = await handleResponse(websiteResponse, 'activity/website_visits');
        
        const allData = {
            windowActivities: windowActivities || [],
            mouseActivities: mouseActivities || [],
            resourceData: resourceData || [],
            browserActivities: browserActivities || [],
            websiteVisits: websiteVisits || []
        };
        
        console.log('üìä –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å–æ –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:', {
            windowActivities: allData.windowActivities.length,
            mouseActivities: allData.mouseActivities.length,
            resourceData: allData.resourceData.length,
            browserActivities: allData.browserActivities.length,
            websiteVisits: allData.websiteVisits.length
        });
        
        return allData;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:', error);
        
        // Fallback: –ø—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        console.log('üîÑ –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
        return await loadDataFromCache(selectedDate);
    }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç API
 * @param {Promise} responsePromise - –ü—Ä–æ–º–∏—Å –æ—Ç–≤–µ—Ç–∞
 * @param {string} endpointName - –ù–∞–∑–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * @returns {Array} - –î–∞–Ω–Ω—ã–µ –∏–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
 */
async function handleResponse(responsePromise, endpointName) {
    try {
        if (responsePromise.status === 'fulfilled') {
            const response = responsePromise.value;
            if (response.ok) {
                const data = await response.json();
                console.log(`‚úÖ ${endpointName}: –ø–æ–ª—É—á–µ–Ω–æ ${Array.isArray(data) ? data.length : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} –∑–∞–ø–∏—Å–µ–π`);
                return Array.isArray(data) ? data : [];
            } else {
                console.warn(`‚ö†Ô∏è ${endpointName}: HTTP ${response.status}`);
                return [];
            }
        } else {
            console.warn(`‚ö†Ô∏è ${endpointName}: –∑–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω -`, responsePromise.reason);
            return [];
        }
    } catch (error) {
        console.warn(`‚ö†Ô∏è ${endpointName}: –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ -`, error);
        return [];
    }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞ (fallback)
 * @param {string} selectedDate - –î–∞—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
 * @returns {Object} - –î–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞
 */
async function loadDataFromCache(selectedDate) {
    console.log('üîÑ –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞...');
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞
    if (window.lastLoadedData) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ window.lastLoadedData');
        return {
            windowActivities: window.lastLoadedData.activities || [],
            mouseActivities: window.lastLoadedData.mouse || [],
            resourceData: window.lastLoadedData.monitoring || [],
            browserActivities: window.lastLoadedData.browser || [],
            websiteVisits: window.lastLoadedData.websites || []
        };
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –∫—ç—à–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∫—ç—à–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –º–∞—Å—Å–∏–≤—ã');
    return {
        windowActivities: [],
        mouseActivities: [],
        resourceData: [],
        browserActivities: [],
        websiteVisits: []
    };
}

/**
 * –£–º–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–∞—Ç–µ
 * @param {Array} dataArray - –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
 * @param {string} targetDate - –¶–µ–ª–µ–≤–∞—è –¥–∞—Ç–∞
 * @returns {Array} - –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
function filterByDate(dataArray, targetDate) {
    if (!Array.isArray(dataArray) || dataArray.length === 0) {
        return [];
    }
    
    console.log(`üîç –§–∏–ª—å—Ç—Ä—É–µ–º ${dataArray.length} –∑–∞–ø–∏—Å–µ–π –ø–æ –¥–∞—Ç–µ ${targetDate}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞—Ç –≤ –¥–∞–Ω–Ω—ã—Ö
    const sampleTimestamps = dataArray.slice(0, 3).map(item => item.timestamp);
    console.log('üìÖ –ü—Ä–∏–º–µ—Ä—ã –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –≤ –¥–∞–Ω–Ω—ã—Ö:', sampleTimestamps);
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç
    const targetDateObj = new Date(targetDate);
    const targetDateStr = targetDate; // YYYY-MM-DD
    const targetDateStrAlt = targetDateObj.toISOString().split('T')[0]; // YYYY-MM-DD
    
    console.log('üéØ –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –¥–∞—Ç:', [targetDateStr, targetDateStrAlt]);
    
    const filtered = dataArray.filter(item => {
        if (!item.timestamp) return false;
        
        try {
            const itemDate = new Date(item.timestamp);
            const itemDateStr = itemDate.toISOString().split('T')[0];
            
            // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
            const matches = itemDateStr === targetDateStr || 
                           itemDateStr === targetDateStrAlt ||
                           item.timestamp.startsWith(targetDateStr);
            
            return matches;
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã:', item.timestamp, error);
            return false;
        }
    });
    
    console.log(`‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${filtered.length} –∏–∑ ${dataArray.length} –∑–∞–ø–∏—Å–µ–π`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
    if (filtered.length > 0) {
        const filteredSamples = filtered.slice(0, 3).map(item => item.timestamp);
        console.log('üìÖ –ü—Ä–∏–º–µ—Ä—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫:', filteredSamples);
    }
    
    return filtered;
}

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç —É–º–Ω–æ–µ —Å–ª–∏—è–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –ª–æ–≥–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–∏–æ–¥–∞–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @param {Object} allData - –í—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–∏—è–Ω–∏—è
 * @returns {Array} - –ú–∞—Å—Å–∏–≤ –ø–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞
 */
function performSmartMerging(allData) {
    console.log('üß† –ù–∞—á–∏–Ω–∞–µ–º —É–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞...');
    
    const { windowActivities, mouseActivities, resourceData, browserActivities } = allData;
    
    if (!windowActivities || windowActivities.length === 0) {
        console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
        return [];
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    const sortedActivities = windowActivities
        .map(activity => ({
            ...activity,
            timestamp: new Date(activity.timestamp),
            appName: activity.app_name || activity.application,
            isBackground: isBackgroundProcess(activity.app_name || activity.application)
        }))
        .sort((a, b) => a.timestamp - b.timestamp);
    
    console.log(`üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º ${sortedActivities.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –æ–∫–æ–Ω`);
    
    // –°–æ–∑–¥–∞—ë–º –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã —Ñ–æ–∫—É—Å–∞
    const focusPeriods = createFocusPeriods(sortedActivities);
    
    // –û–±–æ–≥–∞—â–∞–µ–º –ø–µ—Ä–∏–æ–¥—ã –¥–∞–Ω–Ω—ã–º–∏ –º—ã—à–∏ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    const enrichedPeriods = enrichPeriodsWithAdditionalData(focusPeriods, mouseActivities, resourceData, browserActivities);
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${enrichedPeriods.length} –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞`);
    return enrichedPeriods;
}

/**
 * –°–æ–∑–¥–∞—ë—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã —Ñ–æ–∫—É—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –æ–∫–æ–Ω
 * @param {Array} sortedActivities - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @returns {Array} - –ü–µ—Ä–∏–æ–¥—ã —Ñ–æ–∫—É—Å–∞
 */
function createFocusPeriods(sortedActivities) {
    const focusPeriods = [];
    let currentPeriod = null;
    
    for (let i = 0; i < sortedActivities.length; i++) {
        const activity = sortedActivities[i];
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤
        if (activity.isBackground) {
            continue;
        }
        
        // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–ª–∏ –ø—Ä–æ—à–ª–æ –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π
        if (!currentPeriod || shouldStartNewPeriod(currentPeriod, activity)) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–π
            if (currentPeriod && isValidPeriod(currentPeriod)) {
                focusPeriods.push(currentPeriod);
            }
            
            // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
            currentPeriod = {
                startTime: activity.timestamp,
                endTime: activity.timestamp,
                primaryApp: activity.appName,
                activities: [activity],
                apps: new Set([activity.appName]),
                totalActivities: 1
            };
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É –ø–µ—Ä–∏–æ–¥—É
            currentPeriod.endTime = activity.timestamp;
            currentPeriod.activities.push(activity);
            currentPeriod.apps.add(activity.appName);
            currentPeriod.totalActivities++;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            updatePrimaryApp(currentPeriod, activity);
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–∏–æ–¥
    if (currentPeriod && isValidPeriod(currentPeriod)) {
        focusPeriods.push(currentPeriod);
    }
    
    return focusPeriods;
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @param {Object} currentPeriod - –¢–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥
 * @param {Object} activity - –ù–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 * @returns {boolean} - true –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
 */
function shouldStartNewPeriod(currentPeriod, activity) {
    // –í—Ä–µ–º—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const timeSinceLastActivity = (activity.timestamp - currentPeriod.endTime) / 1000;
    
    // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ - –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
    if (timeSinceLastActivity > FOCUS_ANALYZER_CONSTANTS.MAX_GAP_SECONDS) {
        return true;
    }
    
    // –ï—Å–ª–∏ —Å–º–µ–Ω–∏–ª–æ—Å—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ - –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
    if (activity.appName !== currentPeriod.primaryApp && timeSinceLastActivity > 10) {
        return true;
    }
    
    return false;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–∏–æ–¥ –≤–∞–ª–∏–¥–Ω—ã–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @returns {boolean} - true –µ—Å–ª–∏ –ø–µ—Ä–∏–æ–¥ –≤–∞–ª–∏–¥–µ–Ω
 */
function isValidPeriod(period) {
    const duration = (period.endTime - period.startTime) / 1000;
    return duration >= FOCUS_ANALYZER_CONSTANTS.MIN_FOCUS_PERIOD_SECONDS;
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @param {Object} activity - –ù–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 */
function updatePrimaryApp(period, activity) {
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
    const appCounts = {};
    period.activities.forEach(act => {
        appCounts[act.appName] = (appCounts[act.appName] || 0) + 1;
    });
    
    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
    let maxCount = 0;
    let primaryApp = period.primaryApp;
    
    for (const [app, count] of Object.entries(appCounts)) {
        const priority = FOCUS_ANALYZER_CONSTANTS.PROCESS_PRIORITIES[app] || 0;
        const score = count + priority * 0.1; // –£—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        
        if (score > maxCount) {
            maxCount = score;
            primaryApp = app;
        }
    }
    
    period.primaryApp = primaryApp;
}

/**
 * –û–±–æ–≥–∞—â–∞–µ—Ç –ø–µ—Ä–∏–æ–¥—ã —Ñ–æ–∫—É—Å–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 * @param {Array} focusPeriods - –ü–µ—Ä–∏–æ–¥—ã —Ñ–æ–∫—É—Å–∞
 * @param {Array} mouseActivities - –î–∞–Ω–Ω—ã–µ –º—ã—à–∏
 * @param {Array} resourceData - –î–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param {Array} browserActivities - –î–∞–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä–∞
 * @returns {Array} - –û–±–æ–≥–∞—â—ë–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
 */
function enrichPeriodsWithAdditionalData(focusPeriods, mouseActivities, resourceData, browserActivities) {
    return focusPeriods.map(period => {
        const duration = Math.round((period.endTime - period.startTime) / 1000);
        
        // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –º—ã—à–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        const periodMouseData = mouseActivities.filter(mouse => {
            const mouseTime = new Date(mouse.timestamp);
            return mouseTime >= period.startTime && mouseTime <= period.endTime;
        });
        
        // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        const periodResourceData = resourceData.filter(resource => {
            const resourceTime = new Date(resource.timestamp);
            return resourceTime >= period.startTime && resourceTime <= period.endTime;
        });
        
        // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        const periodBrowserData = browserActivities.filter(browser => {
            const browserTime = new Date(browser.timestamp);
            return browserTime >= period.startTime && browserTime <= period.endTime;
        });
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º—ã—à–∏
        const mouseAnalysis = analyzeMouseActivity(periodMouseData);
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã
        const resourceAnalysis = analyzeResourceUsage(periodResourceData);
        
        // üß† –ù–û–í–û–ï: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–æ–∫—É—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
        const humanFocusAnalysis = analyzeHumanFocusWithSystemMetrics(period, periodMouseData, periodResourceData);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—Ç–µ–ø–µ—Ä—å —Å —É—á–µ—Ç–æ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞)
        const bestActivity = period.activities.find(act => act.appName === period.primaryApp) || period.activities[0];
        const activityStatus = determineActivityStatusWithFocus(bestActivity, mouseAnalysis, resourceAnalysis, humanFocusAnalysis);
        
        // –°–æ–∑–¥–∞—ë–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        const details = createDetailedInfo(period.activities, periodBrowserData);
        
        console.log(`üìä –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞: ${period.primaryApp}, ${formatDuration(duration)}, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${period.totalActivities}, –º—ã—à—å: ${mouseAnalysis.clicks}–∫/${mouseAnalysis.movements}–¥, üß† —Ñ–æ–∫—É—Å: ${humanFocusAnalysis.score}% (${humanFocusAnalysis.level})`);
        
        return {
            timestamp: period.startTime,
            appName: period.primaryApp,
            windowTitle: bestActivity.window_title || bestActivity.title || '',
            details: details,
            duration: duration,
            mouseActivity: mouseAnalysis,
            cpuUsage: resourceAnalysis.cpu,
            ramUsage: resourceAnalysis.ram,
            gpuUsage: resourceAnalysis.gpu,
            networkUsage: resourceAnalysis.network,
            // üß† –ù–û–í–û–ï: –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
            humanFocus: humanFocusAnalysis,
            status: activityStatus,
            rawActivities: period.activities,
            activitiesCount: period.totalActivities,
            isBackground: false, // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ñ–æ–Ω–æ–≤—ã–º–∏
            apps: Array.from(period.apps),
            startTime: period.startTime,
            endTime: period.endTime
        };
    });
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
 * @param {Object} activity - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 * @param {Object} mouseAnalysis - –ê–Ω–∞–ª–∏–∑ –º—ã—à–∏
 * @param {Object} resourceAnalysis - –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param {Object} humanFocusAnalysis - –ê–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
 * @returns {string} - –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
function determineActivityStatusWithFocus(activity, mouseAnalysis, resourceAnalysis, humanFocusAnalysis) {
    const appName = activity.app_name || activity.application;
    
    if (isBackgroundProcess(appName)) {
        return '–§–æ–Ω';
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ü–µ–Ω–∫—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    if (humanFocusAnalysis.score >= 80) {
        return '–í—ã—Å–æ–∫–∏–π —Ñ–æ–∫—É—Å';
    } else if (humanFocusAnalysis.score >= 60) {
        return '–°—Ä–µ–¥–Ω–∏–π —Ñ–æ–∫—É—Å';
    } else if (humanFocusAnalysis.score >= 40) {
        return '–ù–∏–∑–∫–∏–π —Ñ–æ–∫—É—Å';
    } else if (mouseAnalysis.isActive) {
        return '–ê–∫—Ç–∏–≤–µ–Ω';
    } else if (resourceAnalysis.cpu.value > 20) {
        return '–†–∞–±–æ—Ç–∞–µ—Ç';
    } else {
        return '–ü–∞—Å—Å–∏–≤–µ–Ω';
    }
}

/**
 * –í—ã–±–∏—Ä–∞–µ—Ç –ª—É—á—à—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
 * @param {Array} activities - –ú–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 * @returns {Object} - –õ—É—á—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 */
function selectBestActivity(activities) {
    // –ò—Å–∫–ª—é—á–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    const nonBackgroundActivities = activities.filter(activity => {
        const appName = activity.app_name || activity.application;
        return !isBackgroundProcess(appName);
    });
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ-—Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –≤—ã–±–∏—Ä–∞–µ–º –∏–∑ –Ω–∏—Ö
    const candidateActivities = nonBackgroundActivities.length > 0 ? nonBackgroundActivities : activities;
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    candidateActivities.sort((a, b) => {
        const priorityA = FOCUS_ANALYZER_CONSTANTS.PROCESS_PRIORITIES[a.app_name || a.application] || 0;
        const priorityB = FOCUS_ANALYZER_CONSTANTS.PROCESS_PRIORITIES[b.app_name || b.application] || 0;
        return priorityB - priorityA;
    });
    
    return candidateActivities[0];
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 * @param {Array} activities - –ú–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 * @returns {number} - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
 */
function calculateTotalDuration(activities) {
    if (!activities || activities.length === 0) {
        return 1; // –ú–∏–Ω–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥–∞
    }
    
    // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–Ω–æ –Ω–µ –±–æ–ª–µ–µ 60 —Å–µ–∫—É–Ω–¥)
    if (activities.length === 1) {
        const duration = parseInt(activities[0].duration) || 1;
        return Math.min(duration, 60);
    }
    
    // –î–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–∏–æ–¥–∞
    const timestamps = activities.map(activity => new Date(activity.timestamp));
    const minTime = Math.min(...timestamps);
    const maxTime = Math.max(...timestamps);
    
    // –†–µ–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –ø–µ—Ä–≤–æ–π –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å—å—é
    const realDuration = Math.round((maxTime - minTime) / 1000);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–æ –Ω–µ –º–µ–Ω–µ–µ 1 —Å–µ–∫—É–Ω–¥—ã –∏ –Ω–µ –±–æ–ª–µ–µ —Ä–∞–∑—É–º–Ω–æ–≥–æ –º–∞–∫—Å–∏–º—É–º–∞
    return Math.max(realDuration, 1);
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º—ã—à–∏
 * @param {Array} mouseData - –î–∞–Ω–Ω—ã–µ –º—ã—à–∏
 * @returns {Object} - –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏
 */
function analyzeMouseActivity(mouseData) {
    if (!mouseData || mouseData.length === 0) {
        return {
            clicks: 0,
            movements: 0,
            isActive: false,
            activityLevel: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        };
    }
    
    const totalClicks = mouseData.reduce((sum, mouse) => sum + (mouse.mouse_clicks || 0), 0);
    const totalMovements = mouseData.reduce((sum, mouse) => sum + (mouse.mouse_movements || 0), 0);
    
    const isActive = totalClicks > 0 || totalMovements >= 5;
    let activityLevel = '–ù–∏–∑–∫–∞—è';
    
    if (totalClicks >= 5 || totalMovements >= 20) {
        activityLevel = '–í—ã—Å–æ–∫–∞—è';
    } else if (totalClicks >= 2 || totalMovements >= 10) {
        activityLevel = '–°—Ä–µ–¥–Ω—è—è';
    }
    
    return {
        clicks: totalClicks,
        movements: totalMovements,
        isActive: isActive,
        activityLevel: activityLevel
    };
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param {Array} resourceData - –î–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @returns {Object} - –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—É—Ä—Å–æ–≤
 */
function analyzeResourceUsage(resourceData) {
    if (!resourceData || resourceData.length === 0) {
        return {
            cpu: { value: 0, level: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' },
            ram: { value: 0, level: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' },
            gpu: { value: 0, level: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' },
            network: { value: 0, level: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' }
        };
    }
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    const avgCpu = resourceData.reduce((sum, res) => sum + (res.cpu_percent || res.cpu || 0), 0) / resourceData.length;
    const avgRam = resourceData.reduce((sum, res) => sum + (res.ram_percent || res.memory || 0), 0) / resourceData.length;
    const avgGpu = resourceData.reduce((sum, res) => sum + (res.gpu_percent || res.gpu || 0), 0) / resourceData.length;
    const avgNetwork = resourceData.reduce((sum, res) => sum + (res.network_usage || res.network || 0), 0) / resourceData.length;
    
    return {
        cpu: {
            value: Math.round(avgCpu),
            level: getCpuLevel(avgCpu)
        },
        ram: {
            value: Math.round(avgRam),
            level: getRamLevel(avgRam)
        },
        gpu: {
            value: Math.round(avgGpu),
            level: getGpuLevel(avgGpu)
        },
        network: {
            value: Math.round(avgNetwork),
            level: getNetworkLevel(avgNetwork)
        }
    };
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—É–∑–∫–∏ –¶–ü
 * @param {number} cpuPercent - –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¶–ü
 * @returns {string} - –£—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—É–∑–∫–∏
 */
function getCpuLevel(cpuPercent) {
    if (cpuPercent >= 80) return '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π';
    if (cpuPercent >= 60) return '–í—ã—Å–æ–∫–∏–π';
    if (cpuPercent >= 30) return '–°—Ä–µ–¥–Ω–∏–π';
    return '–ù–∏–∑–∫–∏–π';
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –û–ó–£
 * @param {number} ramPercent - –ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –û–ó–£
 * @returns {string} - –£—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 */
function getRamLevel(ramPercent) {
    if (ramPercent >= 85) return '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π';
    if (ramPercent >= 70) return '–í—ã—Å–æ–∫–∏–π';
    if (ramPercent >= 50) return '–°—Ä–µ–¥–Ω–∏–π';
    return '–ù–∏–∑–∫–∏–π';
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—É–∑–∫–∏ GPU
 * @param {number} gpuPercent - –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ GPU
 * @returns {string} - –£—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—É–∑–∫–∏
 */
function getGpuLevel(gpuPercent) {
    if (gpuPercent >= 90) return '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π';
    if (gpuPercent >= 70) return '–í—ã—Å–æ–∫–∏–π';
    if (gpuPercent >= 30) return '–°—Ä–µ–¥–Ω–∏–π';
    return '–ù–∏–∑–∫–∏–π';
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @param {number} networkPercent - –ü—Ä–æ—Ü–µ–Ω—Ç —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @returns {string} - –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
function getNetworkLevel(networkPercent) {
    if (networkPercent >= 80) return '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π';
    if (networkPercent >= 60) return '–í—ã—Å–æ–∫–∏–π';
    if (networkPercent >= 20) return '–°—Ä–µ–¥–Ω–∏–π';
    return '–ù–∏–∑–∫–∏–π';
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @param {Object} activity - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 * @param {Object} mouseAnalysis - –ê–Ω–∞–ª–∏–∑ –º—ã—à–∏
 * @param {Object} resourceAnalysis - –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @returns {string} - –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
function determineActivityStatus(activity, mouseAnalysis, resourceAnalysis) {
    const appName = activity.app_name || activity.application;
    
    if (isBackgroundProcess(appName)) {
        return '–§–æ–Ω';
    }
    
    if (mouseAnalysis.isActive) {
        return '–ê–∫—Ç–∏–≤–µ–Ω';
    }
    
    if (resourceAnalysis.cpu.value > 20) {
        return '–†–∞–±–æ—Ç–∞–µ—Ç';
    }
    
    return '–ü–∞—Å—Å–∏–≤–µ–Ω';
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @param {Array} activities - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @param {Array} browserData - –î–∞–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä–∞
 * @returns {string} - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
 */
function createDetailedInfo(activities, browserData) {
    const details = [];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö
    const uniqueProcesses = [...new Set(activities.map(a => a.app_name || a.application))];
    if (uniqueProcesses.length > 1) {
        details.push(`${uniqueProcesses.length} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤`);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –æ–∫–æ–Ω
    const windowTitles = activities
        .map(a => a.window_title || a.title)
        .filter(title => title && title.trim() !== '')
        .slice(0, 2);
    
    if (windowTitles.length > 0) {
        details.push(windowTitles.join(', '));
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ
    if (browserData && browserData.length > 0) {
        const urls = browserData.map(b => b.url || b.domain).filter(url => url).slice(0, 1);
        if (urls.length > 0) {
            details.push(`URL: ${urls[0]}`);
        }
    }
    
    return details.join(' | ') || '–ë–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏';
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Ñ–æ–Ω–æ–≤—ã–º
 * @param {string} appName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @returns {boolean} - true –µ—Å–ª–∏ —Ñ–æ–Ω–æ–≤—ã–π
 */
function isBackgroundProcess(appName) {
    if (!appName) return false;
    
    return FOCUS_ANALYZER_CONSTANTS.BACKGROUND_PROCESSES.some(bg => {
        const appNameLower = appName.toLowerCase();
        const bgLower = bg.toLowerCase();
        return appNameLower === bgLower || 
               appNameLower.includes(bgLower) || 
               bgLower.includes(appNameLower);
    });
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Ñ–æ–∫—É—Å–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
 * @param {Array} mergedData - –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
function updateFocusTable(mergedData) {
    const tbody = document.querySelector('#window-focus-table tbody');
    
    if (!mergedData || mergedData.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="8" class="text-center text-muted">
                    <i class="bi bi-info-circle"></i> 
                    –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç–∞
                </td>
            </tr>
        `;
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏ –≤ –Ω–∞—á–∞–ª–æ —Ç–∞–±–ª–∏—Ü—ã
    const totalStats = calculateTotalFocusStats(mergedData);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const displayMode = getDisplayMode();
    
    if (displayMode === 'smart-spoilers') {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–ø–æ–π–ª–µ—Ä–æ–≤
        const bigSpoilers = analyzeSmartSpoilers(mergedData);
        updateTableWithSmartSpoilers(bigSpoilers, mergedData);
    } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        updateTableStandard(mergedData);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –Ω–∞—á–∞–ª–æ —Ç–∞–±–ª–∏—Ü—ã
    addTotalStatsToTable(totalStats);
    
    console.log(`üìä –¢–∞–±–ª–∏—Ü–∞ —Ñ–æ–∫—É—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ —Ä–µ–∂–∏–º–µ: ${displayMode}`, totalStats);
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏ —Ñ–æ–∫—É—Å–∞
 * @param {Array} mergedData - –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞
 * @returns {Object} - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
 */
function calculateTotalFocusStats(mergedData) {
    if (!mergedData || mergedData.length === 0) {
        return {
            totalTime: 0,
            focusTime: 0,
            productiveTime: 0,
            periodsCount: 0,
            appsCount: 0,
            focusEfficiency: 0,
            // üß† –ù–û–í–û–ï: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
            humanFocusStats: {
                averageScore: 0,
                highFocusPeriods: 0,
                mediumFocusPeriods: 0,
                lowFocusPeriods: 0,
                totalFocusTime: 0,
                averageConfidence: 0
            }
        };
    }
    
    let totalTime = 0;
    let focusTime = 0;
    let productiveTime = 0;
    const uniqueApps = new Set();
    const productiveApps = new Set();
    
    // üß† –ù–û–í–û–ï: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
    let totalHumanFocusScore = 0;
    let totalHumanFocusTime = 0;
    let totalConfidence = 0;
    let highFocusPeriods = 0;
    let mediumFocusPeriods = 0;
    let lowFocusPeriods = 0;
    let veryLowFocusPeriods = 0;
    
    // –°—É–º–º–∏—Ä—É–µ–º –≤—Ä–µ–º—è —Ñ–æ–∫—É—Å–∞ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –ø–µ—Ä–∏–æ–¥–æ–≤
    mergedData.forEach(period => {
        // –í—Ä–µ–º—è —Ñ–æ–∫—É—Å–∞ - —ç—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        const periodDuration = period.duration || 0;
        focusTime += periodDuration;
        totalTime += periodDuration; // –û–±—â–µ–µ –≤—Ä–µ–º—è = —Å—É–º–º–∞ –≤—Å–µ—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞
        
        uniqueApps.add(period.appName);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if (isProductiveApplication(period.appName)) {
            productiveTime += periodDuration;
            productiveApps.add(period.appName);
        }
        
        // üß† –ù–û–í–û–ï: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
        if (period.humanFocus) {
            const focusScore = period.humanFocus.score || 0;
            const confidence = period.humanFocus.confidence || 0;
            
            totalHumanFocusScore += focusScore;
            totalConfidence += confidence;
            
            // –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥—ã –ø–æ —É—Ä–æ–≤–Ω—é —Ñ–æ–∫—É—Å–∞
            if (focusScore >= 80) {
                highFocusPeriods++;
                totalHumanFocusTime += periodDuration;
            } else if (focusScore >= 60) {
                mediumFocusPeriods++;
                totalHumanFocusTime += periodDuration * 0.7; // –ß–∞—Å—Ç–∏—á–Ω–æ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è
            } else if (focusScore >= 40) {
                lowFocusPeriods++;
                totalHumanFocusTime += periodDuration * 0.4; // –ß–∞—Å—Ç–∏—á–Ω–æ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è
            } else {
                veryLowFocusPeriods++;
                // –û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π —Ñ–æ–∫—É—Å –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –æ–±—â–µ–µ –≤—Ä–µ–º—è —Ñ–æ–∫—É—Å–∞
            }
        }
    });
    
    const focusEfficiency = totalTime > 0 ? Math.round((focusTime / totalTime) * 100) : 100; // –î–ª—è –ø–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞ —ç—Ç–æ –≤—Å–µ–≥–¥–∞ 100%
    const productiveEfficiency = focusTime > 0 ? Math.round((productiveTime / focusTime) * 100) : 0;
    
    // üß† –ù–û–í–û–ï: –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
    const averageHumanFocusScore = mergedData.length > 0 ? Math.round(totalHumanFocusScore / mergedData.length) : 0;
    const averageConfidence = mergedData.length > 0 ? Math.round((totalConfidence / mergedData.length) * 100) : 0;
    const humanFocusEfficiency = totalTime > 0 ? Math.round((totalHumanFocusTime / totalTime) * 100) : 0;
    
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–æ–∫—É—Å–∞: –ø–µ—Ä–∏–æ–¥–æ–≤ ${mergedData.length}, –æ–±—â–µ–µ –≤—Ä–µ–º—è ${formatDuration(totalTime)}, –≤—Ä–µ–º—è —Ñ–æ–∫—É—Å–∞ ${formatDuration(focusTime)}, –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è ${formatDuration(productiveTime)}`);
    console.log(`üß† –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–æ–∫—É—Å: —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ ${averageHumanFocusScore}%, –≤—ã—Å–æ–∫–∏–π —Ñ–æ–∫—É—Å ${highFocusPeriods} –ø–µ—Ä–∏–æ–¥–æ–≤, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ${humanFocusEfficiency}%`);
    
    return {
        totalTime,
        focusTime,
        productiveTime,
        periodsCount: mergedData.length,
        appsCount: uniqueApps.size,
        productiveAppsCount: productiveApps.size,
        focusEfficiency,
        productiveEfficiency,
        // üß† –ù–û–í–û–ï: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
        humanFocusStats: {
            averageScore: averageHumanFocusScore,
            highFocusPeriods: highFocusPeriods,
            mediumFocusPeriods: mediumFocusPeriods,
            lowFocusPeriods: lowFocusPeriods,
            veryLowFocusPeriods: veryLowFocusPeriods,
            totalFocusTime: Math.round(totalHumanFocusTime),
            averageConfidence: averageConfidence,
            humanFocusEfficiency: humanFocusEfficiency
        }
    };
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –Ω–∞—á–∞–ª–æ —Ç–∞–±–ª–∏—Ü—ã
 * @param {Object} stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
 */
function addTotalStatsToTable(stats) {
    const tbody = document.querySelector('#window-focus-table tbody');
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    const statsRow = document.createElement('tr');
    statsRow.className = 'table-info';
    statsRow.innerHTML = `
        <td colspan="11" class="p-3">
            <div class="row">
                <div class="col-md-12">
                    <h6 class="mb-3">
                        <i class="bi bi-graph-up me-2"></i>
                        –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–æ–∫—É—Å–∞
                    </h6>
                    <div class="row g-3">
                        <div class="col-md-3">
                            <div class="card border-primary">
                                <div class="card-body text-center p-2">
                                    <h5 class="card-title text-primary mb-1">${formatDuration(stats.totalTime)}</h5>
                                    <small class="text-muted">–û–±—â–µ–µ –≤—Ä–µ–º—è</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card border-success">
                                <div class="card-body text-center p-2">
                                    <h5 class="card-title text-success mb-1">${formatDuration(stats.focusTime)}</h5>
                                    <small class="text-muted">–í—Ä–µ–º—è —Ñ–æ–∫—É—Å–∞</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card border-warning">
                                <div class="card-body text-center p-2">
                                    <h5 class="card-title text-warning mb-1">${formatDuration(stats.productiveTime)}</h5>
                                    <small class="text-muted">–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card border-info">
                                <div class="card-body text-center p-2">
                                    <h5 class="card-title text-info mb-1">${stats.periodsCount}</h5>
                                    <small class="text-muted">–ü–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- üß† –ù–û–í–û–ï: –ë–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞ -->
                    <div class="row g-3 mt-3">
                        <div class="col-md-12">
                            <div class="card border-primary">
                                <div class="card-header bg-primary text-white">
                                    <h6 class="mb-0">
                                        <i class="bi bi-brain me-2"></i>
                                        –ê–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="col-md-2">
                                            <div class="text-center">
                                                <h5 class="text-primary mb-1">${stats.humanFocusStats.averageScore}%</h5>
                                                <small class="text-muted">–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞</small>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-center">
                                                <h5 class="text-success mb-1">${stats.humanFocusStats.highFocusPeriods}</h5>
                                                <small class="text-muted">–í—ã—Å–æ–∫–∏–π —Ñ–æ–∫—É—Å</small>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-center">
                                                <h5 class="text-primary mb-1">${stats.humanFocusStats.mediumFocusPeriods}</h5>
                                                <small class="text-muted">–°—Ä–µ–¥–Ω–∏–π —Ñ–æ–∫—É—Å</small>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-center">
                                                <h5 class="text-warning mb-1">${stats.humanFocusStats.lowFocusPeriods}</h5>
                                                <small class="text-muted">–ù–∏–∑–∫–∏–π —Ñ–æ–∫—É—Å</small>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-center">
                                                <h5 class="text-info mb-1">${formatDuration(stats.humanFocusStats.totalFocusTime)}</h5>
                                                <small class="text-muted">–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è</small>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-center">
                                                <h5 class="text-secondary mb-1">${stats.humanFocusStats.averageConfidence}%</h5>
                                                <small class="text-muted">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row g-3 mt-2">
                        <div class="col-md-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-bullseye me-2 text-primary"></i>
                                <div>
                                    <strong>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ñ–æ–∫—É—Å–∞:</strong>
                                    <span class="badge ${stats.focusEfficiency >= 70 ? 'bg-success' : stats.focusEfficiency >= 50 ? 'bg-warning' : 'bg-danger'} ms-1">
                                        ${stats.focusEfficiency}%
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-award me-2 text-success"></i>
                                <div>
                                    <strong>–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong>
                                    <span class="badge ${stats.productiveEfficiency >= 70 ? 'bg-success' : stats.productiveEfficiency >= 50 ? 'bg-warning' : 'bg-danger'} ms-1">
                                        ${stats.productiveEfficiency}%
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-brain me-2 text-primary"></i>
                                <div>
                                    <strong>–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–æ–∫—É—Å:</strong>
                                    <span class="badge ${stats.humanFocusStats.humanFocusEfficiency >= 70 ? 'bg-success' : stats.humanFocusStats.humanFocusEfficiency >= 50 ? 'bg-warning' : 'bg-danger'} ms-1">
                                        ${stats.humanFocusStats.humanFocusEfficiency}%
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-apps me-2 text-info"></i>
                                <div>
                                    <strong>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–π:</strong>
                                    <span class="badge bg-info ms-1">${stats.appsCount} (${stats.productiveAppsCount} –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã—Ö)</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </td>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –Ω–∞—á–∞–ª–æ —Ç–∞–±–ª–∏—Ü—ã
    tbody.insertBefore(statsRow, tbody.firstChild);
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º
 * @param {string} appName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @returns {boolean} - true –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ
 */
function isProductiveApplication(appName) {
    if (!appName) return false;
    
    const productiveApps = [
        'Cursor.exe',
        'Code.exe',
        'notepad.exe',
        'Notepad++.exe',
        'sublime_text.exe',
        'atom.exe',
        'WebStorm.exe',
        'IntelliJ IDEA.exe',
        'Eclipse.exe',
        'msedge.exe',
        'firefox.exe',
        'brave.exe',
        'chrome.exe',
        'Word.exe',
        'Excel.exe',
        'PowerPoint.exe',
        'Outlook.exe',
        'Teams.exe',
        'Zoom.exe',
        'Skype.exe',
        'CalculatorApp.exe'
    ];
    
    return productiveApps.some(app => {
        const appNameLower = appName.toLowerCase();
        const productiveAppLower = app.toLowerCase();
        return appNameLower === productiveAppLower || 
               appNameLower.includes(productiveAppLower.replace('.exe', '')) ||
               productiveAppLower.includes(appNameLower);
    });
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @returns {string} - –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
function getDisplayMode() {
    const modeSelect = document.getElementById('focus-display-mode');
    return modeSelect ? modeSelect.value : 'standard';
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
 * @param {Array} mergedData - –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–∏–æ–¥—ã —Ñ–æ–∫—É—Å–∞)
 */
function updateTableStandard(mergedData) {
    const tbody = document.querySelector('#window-focus-table tbody');
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
    const sortedData = applySorting(mergedData);
    
    tbody.innerHTML = '';
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∂–¥—ã–π –ø–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É
    sortedData.forEach((period, periodIndex) => {
        // –°–æ–∑–¥–∞—ë–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–∏–æ–¥–∞
        const groupRow = createGroupHeader(period, periodIndex);
        tbody.appendChild(groupRow);
        
        // –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä–æ–∫—É —Å –¥–µ—Ç–∞–ª—è–º–∏ –ø–µ—Ä–∏–æ–¥–∞ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç–∞)
        const detailRow = createFocusTableRow(period, 0, periodIndex);
        tbody.appendChild(detailRow);
    });
    
    console.log(`üìä –û—Ç–æ–±—Ä–∞–∂–µ–Ω–æ ${sortedData.length} –ø–µ—Ä–∏–æ–¥–æ–≤ —Ñ–æ–∫—É—Å–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ`);
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –∫ –¥–∞–Ω–Ω—ã–º
 * @param {Array} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
 * @returns {Array} - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
function applySorting(data) {
    const sortSelect = document.getElementById('chronology-sort');
    const sortOrder = sortSelect ? sortSelect.value : 'desc';
    
    return [...data].sort((a, b) => {
        const timeA = new Date(a.timestamp);
        const timeB = new Date(b.timestamp);
        
        return sortOrder === 'desc' ? timeB - timeA : timeA - timeB;
    });
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ —Ñ–æ–∫—É—Å–∞
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @param {number} groupIndex - –ò–Ω–¥–µ–∫—Å –≥—Ä—É–ø–ø—ã
 * @returns {HTMLElement} - –≠–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
 */
function createGroupHeader(period, groupIndex) {
    const row = document.createElement('tr');
    row.className = 'table-primary group-header';
    row.style.cursor = 'pointer';
    row.onclick = () => toggleGroup(groupIndex);
    
    // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞
    const startTime = new Date(period.startTime).toLocaleTimeString('ru-RU');
    const endTime = new Date(period.endTime).toLocaleTimeString('ru-RU');
    const duration = formatDuration(period.duration);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–µ—Ä–∏–æ–¥–∞
    const activityLevel = period.mouseActivity.activityLevel;
    const activityBadge = getActivityBadge(activityLevel);
    
    // –°–æ–∑–¥–∞–µ–º —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    const appSequence = createAppSequence(period);
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const activityStats = `
        <div class="activity-stats d-flex align-items-center gap-2">
            <div class="stat-item">
                <i class="bi bi-mouse2 text-primary"></i>
                <span class="badge bg-light text-dark">${period.mouseActivity.clicks}–∫/${period.mouseActivity.movements}–¥</span>
            </div>
            <div class="stat-item">
                <i class="bi bi-cpu text-info"></i>
                <span class="badge ${getResourceClass(period.cpuUsage.level)}">${period.cpuUsage.value}%</span>
            </div>
            <div class="stat-item">
                <i class="bi bi-memory text-warning"></i>
                <span class="badge ${getRamResourceClass(period.ramUsage.level)}">${period.ramUsage.value}%</span>
            </div>
        </div>
    `;
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–∏–æ–¥–∞ ${groupIndex}:`, {
        –ø–µ—Ä–∏–æ–¥: `${startTime} - ${endTime}`,
        –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: period.activitiesCount,
        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: duration,
        –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: appSequence.text
    });
    
    row.innerHTML = `
        <td colspan="8" class="p-3">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-chevron-right me-2 group-toggle-icon" id="toggle-icon-${groupIndex}"></i>
                        <div class="flex-grow-1">
                            <div class="d-flex align-items-center mb-2">
                                <i class="bi bi-clock-history me-2 text-primary"></i>
                                <h6 class="mb-0 me-3">
                                    –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞: ${startTime} - ${endTime}
                                    <span class="badge bg-light text-dark ms-2">${duration}</span>
                                </h6>
                                ${activityBadge}
                            </div>
                            <div class="d-flex align-items-center">
                                <i class="bi bi-diagram-3 me-2 text-secondary"></i>
                                <div class="app-sequence">
                                    <div class="app-timeline">
                                        ${appSequence.html}
                                    </div>
                                    <small class="text-muted mt-1">
                                        <i class="bi bi-layers"></i> ${period.activitiesCount} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex flex-column align-items-end gap-2">
                        <span class="badge bg-info">${period.activitiesCount} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</span>
                        ${activityStats}
                    </div>
                </div>
            </div>
        </td>
    `;
    
    return row;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å HTML –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º
 */
function createAppSequence(period) {
    if (!period.activities || period.activities.length === 0) {
        return {
            html: `<span class="app-item">${period.appName}</span>`,
            text: period.appName
        };
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    const sortedActivities = period.activities.sort((a, b) => 
        new Date(a.timestamp) - new Date(b.timestamp)
    );
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const appGroups = [];
    let currentGroup = null;
    
    for (const activity of sortedActivities) {
        const appName = activity.appName || activity.app_name || activity.application;
        
        if (!currentGroup || currentGroup.appName !== appName) {
            // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É
            if (currentGroup) {
                appGroups.push(currentGroup);
            }
            currentGroup = {
                appName: appName,
                startTime: new Date(activity.timestamp),
                endTime: new Date(activity.timestamp),
                count: 1,
                activities: [activity]
            };
        } else {
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –≥—Ä—É–ø–ø—É
            currentGroup.endTime = new Date(activity.timestamp);
            currentGroup.count++;
            currentGroup.activities.push(activity);
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≥—Ä—É–ø–ø—É
    if (currentGroup) {
        appGroups.push(currentGroup);
    }
    
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const appSequenceHtml = appGroups.map((group, index) => {
        const appIcon = getAppIcon(group.appName);
        const isProductive = isProductiveApplication(group.appName);
        const productivityClass = isProductive ? 'text-success' : 'text-warning';
        const productivityIcon = isProductive ? 'bi-check-circle' : 'bi-exclamation-triangle';
        
        // –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
        const duration = Math.round((group.endTime - group.startTime) / 1000) + 1;
        const timeRange = `${group.startTime.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})} - ${group.endTime.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})}`;
        
        const arrow = index < appGroups.length - 1 ? '<i class="bi bi-arrow-right mx-2 text-muted"></i>' : '';
        
        return `
            <span class="app-item d-inline-flex align-items-center me-1" 
                  title="${group.appName}&#10;${timeRange}&#10;${group.count} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π&#10;${formatDuration(duration)}">
                <i class="bi ${appIcon} me-1" style="color: ${getAppColor(group.appName)};"></i>
                <strong>${getShortAppName(group.appName)}</strong>
                <i class="bi ${productivityIcon} ms-1 ${productivityClass}" style="font-size: 0.8em;"></i>
                <span class="badge bg-light text-dark ms-1" style="font-size: 0.7em;">${formatDuration(duration)}</span>
            </span>${arrow}
        `;
    }).join('');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
    const appSequenceText = appGroups.map(group => group.appName).join(' ‚Üí ');
    
    return {
        html: appSequenceHtml,
        text: appSequenceText
    };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @param {string} appName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @returns {string} - CSS –∫–ª–∞—Å—Å –∏–∫–æ–Ω–∫–∏
 */
function getAppIcon(appName) {
    if (!appName) return 'bi-app';
    
    const appLower = appName.toLowerCase();
    
    if (appLower.includes('chrome') || appLower.includes('firefox') || 
        appLower.includes('edge') || appLower.includes('opera') || appLower.includes('browser')) {
        return 'bi-globe';
    } else if (appLower.includes('code') || appLower.includes('studio') || 
               appLower.includes('dev') || appLower.includes('cursor')) {
        return 'bi-code-slash';
    } else if (appLower.includes('office') || appLower.includes('word') || 
               appLower.includes('excel') || appLower.includes('powerpoint')) {
        return 'bi-file-earmark-text';
    } else if (appLower.includes('teams') || appLower.includes('zoom') || 
               appLower.includes('skype') || appLower.includes('meet')) {
        return 'bi-camera-video';
    } else if (appLower.includes('telegram') || appLower.includes('whatsapp') || 
               appLower.includes('discord') || appLower.includes('slack')) {
        return 'bi-chat-dots';
    } else if (appLower.includes('youtube') || appLower.includes('vlc') || 
               appLower.includes('media') || appLower.includes('player')) {
        return 'bi-play-circle';
    } else if (appLower.includes('calculator') || appLower.includes('calc')) {
        return 'bi-calculator';
    } else if (appLower.includes('notepad') || appLower.includes('note')) {
        return 'bi-journal-text';
    } else if (appLower.includes('rdclient') || appLower.includes('remote')) {
        return 'bi-display';
    }
    
    return 'bi-app';
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @param {string} appName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @returns {string} - CSS —Ü–≤–µ—Ç
 */
function getAppColor(appName) {
    if (!appName) return '#6c757d';
    
    const appLower = appName.toLowerCase();
    
    if (appLower.includes('chrome') || appLower.includes('browser')) {
        return '#4285f4';
    } else if (appLower.includes('firefox')) {
        return '#ff7139';
    } else if (appLower.includes('edge')) {
        return '#0078d4';
    } else if (appLower.includes('code') || appLower.includes('cursor')) {
        return '#007acc';
    } else if (appLower.includes('office') || appLower.includes('word')) {
        return '#d83b01';
    } else if (appLower.includes('teams')) {
        return '#6264a7';
    } else if (appLower.includes('telegram')) {
        return '#0088cc';
    } else if (appLower.includes('youtube')) {
        return '#ff0000';
    } else if (appLower.includes('rdclient')) {
        return '#0078d4';
    }
    
    return '#6c757d';
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @param {string} appName - –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @returns {string} - –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
 */
function getShortAppName(appName) {
    if (!appName) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    
    const appLower = appName.toLowerCase();
    
    if (appLower.includes('chrome')) return 'Chrome';
    if (appLower.includes('firefox')) return 'Firefox';
    if (appLower.includes('edge')) return 'Edge';
    if (appLower.includes('telegram')) return 'Telegram';
    if (appLower.includes('code')) return 'VS Code';
    if (appLower.includes('cursor')) return 'Cursor';
    if (appLower.includes('youtube')) return 'YouTube';
    if (appLower.includes('rdclient')) return 'RDP';
    if (appLower.includes('notepad')) return 'Notepad';
    if (appLower.includes('calculator')) return 'Calc';
    if (appLower.includes('teams')) return 'Teams';
    if (appLower.includes('zoom')) return 'Zoom';
    if (appLower.includes('skype')) return 'Skype';
    if (appLower.includes('word')) return 'Word';
    if (appLower.includes('excel')) return 'Excel';
    if (appLower.includes('powerpoint')) return 'PowerPoint';
    
    // –£–±–∏—Ä–∞–µ–º .exe –∏ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤
    const cleanName = appName.replace('.exe', '').replace('.EXE', '');
    return cleanName.length > 10 ? cleanName.substring(0, 10) + '...' : cleanName;
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å –≥—Ä—É–ø–ø—ã
 * @param {number} groupIndex - –ò–Ω–¥–µ–∫—Å –≥—Ä—É–ø–ø—ã
 */
function toggleGroup(groupIndex) {
    const rows = document.querySelectorAll(`[data-parent-group="${groupIndex}"]`);
    const toggleIcon = document.getElementById(`toggle-icon-${groupIndex}`);
    
    const isVisible = rows.length > 0 && rows[0].style.display !== 'none';
    
    rows.forEach(row => {
        row.style.display = isVisible ? 'none' : '';
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
    if (toggleIcon) {
        toggleIcon.className = isVisible ? 'bi bi-chevron-right group-toggle-icon' : 'bi bi-chevron-down group-toggle-icon';
    }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ —Ñ–æ–∫—É—Å–∞
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @param {number} index - –ò–Ω–¥–µ–∫—Å –∑–∞–ø–∏—Å–∏
 * @param {number} groupIndex - –ò–Ω–¥–µ–∫—Å –≥—Ä—É–ø–ø—ã
 * @returns {HTMLElement} - –≠–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
 */
function createFocusTableRow(period, index, groupIndex) {
    const row = document.createElement('tr');
    row.className = period.isBackground ? 'table-light' : '';
    row.dataset.parentGroup = groupIndex;
    row.style.display = 'none'; // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç–æ
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞
    const timeStr = new Date(period.startTime).toLocaleTimeString('ru-RU');
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–∏–æ–¥–∞
    const durationStr = formatDuration(period.duration);
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞
    const detailsHtml = createProfessionalPeriodDetails(period);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ —Ñ–æ–∫—É—Å–∞)
    const statusClass = getStatusClassWithFocus(period.status);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏
    const mouseClass = getMouseActivityClass(period.mouseActivity.activityLevel);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –¶–ü
    const cpuClass = getResourceClass(period.cpuUsage.level);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –û–ó–£
    const ramClass = getRamResourceClass(period.ramUsage.level);
    
    // üß† –ù–û–í–û–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç GPU
    const gpuClass = getResourceClass(period.gpuUsage?.level || '–ù–∏–∑–∫–∏–π');
    
    // üß† –ù–û–í–û–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Å–µ—Ç–∏
    const networkClass = getResourceClass(period.networkUsage?.level || '–ù–∏–∑–∫–∏–π');
    
    // üß† –ù–û–í–û–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
    const humanFocusClass = getHumanFocusClass(period.humanFocus?.level || '–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    let appIcon = 'bi-app';
    if (period.appName.toLowerCase().includes('chrome') || period.appName.toLowerCase().includes('firefox') || 
        period.appName.toLowerCase().includes('edge') || period.appName.toLowerCase().includes('opera')) {
        appIcon = 'bi-globe';
    } else if (period.appName.toLowerCase().includes('code') || period.appName.toLowerCase().includes('studio') || 
               period.appName.toLowerCase().includes('dev')) {
        appIcon = 'bi-code-slash';
    } else if (period.appName.toLowerCase().includes('office') || period.appName.toLowerCase().includes('word') || 
               period.appName.toLowerCase().includes('excel') || period.appName.toLowerCase().includes('powerpoint')) {
        appIcon = 'bi-file-earmark-text';
    } else if (period.appName.toLowerCase().includes('teams') || period.appName.toLowerCase().includes('zoom') || 
               period.appName.toLowerCase().includes('skype')) {
        appIcon = 'bi-camera-video';
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const isProductive = isProductiveApplication(period.appName);
    const productivityIndicator = isProductive ? 
        '<i class="bi bi-check-circle text-success ms-1" title="–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"></i>' : 
        '<i class="bi bi-exclamation-triangle text-warning ms-1" title="–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"></i>';
    
    row.innerHTML = `
        <td class="font-monospace text-nowrap align-middle">
            <div class="d-flex align-items-center">
                <i class="bi bi-clock text-muted me-2"></i>
                <span class="fw-bold">${timeStr}</span>
            </div>
        </td>
        <td class="align-middle">
            <div class="d-flex align-items-center">
                <i class="bi ${appIcon} me-2 text-primary" style="font-size: 1.2em;"></i>
                <div class="flex-grow-1">
                    <div class="d-flex align-items-center">
                        <strong class="text-truncate" style="max-width: 200px;" title="${period.appName}">${period.appName}</strong>
                        ${productivityIndicator}
                    </div>
                    ${period.activitiesCount > 1 ? `<small class="text-muted"><i class="bi bi-layers"></i> ${period.activitiesCount} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</small>` : ''}
                </div>
            </div>
        </td>
        <td class="details-cell align-middle">
            ${detailsHtml}
        </td>
        <td class="text-center align-middle">
            <div class="d-flex flex-column align-items-center">
                <span class="badge bg-primary fs-6 px-3 py-2">${durationStr}</span>
                <small class="text-muted mt-1">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</small>
            </div>
        </td>
        <td class="text-center align-middle">
            <div class="activity-indicator">
                <div class="d-flex justify-content-center align-items-center mb-1">
                    <i class="bi bi-mouse2 text-primary me-1"></i>
                    <span class="badge ${mouseClass} px-2 py-1">
                        ${period.mouseActivity.clicks}–∫/${period.mouseActivity.movements}–¥
                    </span>
                </div>
                <div class="activity-level-badge">
                    <span class="badge bg-light text-dark small">${period.mouseActivity.activityLevel}</span>
                </div>
            </div>
        </td>
        <td class="text-center align-middle">
            <div class="resource-indicator">
                <div class="d-flex justify-content-center align-items-center mb-1">
                    <i class="bi bi-cpu text-info me-1"></i>
                    <span class="badge ${cpuClass} px-2 py-1 fw-bold">${period.cpuUsage.value}%</span>
                </div>
                <div class="resource-level-badge">
                    <span class="badge bg-light text-dark small">${period.cpuUsage.level}</span>
                </div>
            </div>
        </td>
        <td class="text-center align-middle">
            <div class="resource-indicator">
                <div class="d-flex justify-content-center align-items-center mb-1">
                    <i class="bi bi-memory text-warning me-1"></i>
                    <span class="badge ${ramClass} px-2 py-1 fw-bold">${period.ramUsage.value}%</span>
                </div>
                <div class="resource-level-badge">
                    <span class="badge bg-light text-dark small">${period.ramUsage.level}</span>
                </div>
            </div>
        </td>
        <td class="text-center align-middle">
            <div class="resource-indicator">
                <div class="d-flex justify-content-center align-items-center mb-1">
                    <i class="bi bi-gpu-card text-success me-1"></i>
                    <span class="badge ${gpuClass} px-2 py-1 fw-bold">${period.gpuUsage?.value || 0}%</span>
                </div>
                <div class="resource-level-badge">
                    <span class="badge bg-light text-dark small">${period.gpuUsage?.level || '–ù–∏–∑–∫–∏–π'}</span>
                </div>
            </div>
        </td>
        <td class="text-center align-middle">
            <div class="resource-indicator">
                <div class="d-flex justify-content-center align-items-center mb-1">
                    <i class="bi bi-wifi text-info me-1"></i>
                    <span class="badge ${networkClass} px-2 py-1 fw-bold">${period.networkUsage?.value || 0}%</span>
                </div>
                <div class="resource-level-badge">
                    <span class="badge bg-light text-dark small">${period.networkUsage?.level || '–ù–∏–∑–∫–∏–π'}</span>
                </div>
            </div>
        </td>
        <td class="text-center align-middle">
            <div class="human-focus-indicator">
                <div class="d-flex justify-content-center align-items-center mb-1">
                    <i class="bi bi-brain text-primary me-1"></i>
                    <span class="badge ${humanFocusClass} px-2 py-1 fw-bold">${period.humanFocus?.score || 0}%</span>
                </div>
                <div class="focus-level-badge">
                    <span class="badge bg-light text-dark small">${period.humanFocus?.level || '–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π'}</span>
                </div>
                <div class="focus-confidence-badge mt-1">
                    <span class="badge bg-secondary small" title="–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –æ—Ü–µ–Ω–∫–µ">
                        <i class="bi bi-shield-check"></i> ${Math.round((period.humanFocus?.confidence || 0) * 100)}%
                    </span>
                </div>
            </div>
        </td>
        <td class="text-center align-middle">
            <div class="status-indicator">
                <span class="badge ${statusClass} px-3 py-2 fs-6">${period.status}</span>
            </div>
        </td>
    `;
    
    return row;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Å —É—á–µ—Ç–æ–º —Ñ–æ–∫—É—Å–∞
 * @param {string} status - –°—Ç–∞—Ç—É—Å
 * @returns {string} - CSS –∫–ª–∞—Å—Å
 */
function getStatusClassWithFocus(status) {
    switch (status) {
        case '–í—ã—Å–æ–∫–∏–π —Ñ–æ–∫—É—Å': return 'bg-success';
        case '–°—Ä–µ–¥–Ω–∏–π —Ñ–æ–∫—É—Å': return 'bg-primary';
        case '–ù–∏–∑–∫–∏–π —Ñ–æ–∫—É—Å': return 'bg-warning';
        case '–ê–∫—Ç–∏–≤–µ–Ω': return 'bg-info';
        case '–†–∞–±–æ—Ç–∞–µ—Ç': return 'bg-secondary';
        case '–ü–∞—Å—Å–∏–≤–µ–Ω': return 'bg-light text-dark';
        case '–§–æ–Ω': return 'bg-dark';
        default: return 'bg-light text-dark';
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å –¥–ª—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
 * @param {string} level - –£—Ä–æ–≤–µ–Ω—å —Ñ–æ–∫—É—Å–∞
 * @returns {string} - CSS –∫–ª–∞—Å—Å
 */
function getHumanFocusClass(level) {
    switch (level) {
        case '–í—ã—Å–æ–∫–∏–π': return 'bg-success';
        case '–°—Ä–µ–¥–Ω–∏–π': return 'bg-primary';
        case '–ù–∏–∑–∫–∏–π': return 'bg-warning';
        case '–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π': return 'bg-danger';
        default: return 'bg-secondary';
    }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø–µ—Ä–∏–æ–¥–∞ —Ñ–æ–∫—É—Å–∞
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @returns {string} - HTML –¥–µ—Ç–∞–ª–µ–π
 */
function createProfessionalPeriodDetails(period) {
    const details = [];
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
    if (period.windowTitle && period.windowTitle.trim() !== '') {
        details.push(`
            <div class="detail-item mb-1">
                <i class="bi bi-window me-1 text-info"></i>
                <small class="fw-bold">–û–∫–Ω–æ:</small>
                <small class="text-truncate d-inline-block" style="max-width: 200px;" title="${period.windowTitle}">
                    ${period.windowTitle}
                </small>
            </div>
        `);
    }
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –ø–µ—Ä–∏–æ–¥–µ
    if (period.activitiesCount > 1) {
        details.push(`
            <div class="detail-item mb-1">
                <i class="bi bi-cpu me-1 text-secondary"></i>
                <small class="fw-bold">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:</small>
                <small>${period.activitiesCount} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –ø–µ—Ä–∏–æ–¥–µ</small>
                <button class="btn btn-sm btn-outline-primary ms-1 p-0 px-1" 
                        onclick="showProcessDetails('${period.startTime}')" 
                        title="–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–∏–æ–¥–µ">
                    <i class="bi bi-search" style="font-size: 0.7em;"></i>
                </button>
            </div>
        `);
    }
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–µ—Ä–∏–æ–¥–∞
    const startTime = new Date(period.startTime).toLocaleTimeString('ru-RU');
    const endTime = new Date(period.endTime).toLocaleTimeString('ru-RU');
    details.push(`
        <div class="detail-item mb-1">
            <i class="bi bi-clock me-1 text-primary"></i>
            <small class="fw-bold">–ü–µ—Ä–∏–æ–¥:</small>
            <small>${startTime} - ${endTime}</small>
        </div>
    `);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ details
    if (period.details && period.details !== '–ë–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏') {
        const detailParts = period.details.split(' | ');
        
        detailParts.forEach(part => {
            if (part.trim()) {
                let icon = 'bi-info-circle';
                let label = '–ò–Ω—Ñ–æ';
                
                if (part.includes('–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π')) {
                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ —É–∂–µ –ø–æ–∫–∞–∑–∞–ª–∏ –≤—ã—à–µ
                    return;
                } else if (part.startsWith('URL:')) {
                    icon = 'bi-globe';
                    label = 'URL';
                    part = part.replace('URL: ', '');
                } else if (part.includes('–∑–∞–ø—É—Å–∫–æ–≤')) {
                    icon = 'bi-play-circle';
                    label = '–ó–∞–ø—É—Å–∫–∏';
                } else {
                    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                    icon = 'bi-info-circle';
                    label = '–ò–Ω—Ñ–æ';
                }
                
                details.push(`
                    <div class="detail-item mb-1">
                        <i class="bi ${icon} me-1 text-secondary"></i>
                        <small class="fw-bold">${label}:</small>
                        <small class="text-truncate d-inline-block" style="max-width: 200px;" title="${part}">
                            ${part}
                        </small>
                    </div>
                `);
            }
        });
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–µ—Ç–∞–ª–µ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if (details.length === 1) { // –¢–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω
        details.push(`
            <div class="detail-item">
                <i class="bi bi-dash-circle me-1 text-muted"></i>
                <small class="text-muted">–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</small>
            </div>
        `);
    }
    
    return `<div class="details-container">${details.join('')}</div>`;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
 * @param {string} status - –°—Ç–∞—Ç—É—Å
 * @returns {string} - CSS –∫–ª–∞—Å—Å
 */
function getStatusClass(status) {
    switch (status) {
        case '–ê–∫—Ç–∏–≤–µ–Ω': return 'bg-success';
        case '–†–∞–±–æ—Ç–∞–µ—Ç': return 'bg-primary';
        case '–ü–∞—Å—Å–∏–≤–µ–Ω': return 'bg-warning';
        case '–§–æ–Ω': return 'bg-secondary';
        default: return 'bg-light text-dark';
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏
 * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @returns {string} - CSS –∫–ª–∞—Å—Å
 */
function getMouseActivityClass(level) {
    switch (level) {
        case '–í—ã—Å–æ–∫–∞—è': return 'bg-success';
        case '–°—Ä–µ–¥–Ω—è—è': return 'bg-warning';
        case '–ù–∏–∑–∫–∞—è': return 'bg-danger';
        default: return 'bg-secondary';
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤ –¶–ü
 * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—É–∑–∫–∏
 * @returns {string} - CSS –∫–ª–∞—Å—Å
 */
function getResourceClass(level) {
    switch (level) {
        case '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π': return 'bg-danger';
        case '–í—ã—Å–æ–∫–∏–π': return 'bg-warning';
        case '–°—Ä–µ–¥–Ω–∏–π': return 'bg-info';
        case '–ù–∏–∑–∫–∏–π': return 'bg-success';
        default: return 'bg-secondary';
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç CSS –∫–ª–∞—Å—Å –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤ –û–ó–£
 * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 * @returns {string} - CSS –∫–ª–∞—Å—Å
 */
function getRamResourceClass(level) {
    switch (level) {
        case '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π': return 'bg-danger';
        case '–í—ã—Å–æ–∫–∏–π': return 'bg-warning';
        case '–°—Ä–µ–¥–Ω–∏–π': return 'bg-info';
        case '–ù–∏–∑–∫–∏–π': return 'bg-primary';
        default: return 'bg-secondary';
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç ID —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
 * @returns {string|null} - ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
 */
function getCurrentEmployeeId() {
    const select = document.getElementById('employee-filter');
    return select ? select.value : null;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç ID —Ç–µ–∫—É—â–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 * @returns {string|null} - ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 */
function getCurrentDeviceId() {
    const select = document.getElementById('device-filter');
    return select ? select.value : null;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
document.addEventListener('DOMContentLoaded', function() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∞–Ω–∞–ª–∏–∑–∞
    const analyzeBtn = document.getElementById('analyze-focus-btn');
    if (analyzeBtn) {
        analyzeBtn.addEventListener('click', function() {
            const dateInput = document.getElementById('chronology-date');
            const selectedDate = dateInput ? dateInput.value : new Date().toISOString().split('T')[0];
            
            if (!selectedDate) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
                return;
            }
            
            analyzeFocus(selectedDate);
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
    const exportBtn = document.getElementById('export-focus-btn');
    if (exportBtn) {
        exportBtn.addEventListener('click', function() {
            exportFocusAnalysis();
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
    const analyzeHumanFocusBtn = document.getElementById('analyze-human-focus-btn');
    if (analyzeHumanFocusBtn) {
        analyzeHumanFocusBtn.addEventListener('click', async function() {
            const dateInput = document.getElementById('chronology-date');
            const selectedDate = dateInput ? dateInput.value : new Date().toISOString().split('T')[0];
            
            if (!selectedDate) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
                return;
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            const originalText = this.innerHTML;
            this.innerHTML = '<i class="bi bi-hourglass-split"></i> –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–æ–∫—É—Å...';
            this.disabled = true;
            
            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                if (!window.lastAnalyzedData || window.lastAnalyzedData.length === 0) {
                    // –ï—Å–ª–∏ –Ω–µ—Ç, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–±—ã—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–æ–∫—É—Å–∞
                    await analyzeFocus(selectedDate);
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∞–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
                if (window.lastAnalyzedData && window.lastAnalyzedData.length > 0) {
                    const hasHumanFocusData = window.lastAnalyzedData.some(period => period.humanFocus);
                    
                    if (hasHumanFocusData) {
                        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–æ–∫—É—Å
                        updateFocusTableWithHumanFocusHighlight();
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
                        showHumanFocusDetailedStats(window.lastAnalyzedData);
                        
                        console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
                    } else {
                        throw new Error('–î–∞–Ω–Ω—ã–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∞–Ω–∞–ª–∏–∑–µ');
                    }
                } else {
                    throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞');
                }
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞:', error);
                alert('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞: ' + error.message);
            } finally {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                this.innerHTML = originalText;
                this.disabled = false;
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ä–µ–∂–∏–º–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const displayModeSelect = document.getElementById('focus-display-mode');
    if (displayModeSelect) {
        displayModeSelect.addEventListener('change', function() {
            updateDisplayModeDescription(this.value);
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞–Ω–æ–≤–æ
            if (window.lastAnalyzedData) {
                console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', this.value);
                updateFocusTable(window.lastAnalyzedData);
            }
        });
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        updateDisplayModeDescription(displayModeSelect.value);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    const sortSelect = document.getElementById('chronology-sort');
    if (sortSelect) {
        sortSelect.addEventListener('change', function() {
            // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞–Ω–æ–≤–æ
            const dateInput = document.getElementById('chronology-date');
            const selectedDate = dateInput ? dateInput.value : null;
            
            if (selectedDate && window.lastAnalyzedData) {
                console.log('üîÑ –ü–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–∞');
                updateFocusTable(window.lastAnalyzedData);
            }
        });
    }
});

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–∞
 */
function exportFocusAnalysis() {
    console.log('üì§ –≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–∞ (—Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ)');
    alert('–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
 * @param {number} seconds - –°–µ–∫—É–Ω–¥—ã
 * @returns {string} - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
 */
function formatDuration(seconds) {
    if (seconds < 60) {
        return `${seconds}—Å`;
    } else if (seconds < 3600) {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = seconds % 60;
        return remainingSeconds > 0 ? `${minutes}–º ${remainingSeconds}—Å` : `${minutes}–º`;
    } else {
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        return `${hours}—á ${minutes}–º`;
    }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö
 * @param {string} timestampKey - –ö–ª—é—á –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏
 */
/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö
 * @param {string} timestampKey - –ö–ª—é—á –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏
 */
function showProcessDetails(timestampKey) {
    if (!window.lastAnalyzedData || window.lastAnalyzedData.length === 0) {
        alert('–î–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –∑–∞–Ω–æ–≤–æ.');
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–µ
    const targetTime = new Date(timestampKey);
    const targetPeriod = window.lastAnalyzedData.find(period => {
        const periodStart = new Date(period.startTime);
        const periodEnd = new Date(period.endTime);
        return targetTime >= periodStart && targetTime <= periodEnd;
    });
    
    if (!targetPeriod) {
        alert('–ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.');
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–∑ —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    const periodActivities = targetPeriod.rawActivities || targetPeriod.activities || [];
    
    if (periodActivities.length === 0) {
        console.log('üîç –û—Ç–ª–∞–¥–∫–∞: targetPeriod =', targetPeriod);
        console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏:', Object.keys(targetPeriod));
        alert('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ.');
        return;
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏
    const sortedActivities = periodActivities.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));
    
    // –°–æ–∑–¥–∞–µ–º —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const appSequence = createDetailedAppSequence(sortedActivities);
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
    const modalHtml = `
        <div class="modal fade" id="processDetailsModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title">
                            <i class="bi bi-diagram-3 me-2"></i>
                            –•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ø–µ—Ä–∏–æ–¥–µ —Ñ–æ–∫—É—Å–∞
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-info mb-4">
                            <div class="info-cards-container">
                                <div class="info-card period-card">
                                    <div class="info-card-header">
                                        <div class="info-card-icon">
                                            <i class="bi bi-clock"></i>
                                        </div>
                                        <div class="info-card-title">–ü–µ—Ä–∏–æ–¥</div>
                                    </div>
                                    <div class="info-card-content">
                                        ${new Date(targetPeriod.startTime).toLocaleTimeString('ru-RU')} - 
                                        ${new Date(targetPeriod.endTime).toLocaleTimeString('ru-RU')}
                                        <span class="badge bg-primary">${formatDuration(targetPeriod.duration)}</span>
                                    </div>
                                </div>
                                
                                <div class="info-card stats-card">
                                    <div class="info-card-header">
                                        <div class="info-card-icon">
                                            <i class="bi bi-activity"></i>
                                        </div>
                                        <div class="info-card-title">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
                                    </div>
                                    <div class="info-card-content">
                                        ${sortedActivities.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –ø–µ—Ä–∏–æ–¥–µ
                                    </div>
                                </div>
                                
                                <div class="info-card status-card">
                                    <div class="info-card-header">
                                        <div class="info-card-icon">
                                            <i class="bi bi-cpu"></i>
                                        </div>
                                        <div class="info-card-title">–ò–Ω—Ñ–æ</div>
                                    </div>
                                    <div class="info-card-content">
                                        ${new Set(sortedActivities.map(a => a.appName || a.app_name || a.application)).size} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                                    </div>
                                </div>
                                
                                <div class="info-card details-card">
                                    <div class="info-card-header">
                                        <div class="info-card-icon">
                                            <i class="bi bi-window"></i>
                                        </div>
                                        <div class="info-card-title">–û–∫–Ω–æ</div>
                                    </div>
                                    <div class="info-card-content">
                                        <span class="text-truncate" title="${targetPeriod.primaryApp || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}">
                                            ${getShortAppName(targetPeriod.primaryApp) || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
                                        </span>
                                        <span class="badge ${getStatusClass(targetPeriod.status)}">${targetPeriod.status}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                        
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6><i class="bi bi-diagram-2 me-2"></i>–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:</h6>
                            <button class="btn btn-sm btn-outline-secondary" onclick="toggleAppSequenceGrouping()" id="appSequenceToggle">
                                <i class="bi bi-collection me-1"></i>–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                        </div>
                        <div class="app-sequence-modal" id="appSequenceContainer">
                            ${appSequence.html}
                        </div>
                        </div>
                        
                        <div class="table-responsive">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                                <h6><i class="bi bi-list-ul me-2"></i>–î–µ—Ç–∞–ª—å–Ω–∞—è —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π:</h6>
                                <button class="btn btn-sm btn-outline-secondary" onclick="toggleChronologyGrouping()" id="chronologyToggle">
                                    <i class="bi bi-chevron-up me-1"></i>–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ
                                </button>
                            </div>
                            <div id="chronologyTableContainer">
                            <table class="table table-sm table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th width="15%">–í—Ä–µ–º—è</th>
                                        <th width="20%">–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</th>
                                        <th width="35%">–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞</th>
                                        <th width="10%">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</th>
                                        <th width="10%">–°—Ç–∞—Ç—É—Å</th>
                                        <th width="10%">–î–µ–π—Å—Ç–≤–∏–µ</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${sortedActivities.map((activity, index) => {
                                        const appName = activity.appName || activity.app_name || activity.application;
                                        const windowTitle = activity.window_title || activity.title || '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞';
                                        const duration = parseInt(activity.duration) || 1;
                                        const isBackground = isBackgroundProcess(appName);
                                        const isProductive = isProductiveApplication(appName);
                                        const appIcon = getAppIcon(appName);
                                        const appColor = getAppColor(appName);
                                        
                                        return `
                                            <tr class="${isBackground ? 'table-light' : ''} ${index % 2 === 0 ? 'table-striped' : ''}">
                                                <td class="font-monospace small">
                                                    <strong>${new Date(activity.timestamp).toLocaleTimeString('ru-RU')}</strong>
                                                </td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <i class="bi ${appIcon} me-2" style="color: ${appColor}; font-size: 1.2em;"></i>
                                                        <div>
                                                            <strong>${getShortAppName(appName)}</strong>
                                                            ${isProductive ? 
                                                                '<i class="bi bi-check-circle text-success ms-1" title="–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ"></i>' : 
                                                                '<i class="bi bi-exclamation-triangle text-warning ms-1" title="–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ"></i>'
                                                            }
                                                            <br><small class="text-muted">${appName}</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <small class="text-truncate d-inline-block" 
                                                           style="max-width: 300px;" 
                                                           title="${windowTitle}">
                                                        ${windowTitle}
                                                    </small>
                                                </td>
                                                <td>
                                                    <span class="badge bg-light text-dark">
                                                        ${formatDuration(duration)}
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="badge ${isBackground ? 'bg-secondary' : 'bg-success'} small">
                                                        ${isBackground ? '–§–æ–Ω' : '–ê–∫—Ç–∏–≤–µ–Ω'}
                                                    </span>
                                                </td>
                                                <td>
                                                    <button class="btn btn-sm btn-outline-primary" 
                                                            onclick="navigateToActivity('${activity.timestamp}')"
                                                            title="–ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏">
                                                        <i class="bi bi-arrow-right-circle"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        `;
                                    }).join('')}
                                </tbody>
                            </table>
                        </div>
                        
                        <div class="mt-3">
                            <div class="alert alert-success">
                                <div class="row">
                                    <div class="col-md-4">
                                        <i class="bi bi-info-circle me-2"></i>
                                        <strong>–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π:</strong> ${sortedActivities.length}
                                    </div>
                                    <div class="col-md-4">
                                        <i class="bi bi-apps me-2"></i>
                                        <strong>–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:</strong> ${new Set(sortedActivities.map(a => a.appName || a.app_name || a.application)).size}
                                    </div>
                                    <div class="col-md-4">
                                        <i class="bi bi-clock me-2"></i>
                                        <strong>–û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> ${formatDuration(targetPeriod.duration)}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle me-1"></i>–ó–∞–∫—Ä—ã—Ç—å
                        </button>
                        <button type="button" class="btn btn-primary" onclick="exportPeriodDetails('${targetPeriod.startTime}')">
                            <i class="bi bi-download me-1"></i>–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
    const existingModal = document.getElementById('processDetailsModal');
    if (existingModal) {
        existingModal.remove();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.body.insertAdjacentHTML('beforeend', modalHtml);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(document.getElementById('processDetailsModal'));
    modal.show();
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 * @param {Array} activities - –ú–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å HTML –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º
 */
function createDetailedAppSequence(activities) {
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏
    const appGroups = [];
    let currentGroup = null;
    
    for (const activity of activities) {
        const appName = activity.appName || activity.app_name || activity.application;
        
        if (!currentGroup || currentGroup.appName !== appName) {
            if (currentGroup) {
                appGroups.push(currentGroup);
            }
            currentGroup = {
                appName: appName,
                startTime: new Date(activity.timestamp),
                endTime: new Date(activity.timestamp),
                count: 1,
                activities: [activity]
            };
        } else {
            currentGroup.endTime = new Date(activity.timestamp);
            currentGroup.count++;
            currentGroup.activities.push(activity);
        }
    }
    
    if (currentGroup) {
        appGroups.push(currentGroup);
    }
    
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const sequenceHtml = appGroups.map((group, index) => {
        const appIcon = getAppIcon(group.appName);
        const appColor = getAppColor(group.appName);
        const isProductive = isProductiveApplication(group.appName);
        const duration = Math.round((group.endTime - group.startTime) / 1000) + 1;
        const timeRange = `${group.startTime.toLocaleTimeString('ru-RU')} - ${group.endTime.toLocaleTimeString('ru-RU')}`;
        
        return `
            <div class="app-sequence-item mb-2 p-3 border rounded">
                <div class="d-flex align-items-center justify-content-between">
                    <div class="d-flex align-items-center">
                        <span class="sequence-number badge bg-primary me-3">${index + 1}</span>
                        <i class="bi ${appIcon} me-2" style="color: ${appColor}; font-size: 1.5em;"></i>
                        <div>
                            <h6 class="mb-1">
                                ${getShortAppName(group.appName)}
                                ${isProductive ? 
                                    '<i class="bi bi-check-circle text-success ms-1" title="–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"></i>' : 
                                    '<i class="bi bi-exclamation-triangle text-warning ms-1" title="–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"></i>'
                                }
                            </h6>
                            <small class="text-muted">${group.appName}</small>
                        </div>
                    </div>
                    <div class="text-end">
                        <div class="badge bg-light text-dark mb-1">${timeRange}</div><br>
                        <div class="badge bg-info">${formatDuration(duration)}</div>
                        <div class="badge bg-secondary ms-1">${group.count} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</div>
                    </div>
                </div>
            </div>
        `;
    }).join('');
    
    return {
        html: sequenceHtml
    };
}

/**
 * –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏
 * @param {string} timestamp - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
function navigateToActivity(timestamp) {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = bootstrap.Modal.getInstance(document.getElementById('processDetailsModal'));
    if (modal) {
        modal.hide();
    }
    
    // –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    setTimeout(() => {
        showActivityInTimeline(timestamp);
    }, 300);
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–∏–æ–¥–∞
 * @param {string} periodStart - –ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞
 */
function exportPeriodDetails(periodStart) {
    console.log('üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–µ—Ç–∞–ª–µ–π –ø–µ—Ä–∏–æ–¥–∞:', periodStart);
    alert('–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
}
/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
 */
/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
 */
function toggleAppSequenceGrouping() {
    const container = document.getElementById('appSequenceContainer');
    const toggleBtn = document.getElementById('appSequenceToggle');
    const isGrouped = toggleBtn.dataset.grouped === 'true';
    
    if (isGrouped) {
        // –†–∞–∑–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–∞–∫ –±—ã–ª–æ
        toggleBtn.innerHTML = '<i class="bi bi-collection me-1"></i>–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å';
        toggleBtn.dataset.grouped = 'false';
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π HTML –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        const originalHTML = toggleBtn.dataset.originalHtml;
        if (originalHTML) {
            container.innerHTML = originalHTML;
        }
    } else {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π HTML –ø–µ—Ä–µ–¥ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π
        toggleBtn.dataset.originalHtml = container.innerHTML;
        
        // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –≤ —Å–ø–æ–π–ª–µ—Ä—ã
        toggleBtn.innerHTML = '<i class="bi bi-collection-fill me-1"></i>–†–∞–∑–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å';
        toggleBtn.dataset.grouped = 'true';
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        const appItems = container.querySelectorAll('.app-sequence-item');
        const groupedData = {};
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
        appItems.forEach(item => {
            const appName = item.querySelector('h6').textContent.trim();
            if (!groupedData[appName]) {
                groupedData[appName] = [];
            }
            groupedData[appName].push(item.outerHTML);
        });
        
        // –°–æ–∑–¥–∞–µ–º —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML
        let groupedHTML = '';
        let groupIndex = 0;
        
        Object.keys(groupedData).forEach(appName => {
            const items = groupedData[appName];
            const totalActivities = items.length;
            
            groupedHTML += `
                <div class="card mb-2">
                    <div class="card-header py-2" style="cursor: pointer;" onclick="toggleAppGroup(${groupIndex})">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">
                                <i class="bi bi-chevron-right me-2" id="chevron-${groupIndex}"></i>
                                ${appName}
                            </h6>
                            <span class="badge bg-primary">${totalActivities} –∑–∞–ø–∏—Å–µ–π</span>
                        </div>
                    </div>
                    <div class="collapse" id="appGroup-${groupIndex}">
                        <div class="card-body p-2">
                            ${items.join('')}
                        </div>
                    </div>
                </div>
            `;
            groupIndex++;
        });
        
        container.innerHTML = groupedHTML;
    }
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏
 */
function toggleChronologyGrouping() {
    const container = document.getElementById('chronologyTableContainer');
    const toggleBtn = document.getElementById('chronologyToggle');
    const isGrouped = toggleBtn.dataset.grouped === 'true';
    
    if (isGrouped) {
        // –†–∞–∑–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å - –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—ã—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        toggleBtn.innerHTML = '<i class="bi bi-chevron-up me-1"></i>–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ';
        toggleBtn.dataset.grouped = 'false';
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π HTML –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        const originalHTML = toggleBtn.dataset.originalHtml;
        if (originalHTML) {
            container.innerHTML = originalHTML;
        }
    } else {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π HTML –ø–µ—Ä–µ–¥ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π
        toggleBtn.dataset.originalHtml = container.innerHTML;
        
        // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º –≤ —Å–ø–æ–π–ª–µ—Ä—ã
        toggleBtn.innerHTML = '<i class="bi bi-chevron-down me-1"></i>–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ';
        toggleBtn.dataset.grouped = 'true';
        
        const table = container.querySelector('table');
        const rows = Array.from(table.querySelectorAll('tbody tr'));
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
        const groupedRows = {};
        rows.forEach(row => {
            const appName = row.dataset.app;
            if (!groupedRows[appName]) {
                groupedRows[appName] = [];
            }
            groupedRows[appName].push(row);
        });
        
        // –°–æ–∑–¥–∞–µ–º —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        let groupedHTML = '';
        let groupIndex = 0;
        
        Object.keys(groupedRows).forEach(appName => {
            const rowElements = groupedRows[appName];
            const appIcon = getAppIcon(appName);
            const appColor = getAppColor(appName);
            const isProductive = isProductiveApplication(appName);
            
            // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è —Å—Ç—Ä–æ–∫ –≤ –≥—Ä—É–ø–ø–µ
            const groupRowsHTML = rowElements.map(row => {
                const cells = row.querySelectorAll('td');
                return `
                    <tr>
                        <td>${cells[0].innerHTML}</td>
                        <td>${cells[2].innerHTML}</td>
                        <td>${cells[3].innerHTML}</td>
                        <td>${cells[5].innerHTML}</td>
                    </tr>
                `;
            }).join('');
            
            groupedHTML += `
                <div class="card mb-2">
                    <div class="card-header py-2" style="cursor: pointer;" onclick="toggleChronologyGroup(${groupIndex})">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-chevron-right me-2" id="chronoChevron-${groupIndex}"></i>
                                <i class="bi ${appIcon} me-2" style="color: ${appColor};"></i>
                                <h6 class="mb-0">
                                    ${getShortAppName(appName)}
                                    ${isProductive ? 
                                        '<i class="bi bi-check-circle text-success ms-1" title="–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ"></i>' : 
                                        '<i class="bi bi-exclamation-triangle text-warning ms-1" title="–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ"></i>'
                                    }
                                </h6>
                            </div>
                            <span class="badge bg-primary">${rowElements.length} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</span>
                        </div>
                    </div>
                    <div class="collapse" id="chronoGroup-${groupIndex}">
                        <div class="card-body p-0">
                            <table class="table table-sm mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>–í—Ä–µ–º—è</th>
                                        <th>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞</th>
                                        <th>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</th>
                                        <th>–î–µ–π—Å—Ç–≤–∏–µ</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${groupRowsHTML}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            `;
            groupIndex++;
        });
        
        container.innerHTML = groupedHTML;
    }
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏
 */
function toggleChronologyGroup(index) {
    const collapseElement = document.getElementById(`chronoGroup-${index}`);
    const chevron = document.getElementById(`chronoChevron-${index}`);
    
    if (collapseElement.classList.contains('show')) {
        collapseElement.classList.remove('show');
        chevron.classList.remove('bi-chevron-down');
        chevron.classList.add('bi-chevron-right');
    } else {
        collapseElement.classList.add('show');
        chevron.classList.remove('bi-chevron-right');
        chevron.classList.add('bi-chevron-down');
    }
}

/**
 * –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∏–ª–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤—Å–µ –≥—Ä—É–ø–ø—ã —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏
 */
function toggleAllChronologyGroups(expand = true) {
    const groups = document.querySelectorAll('[id^="chronoGroup-"]');
    const chevrons = document.querySelectorAll('[id^="chronoChevron-"]');
    
    groups.forEach((group, index) => {
        if (expand) {
            group.classList.add('show');
            chevrons[index].classList.remove('bi-chevron-right');
            chevrons[index].classList.add('bi-chevron-down');
        } else {
            group.classList.remove('show');
            chevrons[index].classList.remove('bi-chevron-down');
            chevrons[index].classList.add('bi-chevron-right');
        }
    });
}
function showActivityInTimeline(timestamp) {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = bootstrap.Modal.getInstance(document.getElementById('processDetailsModal'));
    if (modal) {
        modal.hide();
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω - –∏—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
    const windowActivityTab = document.querySelector('button[data-bs-target="#window-activity"]') || 
                             document.querySelector('a[href="#window-activity"]') ||
                             document.getElementById('window-activity-tab');
    
    if (windowActivityTab) {
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∫–ª–∞–¥–∫—É
        windowActivityTab.click();
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏
        setTimeout(() => {
            // –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—É —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ ID
            const chronologyTable = document.getElementById('chronology-table') ||
                                   document.getElementById('window-activity-table') ||
                                   document.querySelector('#window-activity table') ||
                                   document.querySelector('.chronology-table');
            
            if (chronologyTable) {
                const targetTime = new Date(timestamp).toLocaleTimeString('ru-RU');
                const rows = chronologyTable.querySelectorAll('tbody tr');
                
                console.log(`üîç –ò—â–µ–º –≤—Ä–µ–º—è ${targetTime} —Å—Ä–µ–¥–∏ ${rows.length} —Å—Ç—Ä–æ–∫`);
                
                let found = false;
                for (let row of rows) {
                    const timeCell = row.querySelector('td:first-child');
                    if (timeCell && timeCell.textContent.includes(targetTime)) {
                        row.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        row.classList.add('table-warning');
                        setTimeout(() => row.classList.remove('table-warning'), 3000);
                        found = true;
                        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏ –ø–æ–¥—Å–≤–µ—á–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –≤—Ä–µ–º–µ–Ω–µ–º', targetTime);
                        break;
                    }
                }
                
                if (!found) {
                    console.log('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –≤—Ä–µ–º–µ–Ω–µ–º', targetTime);
                    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
                    const targetTimestamp = new Date(timestamp);
                    let closestRow = null;
                    let minDiff = Infinity;
                    
                    for (let row of rows) {
                        const timeCell = row.querySelector('td:first-child');
                        if (timeCell) {
                            try {
                                const rowTime = timeCell.textContent.trim();
                                const today = new Date().toDateString();
                                const rowTimestamp = new Date(`${today} ${rowTime}`);
                                const diff = Math.abs(rowTimestamp - targetTimestamp);
                                
                                if (diff < minDiff) {
                                    minDiff = diff;
                                    closestRow = row;
                                }
                            } catch (e) {
                                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏
                            }
                        }
                    }
                    
                    if (closestRow) {
                        closestRow.scrollIntoView({ behavior: 'smooth', block: 'center' });
                        closestRow.classList.add('table-info');
                        setTimeout(() => closestRow.classList.remove('table-info'), 3000);
                        console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –±–ª–∏–∂–∞–π—à–∞—è —Å—Ç—Ä–æ–∫–∞');
                    }
                }
            } else {
                console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                alert('–¢–∞–±–ª–∏—Ü–∞ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∫–ª–∞–¥–∫–∞ "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–∫–æ–Ω" –∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
            }
        }, 1000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
    } else {
        console.log('‚ùå –í–∫–ª–∞–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        alert('–í–∫–ª–∞–¥–∫–∞ "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–∫–æ–Ω" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–µ—ë –≤—Ä—É—á–Ω—É—é.');
    }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} mode - –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
function updateDisplayModeDescription(mode) {
    const descriptionElement = document.getElementById('display-mode-description');
    if (!descriptionElement) return;
    
    const descriptions = {
        'standard': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –∑–∞–ø–∏—Å–∏ –ø–æ 5-–º–∏–Ω—É—Ç–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º',
        'smart-spoilers': '–£–º–Ω—ã–µ —Å–ø–æ–π–ª–µ—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º —Å —É—á–µ—Ç–æ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–º–∞–∫—Å. 4 –±–æ–ª—å—à–∏—Ö –ø–µ—Ä–∏–æ–¥–∞)'
    };
    
    descriptionElement.textContent = descriptions[mode] || descriptions['standard'];
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –±–µ–π–¥–∂ –¥–ª—è —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @returns {string} - HTML –±–µ–π–¥–∂–∞
 */
function getActivityBadge(level) {
    switch (level) {
        case '–í—ã—Å–æ–∫–∞—è':
            return '<span class="badge bg-success"><i class="bi bi-lightning-fill me-1"></i>–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>';
        case '–°—Ä–µ–¥–Ω—è—è':
            return '<span class="badge bg-warning"><i class="bi bi-activity me-1"></i>–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>';
        case '–ù–∏–∑–∫–∞—è':
            return '<span class="badge bg-secondary"><i class="bi bi-pause-circle me-1"></i>–ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>';
        default:
            return '<span class="badge bg-light text-dark">–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ</span>';
    }
}

console.log('üß† –£–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ñ–æ–∫—É—Å–∞ –æ–∫–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω!'); 

/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —É–º–Ω—ã–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Ñ–æ–∫—É—Å–∞
 * @param {Object} allData - –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Ñ–æ–∫—É—Å–∞
 */
function updateDashboardMetricsFromFocusAnalyzer(allData) {
    console.log('üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Ñ–æ–∫—É—Å–∞ —Å —É–º–Ω—ã–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —É–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
    if (typeof updateMainMetricsWithRealActivity !== 'function') {
        console.log('‚ö†Ô∏è –£–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
    if (!allData.windowActivities || allData.windowActivities.length === 0) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫');
        return;
    }
    
    console.log('üìä –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —É–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:', {
        windowActivities: allData.windowActivities.length,
        mouseActivities: allData.mouseActivities.length
    });
    
    // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —É–º–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
    // –¢–µ–ø–µ—Ä—å —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –º—ã—à–∏ –∫–∞–∫ –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    updateMainMetricsWithRealActivity(allData.windowActivities, allData.mouseActivities);
    
    console.log('‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Ñ–æ–∫—É—Å–∞');
}

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ê–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @param {Array} mouseData - –î–∞–Ω–Ω—ã–µ –º—ã—à–∏
 * @param {Array} resourceData - –î–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @returns {Object} - –û—Ü–µ–Ω–∫–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
 */
function analyzeHumanFocusWithSystemMetrics(period, mouseData, resourceData) {
    console.log('üß† –ê–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞ —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞:', period.primaryApp);
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
    const HUMAN_FOCUS_WEIGHTS = {
        MOUSE_ACTIVITY: 0.30,        // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º—ã—à–∏
        SYSTEM_CORRELATION: 0.25,    // –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
        RESOURCE_PATTERNS: 0.20,     // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
        ACTIVITY_COHERENCE: 0.15,    // –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        CONTEXT_AWARENESS: 0.10      // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω–Ω–æ—Å—Ç—å
    };
    
    // 1. –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏ (–±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å)
    const mouseAnalysis = analyzeMouseActivity(mouseData);
    const mouseScore = calculateMouseFocusScore(mouseAnalysis);
    
    // 2. –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é
    const systemCorrelation = analyzeSystemResourceCorrelation(mouseData, resourceData);
    
    // 3. –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    const resourcePatterns = analyzeResourcePatterns(resourceData, period);
    
    // 4. –ê–Ω–∞–ª–∏–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const activityCoherence = analyzeActivityCoherence(mouseData, resourceData, period);
    
    // 5. –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω–Ω–æ—Å—Ç—å (—Ç–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
    const contextAwareness = analyzeContextAwareness(period);
    
    // –í—ã—á–∏—Å–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
    const humanFocusScore = (
        mouseScore * HUMAN_FOCUS_WEIGHTS.MOUSE_ACTIVITY +
        systemCorrelation.score * HUMAN_FOCUS_WEIGHTS.SYSTEM_CORRELATION +
        resourcePatterns.score * HUMAN_FOCUS_WEIGHTS.RESOURCE_PATTERNS +
        activityCoherence.score * HUMAN_FOCUS_WEIGHTS.ACTIVITY_COHERENCE +
        contextAwareness.score * HUMAN_FOCUS_WEIGHTS.CONTEXT_AWARENESS
    );
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Ñ–æ–∫—É—Å–∞
    const focusLevel = getFocusLevel(humanFocusScore);
    const confidence = calculateFocusConfidence(mouseAnalysis, systemCorrelation, resourcePatterns);
    
    console.log(`üéØ –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–æ–∫—É—Å –¥–ª—è ${period.primaryApp}: ${Math.round(humanFocusScore * 100)}% (${focusLevel})`);
    
    return {
        score: Math.round(humanFocusScore * 100),
        level: focusLevel,
        confidence: confidence,
        breakdown: {
            mouseActivity: mouseScore,
            systemCorrelation: systemCorrelation.score,
            resourcePatterns: resourcePatterns.score,
            activityCoherence: activityCoherence.score,
            contextAwareness: contextAwareness.score
        },
        details: {
            mouseAnalysis: mouseAnalysis,
            systemCorrelation: systemCorrelation,
            resourcePatterns: resourcePatterns,
            activityCoherence: activityCoherence,
            contextAwareness: contextAwareness
        },
        insights: generateHumanFocusInsights(humanFocusScore, focusLevel, period),
        recommendations: generateFocusRecommendations(humanFocusScore, period)
    };
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –æ—Ü–µ–Ω–∫—É —Ñ–æ–∫—É—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏
 * @param {Object} mouseAnalysis - –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏
 * @returns {number} - –û—Ü–µ–Ω–∫–∞ –æ—Ç 0 –¥–æ 1
 */
function calculateMouseFocusScore(mouseAnalysis) {
    if (!mouseAnalysis.isActive) return 0;
    
    const clicksScore = Math.min(mouseAnalysis.clicks / 10, 1); // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–æ 10 –∫–ª–∏–∫–æ–≤
    const movementsScore = Math.min(mouseAnalysis.movements / 50, 1); // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–æ 50 –¥–≤–∏–∂–µ–Ω–∏–π
    
    // –ë–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –∫–ª–∏–∫–∞–º–∏ –∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏ –≤–∞–∂–µ–Ω –¥–ª—è —Ñ–æ–∫—É—Å–∞
    const balance = 1 - Math.abs(clicksScore - movementsScore);
    
    return (clicksScore * 0.4 + movementsScore * 0.4 + balance * 0.2);
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} mouseData - –î–∞–Ω–Ω—ã–µ –º—ã—à–∏
 * @param {Array} resourceData - –î–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @returns {Object} - –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
 */
function analyzeSystemResourceCorrelation(mouseData, resourceData) {
    if (!mouseData || !resourceData || mouseData.length === 0 || resourceData.length === 0) {
        return { score: 0, correlations: {}, confidence: 0 };
    }
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
    const intervals = createTimeIntervals(mouseData, resourceData);
    
    const correlations = {
        cpuMouse: calculateCorrelation(intervals.cpu, intervals.mouse),
        gpuMouse: calculateCorrelation(intervals.gpu, intervals.mouse),
        ramMouse: calculateCorrelation(intervals.ram, intervals.mouse),
        networkMouse: calculateCorrelation(intervals.network, intervals.mouse)
    };
    
    // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    const avgCorrelation = Object.values(correlations).reduce((sum, val) => sum + Math.max(0, val), 0) / 4;
    
    return {
        score: avgCorrelation,
        correlations: correlations,
        confidence: calculateCorrelationConfidence(correlations),
        interpretation: interpretCorrelations(correlations)
    };
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param {Array} resourceData - –î–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @returns {Object} - –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
 */
function analyzeResourcePatterns(resourceData, period) {
    if (!resourceData || resourceData.length === 0) {
        return { score: 0, patterns: [], confidence: 0 };
    }
    
    const patterns = [];
    let patternScore = 0;
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Å—É—Ä—Å–æ–≤ (—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ–ª–µ–µ –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–∞)
    const cpuVariability = calculateVariability(resourceData.map(r => r.cpu_percent || r.cpu || 0));
    const ramVariability = calculateVariability(resourceData.map(r => r.ram_percent || r.memory || 0));
    const gpuVariability = calculateVariability(resourceData.map(r => r.gpu_percent || r.gpu || 0));
    
    // –ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–µ—Ç –ø—É–ª—å—Å–∞—Ü–∏–∏ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    if (cpuVariability > 0.3) {
        patterns.push('cpu_pulsation');
        patternScore += 0.3;
    }
    
    if (ramVariability > 0.2) {
        patterns.push('ram_variation');
        patternScore += 0.2;
    }
    
    if (gpuVariability > 0.4) {
        patterns.push('gpu_activity');
        patternScore += 0.2;
    }
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ —Ç–∏–ø—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const appTypeScore = analyzeAppResourceMatch(period.primaryApp, resourceData);
    patternScore += appTypeScore * 0.3;
    
    return {
        score: Math.min(patternScore, 1),
        patterns: patterns,
        variability: { cpu: cpuVariability, ram: ramVariability, gpu: gpuVariability },
        appMatch: appTypeScore,
        confidence: patterns.length > 0 ? 0.8 : 0.3
    };
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 * @param {Array} mouseData - –î–∞–Ω–Ω—ã–µ –º—ã—à–∏
 * @param {Array} resourceData - –î–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–æ–≤
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @returns {Object} - –ê–Ω–∞–ª–∏–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏
 */
function analyzeActivityCoherence(mouseData, resourceData, period) {
    if (!mouseData || !resourceData) {
        return { score: 0.5, coherence: 'unknown', factors: [] };
    }
    
    const factors = [];
    let coherenceScore = 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
    const timeCoherence = checkTimeCoherence(mouseData, resourceData);
    if (timeCoherence > 0.7) {
        factors.push('temporal_coherence');
        coherenceScore += 0.4;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏
    const intensityCoherence = checkIntensityCoherence(mouseData, resourceData);
    if (intensityCoherence > 0.6) {
        factors.push('intensity_coherence');
        coherenceScore += 0.3;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
    const contextCoherence = checkContextCoherence(period, resourceData);
    if (contextCoherence > 0.5) {
        factors.push('context_coherence');
        coherenceScore += 0.3;
    }
    
    const coherenceLevel = coherenceScore > 0.7 ? 'high' : coherenceScore > 0.4 ? 'medium' : 'low';
    
    return {
        score: coherenceScore,
        coherence: coherenceLevel,
        factors: factors,
        details: {
            timeCoherence: timeCoherence,
            intensityCoherence: intensityCoherence,
            contextCoherence: contextCoherence
        }
    };
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω–Ω–æ—Å—Ç—å
 * @param {Object} period - –ü–µ—Ä–∏–æ–¥ —Ñ–æ–∫—É—Å–∞
 * @returns {Object} - –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 */
function analyzeContextAwareness(period) {
    const appName = period.primaryApp;
    const duration = period.duration || 0;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –æ–∂–∏–¥–∞–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Ñ–æ–∫—É—Å–∞
    const appContext = getApplicationContext(appName);
    const durationScore = calculateDurationScore(duration, appContext.expectedDuration);
    const frequencyScore = calculateFrequencyScore(period.activitiesCount, duration);
    
    const contextScore = (
        appContext.focusPotential * 0.5 +
        durationScore * 0.3 +
        frequencyScore * 0.2
    );
    
    return {
        score: contextScore,
        appType: appContext.type,
        focusPotential: appContext.focusPotential,
        expectedDuration: appContext.expectedDuration,
        durationScore: durationScore,
        frequencyScore: frequencyScore
    };
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
 */

function createTimeIntervals(mouseData, resourceData) {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    const intervals = { mouse: [], cpu: [], gpu: [], ram: [], network: [] };
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ 10-—Å–µ–∫—É–Ω–¥–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º
    const intervalSize = 10000; // 10 —Å–µ–∫—É–Ω–¥ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    const startTime = Math.min(
        mouseData.length > 0 ? new Date(mouseData[0].timestamp).getTime() : Date.now(),
        resourceData.length > 0 ? new Date(resourceData[0].timestamp).getTime() : Date.now()
    );
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –∏—Ö –¥–∞–Ω–Ω—ã–º–∏
    for (let i = 0; i < 30; i++) { // 30 –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ = 5 –º–∏–Ω—É—Ç
        const intervalStart = startTime + i * intervalSize;
        const intervalEnd = intervalStart + intervalSize;
        
        // –ú—ã—à–∏–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ
        const mouseActivity = mouseData.filter(m => {
            const time = new Date(m.timestamp).getTime();
            return time >= intervalStart && time < intervalEnd;
        }).reduce((sum, m) => sum + (m.mouse_clicks || 0) + (m.mouse_movements || 0), 0);
        
        // –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ
        const resources = resourceData.filter(r => {
            const time = new Date(r.timestamp).getTime();
            return time >= intervalStart && time < intervalEnd;
        });
        
        const avgCpu = resources.reduce((sum, r) => sum + (r.cpu_percent || r.cpu || 0), 0) / Math.max(resources.length, 1);
        const avgGpu = resources.reduce((sum, r) => sum + (r.gpu_percent || r.gpu || 0), 0) / Math.max(resources.length, 1);
        const avgRam = resources.reduce((sum, r) => sum + (r.ram_percent || r.memory || 0), 0) / Math.max(resources.length, 1);
        const avgNetwork = resources.reduce((sum, r) => sum + (r.network_usage || r.network || 0), 0) / Math.max(resources.length, 1);
        
        intervals.mouse.push(mouseActivity);
        intervals.cpu.push(avgCpu);
        intervals.gpu.push(avgGpu);
        intervals.ram.push(avgRam);
        intervals.network.push(avgNetwork);
    }
    
    return intervals;
}

function calculateCorrelation(x, y) {
    if (x.length !== y.length || x.length === 0) return 0;
    
    const n = x.length;
    const sumX = x.reduce((a, b) => a + b, 0);
    const sumY = y.reduce((a, b) => a + b, 0);
    const sumXY = x.reduce((sum, xi, i) => sum + xi * y[i], 0);
    const sumX2 = x.reduce((sum, xi) => sum + xi * xi, 0);
    const sumY2 = y.reduce((sum, yi) => sum + yi * yi, 0);
    
    const numerator = n * sumXY - sumX * sumY;
    const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));
    
    return denominator === 0 ? 0 : numerator / denominator;
}

function calculateVariability(values) {
    if (values.length === 0) return 0;
    
    const mean = values.reduce((sum, val) => sum + val, 0) / values.length;
    const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length;
    const stdDev = Math.sqrt(variance);
    
    return mean > 0 ? stdDev / mean : 0; // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏
}

function analyzeAppResourceMatch(appName, resourceData) {
    const appLower = appName.toLowerCase();
    const avgCpu = resourceData.reduce((sum, r) => sum + (r.cpu_percent || r.cpu || 0), 0) / resourceData.length;
    const avgGpu = resourceData.reduce((sum, r) => sum + (r.gpu_percent || r.gpu || 0), 0) / resourceData.length;
    
    // –û–∂–∏–¥–∞–µ–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    if (appLower.includes('chrome') || appLower.includes('firefox') || appLower.includes('edge')) {
        // –ë—Ä–∞—É–∑–µ—Ä—ã: —Å—Ä–µ–¥–Ω–∏–π CPU, –Ω–∏–∑–∫–∏–π GPU
        return avgCpu > 10 && avgCpu < 60 ? 0.8 : 0.4;
    } else if (appLower.includes('code') || appLower.includes('cursor')) {
        // –†–µ–¥–∞–∫—Ç–æ—Ä—ã –∫–æ–¥–∞: —Å—Ä–µ–¥–Ω–∏–π CPU, –Ω–∏–∑–∫–∏–π GPU
        return avgCpu > 5 && avgCpu < 40 ? 0.9 : 0.5;
    } else if (appLower.includes('photoshop') || appLower.includes('blender')) {
        // –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: –≤—ã—Å–æ–∫–∏–π CPU –∏ GPU
        return avgCpu > 20 && avgGpu > 10 ? 0.9 : 0.3;
    } else if (appLower.includes('video') || appLower.includes('media')) {
        // –ú–µ–¥–∏–∞: —Å—Ä–µ–¥–Ω–∏–π CPU, –≤–æ–∑–º–æ–∂–Ω–æ GPU
        return avgCpu > 15 ? 0.7 : 0.4;
    }
    
    return 0.5; // –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
}

function checkTimeCoherence(mouseData, resourceData) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ –ø–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º—ã—à–∏ —Å –ø–∏–∫–∞–º–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    // –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    return 0.7; // –ó–∞–≥–ª—É—à–∫–∞
}

function checkIntensityCoherence(mouseData, resourceData) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –º—ã—à–∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    return 0.6; // –ó–∞–≥–ª—É—à–∫–∞
}

function checkContextCoherence(period, resourceData) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    return analyzeAppResourceMatch(period.primaryApp, resourceData);
}

function getApplicationContext(appName) {
    const appLower = appName.toLowerCase();
    
    if (appLower.includes('chrome') || appLower.includes('firefox') || appLower.includes('edge')) {
        return { type: 'browser', focusPotential: 0.6, expectedDuration: 300 }; // 5 –º–∏–Ω—É—Ç
    } else if (appLower.includes('code') || appLower.includes('cursor')) {
        return { type: 'development', focusPotential: 0.9, expectedDuration: 900 }; // 15 –º–∏–Ω—É—Ç
    } else if (appLower.includes('word') || appLower.includes('excel')) {
        return { type: 'office', focusPotential: 0.8, expectedDuration: 600 }; // 10 –º–∏–Ω—É—Ç
    } else if (appLower.includes('telegram') || appLower.includes('whatsapp')) {
        return { type: 'communication', focusPotential: 0.4, expectedDuration: 120 }; // 2 –º–∏–Ω—É—Ç—ã
    } else if (appLower.includes('youtube') || appLower.includes('media')) {
        return { type: 'media', focusPotential: 0.3, expectedDuration: 600 }; // 10 –º–∏–Ω—É—Ç
    }
    
    return { type: 'unknown', focusPotential: 0.5, expectedDuration: 300 };
}

function calculateDurationScore(actualDuration, expectedDuration) {
    if (expectedDuration === 0) return 0.5;
    
    const ratio = actualDuration / expectedDuration;
    
    // –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω: 0.5 - 2.0 –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if (ratio >= 0.5 && ratio <= 2.0) {
        return 1.0;
    } else if (ratio >= 0.2 && ratio <= 4.0) {
        return 0.7;
    } else {
        return 0.3;
    }
}

function calculateFrequencyScore(activitiesCount, duration) {
    if (duration === 0) return 0;
    
    const frequency = activitiesCount / (duration / 60); // –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –º–∏–Ω—É—Ç—É
    
    // –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞: 1-5 –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –º–∏–Ω—É—Ç—É
    if (frequency >= 1 && frequency <= 5) {
        return 1.0;
    } else if (frequency >= 0.5 && frequency <= 10) {
        return 0.7;
    } else {
        return 0.3;
    }
}

function getFocusLevel(score) {
    if (score >= 0.8) return '–í—ã—Å–æ–∫–∏–π';
    if (score >= 0.6) return '–°—Ä–µ–¥–Ω–∏–π';
    if (score >= 0.4) return '–ù–∏–∑–∫–∏–π';
    return '–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π';
}

function calculateFocusConfidence(mouseAnalysis, systemCorrelation, resourcePatterns) {
    const factors = [
        mouseAnalysis.isActive ? 0.3 : 0,
        systemCorrelation.confidence * 0.3,
        resourcePatterns.confidence * 0.2,
        0.2 // –ë–∞–∑–æ–≤–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
    ];
    
    return Math.min(factors.reduce((sum, f) => sum + f, 0), 1);
}

function calculateCorrelationConfidence(correlations) {
    const validCorrelations = Object.values(correlations).filter(c => !isNaN(c) && c !== 0);
    return validCorrelations.length > 0 ? Math.min(validCorrelations.length / 4, 1) : 0;
}

function interpretCorrelations(correlations) {
    const interpretations = [];
    
    if (correlations.cpuMouse > 0.5) {
        interpretations.push('–í—ã—Å–æ–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è CPU-–º—ã—à—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∞–∫—Ç–∏–≤–Ω—É—é —Ä–∞–±–æ—Ç—É');
    }
    if (correlations.gpuMouse > 0.4) {
        interpretations.push('–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è GPU-–º—ã—à—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å');
    }
    if (correlations.ramMouse > 0.3) {
        interpretations.push('–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è RAM-–º—ã—à—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏');
    }
    if (correlations.networkMouse > 0.3) {
        interpretations.push('–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å–µ—Ç—å-–º—ã—à—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ–Ω–ª–∞–π–Ω-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å');
    }
    
    return interpretations;
}

function generateHumanFocusInsights(score, level, period) {
    const insights = [];
    
    if (score >= 0.8) {
        insights.push(`–û—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ñ–æ–∫—É—Å–∞ –≤ ${period.primaryApp}`);
        insights.push('–í—ã—Å–æ–∫–∞—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏');
    } else if (score >= 0.6) {
        insights.push(`–•–æ—Ä–æ—à–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–æ–∫—É—Å–∞ –≤ ${period.primaryApp}`);
        insights.push('–£–º–µ—Ä–µ–Ω–Ω–∞—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å —Å –ø–µ—Ä–∏–æ–¥–∞–º–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏');
    } else if (score >= 0.4) {
        insights.push(`–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–æ–∫—É—Å–∞ –≤ ${period.primaryApp}`);
        insights.push('–í–æ–∑–º–æ–∂–Ω—ã –æ—Ç–≤–ª–µ—á–µ–Ω–∏—è –∏–ª–∏ –ø–∞—Å—Å–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ');
    } else {
        insights.push(`–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–æ–∫—É—Å–∞ –≤ ${period.primaryApp}`);
        insights.push('–í–µ—Ä–æ—è—Ç–Ω–æ —Ñ–æ–Ω–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏');
    }
    
    return insights;
}

function generateFocusRecommendations(score, period) {
    const recommendations = [];
    
    if (score < 0.6) {
        recommendations.push('–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–ª–µ–∫–∞—é—â–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã');
        recommendations.push('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–µ–º (Pomodoro)');
    }
    
    if (period.duration < 300) { // –ú–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç
        recommendations.push('–£–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–æ–∫—É—Å–Ω—ã—Ö —Å–µ—Å—Å–∏–π');
    }
    
    if (period.activitiesCount > period.duration / 30) { // –ë–æ–ª–µ–µ 2 –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –º–∏–Ω—É—Ç—É
        recommendations.push('–°–Ω–∏–∑—å—Ç–µ —á–∞—Å—Ç–æ—Ç—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏');
    }
    
    return recommendations;
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–æ–∫—É—Å
 */
function updateFocusTableWithHumanFocusHighlight() {
    const tbody = document.querySelector('#window-focus-table tbody');
    const rows = tbody.querySelectorAll('tr:not(.table-info):not(.table-primary):not(.table-secondary)');
    
    rows.forEach(row => {
        // –ù–∞—Ö–æ–¥–∏–º –∫–æ–ª–æ–Ω–∫—É —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º —Ñ–æ–∫—É—Å–æ–º –∏ –≤—ã–¥–µ–ª—è–µ–º –µ—ë
        const humanFocusCell = row.querySelector('.human-focus-indicator');
        if (humanFocusCell) {
            const parent = humanFocusCell.closest('td');
            if (parent) {
                parent.style.backgroundColor = '#e3f2fd';
                parent.style.border = '2px solid #2196f3';
            }
        }
    });
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ —Å –≤—ã—Å–æ–∫–∏–º —Ñ–æ–∫—É—Å–æ–º
    const highFocusRow = Array.from(rows).find(row => {
        const badge = row.querySelector('.human-focus-indicator .badge');
        return badge && badge.textContent.includes('%') && 
               parseInt(badge.textContent.replace('%', '')) >= 80;
    });
    
    if (highFocusRow) {
        highFocusRow.scrollIntoView({ behavior: 'smooth', block: 'center' });
        highFocusRow.style.backgroundColor = '#e8f5e8';
        setTimeout(() => {
            highFocusRow.style.backgroundColor = '';
        }, 3000);
    }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
 * @param {Array} data - –î–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞
 */
function showHumanFocusDetailedStats(data) {
    const humanFocusData = data.filter(period => period.humanFocus);
    
    if (humanFocusData.length === 0) {
        console.warn('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const insights = [];
    const recommendations = [];
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    const highFocusPeriods = humanFocusData.filter(p => p.humanFocus.score >= 80);
    const lowFocusPeriods = humanFocusData.filter(p => p.humanFocus.score < 40);
    
    if (highFocusPeriods.length > 0) {
        const topApp = getTopAppByFocus(highFocusPeriods);
        insights.push(`üéØ –õ—É—á—à–∏–π —Ñ–æ–∫—É—Å –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –≤ ${topApp.name} (${topApp.avgScore}% –≤ —Å—Ä–µ–¥–Ω–µ–º)`);
    }
    
    if (lowFocusPeriods.length > humanFocusData.length * 0.3) {
        insights.push(`‚ö†Ô∏è ${Math.round((lowFocusPeriods.length / humanFocusData.length) * 100)}% –≤—Ä–µ–º–µ–Ω–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç—Å—è –Ω–∏–∑–∫–∏–º —Ñ–æ–∫—É—Å–æ–º`);
        recommendations.push('–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ—Ö–Ω–∏–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏');
    }
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
    const avgCorrelations = calculateAverageCorrelations(humanFocusData);
    if (avgCorrelations.cpuMouse > 0.5) {
        insights.push('üíª –í—ã—Å–æ–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –º—ã—à–∏ –∏ CPU —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∞–∫—Ç–∏–≤–Ω—É—é —Ä–∞–±–æ—Ç—É');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –¥–ª—è UI)
    console.log('üß† –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞:');
    console.log('üìä –ò–Ω—Å–∞–π—Ç—ã:', insights);
    console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:', recommendations);
    
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∏–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏
    showHumanFocusModal(insights, recommendations, humanFocusData);
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ª—É—á—à–∏–º —Ñ–æ–∫—É—Å–æ–º
 * @param {Array} periods - –ü–µ—Ä–∏–æ–¥—ã —Å –≤—ã—Å–æ–∫–∏–º —Ñ–æ–∫—É—Å–æ–º
 * @returns {Object} - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞
 */
function getTopAppByFocus(periods) {
    const appScores = {};
    
    periods.forEach(period => {
        const app = period.appName;
        if (!appScores[app]) {
            appScores[app] = { total: 0, count: 0 };
        }
        appScores[app].total += period.humanFocus.score;
        appScores[app].count++;
    });
    
    let topApp = { name: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', avgScore: 0 };
    
    Object.entries(appScores).forEach(([app, data]) => {
        const avgScore = data.total / data.count;
        if (avgScore > topApp.avgScore) {
            topApp = { name: app, avgScore: Math.round(avgScore) };
        }
    });
    
    return topApp;
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç —Å—Ä–µ–¥–Ω–∏–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
 * @param {Array} humanFocusData - –î–∞–Ω–Ω—ã–µ —Å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º —Ñ–æ–∫—É—Å–æ–º
 * @returns {Object} - –°—Ä–µ–¥–Ω–∏–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
 */
function calculateAverageCorrelations(humanFocusData) {
    const correlations = { cpuMouse: 0, gpuMouse: 0, ramMouse: 0, networkMouse: 0 };
    let count = 0;
    
    humanFocusData.forEach(period => {
        if (period.humanFocus.details && period.humanFocus.details.systemCorrelation) {
            const corr = period.humanFocus.details.systemCorrelation.correlations;
            correlations.cpuMouse += corr.cpuMouse || 0;
            correlations.gpuMouse += corr.gpuMouse || 0;
            correlations.ramMouse += corr.ramMouse || 0;
            correlations.networkMouse += corr.networkMouse || 0;
            count++;
        }
    });
    
    if (count > 0) {
        Object.keys(correlations).forEach(key => {
            correlations[key] = correlations[key] / count;
        });
    }
    
    return correlations;
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
 * @param {Array} insights - –ò–Ω—Å–∞–π—Ç—ã
 * @param {Array} recommendations - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
 * @param {Array} data - –î–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞
 */
function showHumanFocusModal(insights, recommendations, data) {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modalHtml = `
        <div class="modal fade" id="humanFocusModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title">
                            <i class="bi bi-brain me-2"></i>
                            –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–æ–∫—É—Å–∞
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6><i class="bi bi-lightbulb me-2"></i>–ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã:</h6>
                                <ul class="list-unstyled">
                                    ${insights.map(insight => `<li class="mb-2"><i class="bi bi-arrow-right me-2"></i>${insight}</li>`).join('')}
                                </ul>
                            </div>
                            <div class="col-md-6">
                                <h6><i class="bi bi-gear me-2"></i>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h6>
                                <ul class="list-unstyled">
                                    ${recommendations.map(rec => `<li class="mb-2"><i class="bi bi-check-circle me-2"></i>${rec}</li>`).join('')}
                                </ul>
                            </div>
                        </div>
                        <div class="mt-4">
                            <h6><i class="bi bi-graph-up me-2"></i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º:</h6>
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</th>
                                            <th>–°—Ä–µ–¥–Ω–∏–π —Ñ–æ–∫—É—Å</th>
                                            <th>–ü–µ—Ä–∏–æ–¥—ã</th>
                                            <th>–í—Ä–µ–º—è</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        ${generateAppStatsTable(data)}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const existingModal = document.getElementById('humanFocusModal');
    if (existingModal) {
        existingModal.remove();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
    document.body.insertAdjacentHTML('beforeend', modalHtml);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(document.getElementById('humanFocusModal'));
    modal.show();
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
 * @param {Array} data - –î–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞
 * @returns {string} - HTML —Ç–∞–±–ª–∏—Ü—ã
 */
function generateAppStatsTable(data) {
    const appStats = {};
    
    data.forEach(period => {
        const app = period.appName;
        if (!appStats[app]) {
            appStats[app] = { 
                totalScore: 0, 
                count: 0, 
                totalTime: 0 
            };
        }
        appStats[app].totalScore += period.humanFocus.score;
        appStats[app].count++;
        appStats[app].totalTime += period.duration;
    });
    
    return Object.entries(appStats)
        .map(([app, stats]) => {
            const avgScore = Math.round(stats.totalScore / stats.count);
            const focusClass = avgScore >= 80 ? 'text-success' : avgScore >= 60 ? 'text-primary' : avgScore >= 40 ? 'text-warning' : 'text-danger';
            
            return `
                <tr>
                    <td>${app}</td>
                    <td><span class="${focusClass} fw-bold">${avgScore}%</span></td>
                    <td>${stats.count}</td>
                    <td>${formatDuration(stats.totalTime)}</td>
                </tr>
            `;
        })
        .join('');
}

