// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
async function loadActivityTimesheet() {
    const startDate = document.getElementById('activity-start-date').value;
    const endDate = document.getElementById('activity-end-date').value;

    if (!startDate || !endDate) {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏");
        return;
    }

    console.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–µ–ª—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥: ${startDate} - ${endDate}`);

    try {
        showLoading(true);

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
        const employeeFilter = document.getElementById('employee-filter');
        const deviceFilter = document.getElementById('device-filter');

        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
        const params = new URLSearchParams();
        if (employeeFilter && employeeFilter.value) params.append('employee_id', employeeFilter.value);
        if (deviceFilter && deviceFilter.value) params.append('device_id', deviceFilter.value);
        params.append('start_date', startDate);
        params.append('end_date', endDate);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        document.getElementById('activity-timesheet-table').querySelector('tbody').innerHTML =
            '<tr><td colspan="7" class="text-center">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</td></tr>';

        console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API: /api/public/timesheet/activity?${params.toString()}`);

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
        let data = [];
        try {
            const response = await fetch(`/api/public/timesheet/activity?${params.toString()}`);

            if (response.ok) {
                // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –∏ –ø–∞—Ä—Å–∏–º JSON —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
                const responseText = await response.text();
                console.log(`–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤): ${responseText.substring(0, 200)}...`);
                data = JSON.parse(responseText);
                console.log('–î–∞–Ω–Ω—ã–µ —Ç–∞–±–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', data);
            } else {
                // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ —É—Å–ø–µ—à–µ–Ω, –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: HTTP —Å—Ç–∞—Ç—É—Å ${response.status}`);
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
                data = [];
            }
        } catch (fetchError) {
            // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
            console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', fetchError);
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
            data = [];
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ –Ω–µ—Ç)
        updateActivityTimesheet(data);

        // –û–¢–ö–õ–Æ–ß–ï–ù–û: –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü—ã
        // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å dashboard-timesheet.js –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—á–∏—Ç–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏
        // setTimeout(updateMetricsFromTableData, 500); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–∞–±–ª–∏—Ü—ã

        showLoading(false);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
        // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        showLoading(false);

        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π
        document.getElementById('activity-timesheet-table').querySelector('tbody').innerHTML =
            '<tr><td colspan="7" class="text-center">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥</td></tr>';

        // –û–±–Ω—É–ª—è–µ–º —Ç–æ–ª—å–∫–æ –º–µ—Ç—Ä–∏–∫–∏ —Ç–∞–±–µ–ª—è (–ù–ï —Ç—Ä–æ–≥–∞–µ–º —à–∞–ø–∫—É)
        document.getElementById('timesheet-total-time').textContent = '-';
        document.getElementById('timesheet-productive-time').textContent = '-';
        document.getElementById('timesheet-productivity').textContent = '-';
        document.getElementById('timesheet-break-time').textContent = '-';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Ç–∞–±–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
function updateActivityTimesheet(data) {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–∞–±–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å –¥–∞–Ω–Ω—ã–º–∏:', data);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
    if (!data || data.length === 0) {
        document.getElementById('activity-timesheet-table').querySelector('tbody').innerHTML =
            '<tr><td colspan="7" class="text-center">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥</td></tr>';
        return;
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É –¥–Ω—é
    const filters = getCurrentFilters();
    console.log('–ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∫ —Ç–∞–±–µ–ª—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', filters);

    const filteredData = data.map(day => {
        if (!day.activities || day.activities.length === 0) {
            return day;
        }

        // –§–∏–ª—å—Ç—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–Ω—è
        const filteredActivities = filterDataByEmployee(day.activities, filters.employeeId, filters.deviceId);

        return {
            ...day,
            activities: filteredActivities
        };
    }).filter(day => {
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–Ω–∏ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        return day.activities && day.activities.length > 0;
    });

    console.log('–î–∞–Ω–Ω—ã–µ —Ç–∞–±–µ–ª—è –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', filteredData);

    if (filteredData.length === 0) {
        document.getElementById('activity-timesheet-table').querySelector('tbody').innerHTML =
            `<tr><td colspan="7" class="text-center">${filters.employeeId ? '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞' : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥'}</td></tr>`;
        return;
    }

    // –í–ê–ñ–ù–û: –ù–ï –æ–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç dashboard-timesheet.js
    // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–∞–±–ª–∏—Ü—É –ø–æ –¥–Ω—è–º
    const tbody = document.getElementById('activity-timesheet-table').querySelector('tbody');
    if (tbody) tbody.innerHTML = '';

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–Ω–∏ –ø–æ –¥–∞—Ç–µ (–æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º)
    const sortedDays = [...filteredData].sort((a, b) => {
        return new Date(b.date) - new Date(a.date);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è
    sortedDays.forEach(day => {
        const tr = document.createElement('tr');

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        const dayDate = new Date(day.date);
        const formattedDate = formatDate(dayDate);

        // –ü–µ—Ä–µ–≤–æ–¥–∏–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
        const dayOfWeek = translateDayOfWeek(dayDate.toLocaleString('en-US', { weekday: 'long' }));

        // –ü–æ–ª—É—á–∞–µ–º —Ü–≤–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–Ω—è –Ω–µ–¥–µ–ª–∏
        if (dayOfWeek === '–°—É–±–±–æ—Ç–∞' || dayOfWeek === '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ') {
            tr.className = 'table-secondary';
        }

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        let dayTotalDuration = 0;
        if (day.activities && day.activities.length > 0) {
            // –°—É–º–º–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –¥–ª—è –¥–Ω—è
            dayTotalDuration = day.activities.reduce((total, activity) => {
                const duration = convertToMinutes(activity.duration || 0);
                return total + duration;
            }, 0);
        }

        const totalDayTime = formatMinutes(dayTotalDuration);

        // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–Ω—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        let dayProductivity = 0;
        if (day.activities && day.activities.length > 0 && dayTotalDuration > 0) {
            const productiveTime = day.activities.reduce((total, activity) => {
                const duration = convertToMinutes(activity.duration || 0);
                const productivity = activity.productivity || 50; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 50%
                return total + (duration * productivity / 100);
            }, 0);
            dayProductivity = (productiveTime / dayTotalDuration) * 100;
        }

        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        const productivityClass = getProductivityClass(dayProductivity);
        const productivityHtml = `
            <div class="progress" style="height: 20px;">
                <div class="progress-bar ${productivityClass}" 
                     style="width: ${dayProductivity.toFixed(1)}%;" 
                     role="progressbar" 
                     aria-valuenow="${dayProductivity.toFixed(1)}" 
                     aria-valuemin="0" 
                     aria-valuemax="100">
                    ${dayProductivity.toFixed(1)}%
                </div>
            </div>
        `;

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —ç—Ç–æ–≥–æ –¥–Ω—è
        const activitiesByApp = {};
        if (day.activities && day.activities.length > 0) {
            day.activities.forEach(activity => {
                const appName = activity.app_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                if (!activitiesByApp[appName]) {
                    activitiesByApp[appName] = 0;
                }
                const activityDuration = convertToMinutes(activity.duration || 0);
                activitiesByApp[appName] += activityDuration;
            });
        }

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        const topApps = Object.entries(activitiesByApp)
            .sort((a, b) => b[1] - a[1])
            .slice(0, 3)
            .map(([name, duration]) => {
                return `<span class="badge bg-primary me-1 mb-1">${name}: ${formatMinutes(duration)}</span>`;
            }).join('');

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —è—á–µ–π–∫–∏
        tr.innerHTML = `
            <td>${formattedDate}</td>
            <td>${dayOfWeek}</td>
            <td>${totalDayTime}</td>
            <td>${productivityHtml}</td>
            <td>${topApps || '-'}</td>
            <td>-</td>
            <td>
                <button class="btn btn-sm btn-outline-primary view-day-details" data-date="${day.date}">
                    <i class="bi bi-eye"></i>
                </button>
            </td>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π
        tr.querySelector('.view-day-details').addEventListener('click', function () {
            showDayDetails(this.getAttribute('data-date'));
        });

        if (tbody) tbody.appendChild(tr);
    });

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ (–º–µ—Ç—Ä–∏–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ dashboard-timesheet.js)');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Å–µ–∫—É–Ω–¥ –≤ –º–∏–Ω—É—Ç—ã
function convertToMinutes(seconds) {
    if (!seconds || isNaN(seconds)) return 0;
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å–µ–∫—É–Ω–¥ –≤ –º–∏–Ω—É—Ç—ã
    return Math.round(seconds / 60);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
function getProductivityClass(score) {
    if (score >= 70) return 'bg-success';
    if (score >= 50) return 'bg-info';
    if (score >= 30) return 'bg-warning';
    return 'bg-danger';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
function translateDayOfWeek(day) {
    const translations = {
        'Monday': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
        'Tuesday': '–í—Ç–æ—Ä–Ω–∏–∫',
        'Wednesday': '–°—Ä–µ–¥–∞',
        'Thursday': '–ß–µ—Ç–≤–µ—Ä–≥',
        'Friday': '–ü—è—Ç–Ω–∏—Ü–∞',
        'Saturday': '–°—É–±–±–æ—Ç–∞',
        'Sunday': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –¥–µ–Ω—å –≤ —Å–ª–æ–≤–∞—Ä–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    if (translations[day]) {
        return translations[day];
    } else {
        console.warn(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ${day}`);
        return day || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
function showDayDetails(date) {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –¥–Ω—è
    document.querySelector('a[href="#chronology"]').click();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –≤ –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
    const chronologyDateInput = document.getElementById('chronology-date');
    if (chronologyDateInput) {
        chronologyDateInput.value = date;

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        const employeeFilter = document.getElementById('employee-filter');
        const deviceFilter = document.getElementById('device-filter');

        console.log(`–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –¥–Ω—è ${date} –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ID: ${employeeFilter ? employeeFilter.value : '–≤—Å–µ'}, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ID: ${deviceFilter ? deviceFilter.value : '–≤—Å–µ'}`);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
        if (typeof loadChronology === 'function') {
            setTimeout(() => {
                loadChronology();
            }, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è DOM
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç–∞–±–µ–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ Excel
function exportActivityTimesheetToExcel() {
    const table = document.getElementById('activity-timesheet-table');
    if (!table) return;

    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        const tbody = table.querySelector('tbody');
        if (!tbody || tbody.children.length === 0 || tbody.children[0].cells.length <= 1) {
            alert('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        const headers = Array.from(table.querySelectorAll('thead th')).map(th => th.textContent);

        // –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
        let csvContent = headers.join(',') + '\n';

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        Array.from(tbody.children).forEach(row => {
            if (row.cells.length <= 1) return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

            const rowData = [];
            Array.from(row.cells).forEach((cell, index) => {
                // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –±–µ–∑ HTML —Ç–µ–≥–æ–≤
                let text = '';

                if (index === 3) {
                    // –î–ª—è –∫–æ–ª–æ–Ω–∫–∏ —Å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
                    const progressBar = cell.querySelector('.progress-bar');
                    text = progressBar ? progressBar.textContent.trim() : '';
                } else if (index === 4 || index === 5) {
                    // –î–ª—è –∫–æ–ª–æ–Ω–æ–∫ —Å –±–µ–π–¥–∂–∞–º–∏ —Å–æ–±–∏—Ä–∞–µ–º –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
                    const badges = cell.querySelectorAll('.badge');
                    text = Array.from(badges).map(badge => badge.textContent.trim()).join(', ');
                } else if (index === 6) {
                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
                    text = '';
                } else {
                    text = cell.textContent.trim();
                }

                // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–≤—ã—á–∫–∏ –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—Å—Ç–∞
                text = '"' + text.replace(/"/g, '""') + '"';

                rowData.push(text);
            });

            csvContent += rowData.join(',') + '\n';
        });

        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        const encodedUri = encodeURI('data:text/csv;charset=utf-8,' + csvContent);
        const link = document.createElement('a');
        link.setAttribute('href', encodedUri);
        link.setAttribute('download', 'activity_timesheet.csv');
        document.body.appendChild(link);

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
        link.click();

        // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        document.body.removeChild(link);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Ç–∞–±–µ–ª—è:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ç–∞–±–µ–ª—è
// –£–î–ê–õ–ï–ù–´ –î–£–ë–õ–ò–†–£–Æ–©–ò–ï –§–£–ù–ö–¶–ò–ò –¢–ê–ë–ï–õ–Ø:
// - async function loadDetailedTimesheet() - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–∞–±–µ–ª—è
// - function resetTimesheetMetrics() - —Å–±—Ä–æ—Å –º–µ—Ç—Ä–∏–∫ —Ç–∞–±–µ–ª—è
// - function updateTimesheetSummary() - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ —Ç–∞–±–µ–ª—è
//
// –í—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ç–∞–±–µ–ª—è —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ dashboard-timesheet.js

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –º–µ—Ç—Ä–∏–∫ —Ç–∞–±–µ–ª—è

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –¥–∞–Ω–Ω—ã–º —Ç–∞–±–µ–ª—è

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
function showError(message) {
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–µ HTTP 404 –∏–ª–∏ –æ—à–∏–±–∫–∞—Ö —Ç–∞–±–µ–ª—è
    if (message && (message.includes('HTTP error') ||
        message.includes('status: 404') ||
        message.includes('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–µ–ª—è'))) {
        // –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        console.warn('–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', message);
        return;
    }

    console.error(message);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
    let errorContainer = document.getElementById('error-container');

    if (!errorContainer) {
        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        errorContainer = document.createElement('div');
        errorContainer.id = 'error-container';
        errorContainer.className = 'alert alert-danger alert-dismissible fade show fixed-top mx-auto mt-3';
        errorContainer.style.maxWidth = '500px';
        errorContainer.style.zIndex = '9999';
        errorContainer.innerHTML = `
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="–ó–∞–∫—Ä—ã—Ç—å"></button>
            <div class="error-message">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                ${message}
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ DOM
        document.body.appendChild(errorContainer);

        // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (errorContainer.parentNode) {
                errorContainer.parentNode.removeChild(errorContainer);
            }
        }, 5000);
    } else {
        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        errorContainer.querySelector('.error-message').innerHTML = `
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            ${message}
        `;

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä —É–¥–∞–ª–µ–Ω–∏—è
        clearTimeout(errorContainer.dataset.timeout);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
        errorContainer.dataset.timeout = setTimeout(() => {
            if (errorContainer.parentNode) {
                errorContainer.parentNode.removeChild(errorContainer);
            }
        }, 5000);
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
const updateTodayBtn = document.getElementById('update-today-btn');
if (updateTodayBtn) {
    updateTodayBtn.addEventListener('click', updateTodayData);
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–∫–∞–∑–∞ —Ç–∞–±–µ–ª—è

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç—É–ª—Ç–∏–ø—ã

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–π
function calculateTotalActivityTime(activities) {
    if (!activities || activities.length === 0) {
        return 0;
    }

    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤
    const periods = activities.map(activity => {
        const duration = activity.duration || 0;
        const startTime = new Date(activity.timestamp || activity.start_time);
        const endTime = new Date(startTime.getTime() + duration * 1000);

        return {
            start: startTime,
            end: endTime,
            activity: activity
        };
    }).filter(period => !isNaN(period.start.getTime()) && !isNaN(period.end.getTime()));

    if (periods.length === 0) {
        return 0;
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
    periods.sort((a, b) => a.start - b.start);

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è –ø–µ—Ä–∏–æ–¥—ã
    const mergedPeriods = [];
    let currentPeriod = null;

    periods.forEach(period => {
        if (!currentPeriod) {
            currentPeriod = { start: period.start, end: period.end };
        } else {
            // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ (—Å –±—É—Ñ–µ—Ä–æ–º 30 —Å–µ–∫ –¥–ª—è —É—á–µ—Ç–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π)
            // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ (—Å –±—É—Ñ–µ—Ä–æ–º 10 —Å–µ–∫ –¥–ª—è —É—á–µ—Ç–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π)
            if (period.start <= new Date(currentPeriod.end.getTime() + 10000)) {
                currentPeriod.end = new Date(Math.max(currentPeriod.end.getTime(), period.end.getTime()));
            } else {
                // –ï—Å–ª–∏ –Ω–µ—Ç –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π
                mergedPeriods.push(currentPeriod);
                currentPeriod = { start: period.start, end: period.end };
            }
        }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–∏–æ–¥
    if (currentPeriod) {
        mergedPeriods.push(currentPeriod);
    }

    // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –∫–∞–∫ —Å—É–º–º—É –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤
    const totalTime = mergedPeriods.reduce((total, period) => {
        return total + Math.floor((period.end - period.start) / 1000);
    }, 0);

    console.log(`–†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${periods.length} –ø–µ—Ä–∏–æ–¥–æ–≤ -> ${mergedPeriods.length} –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ = ${totalTime} —Å–µ–∫—É–Ω–¥`);

    return totalTime;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
function mergeAllActivities(data) {
    console.log('üîÑ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–æ–≤');

    const allActivities = [];

    // –°–ø–∏—Å–æ–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –æ–±—â–µ–≥–æ –ø–æ–¥—Å—á–µ—Ç–∞
    const browserProcesses = [
        'chrome.exe', 'firefox.exe', 'msedge.exe', 'opera.exe',
        'brave.exe', 'vivaldi.exe', 'safari.exe', 'browser.exe',
        'opera_gx.exe', 'tor.exe', 'arc.exe', 'palemoon.exe'
    ];

    // –≠–¢–ê–ü 1: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¢–û–õ–¨–ö–û –ù–ï-–ë–†–ê–£–ó–ï–†–ù–´–ï –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–∑ window_activity
    if (data.activities && Array.isArray(data.activities)) {
        console.log('üì± –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω (–ë–ï–ó –±—Ä–∞—É–∑–µ—Ä–æ–≤)');
        
        data.activities.forEach(activity => {
            const processName = (activity.process_name || activity.app_name || '').toLowerCase();
            const appName = activity.app_name || activity.process_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –±—Ä–∞—É–∑–µ—Ä–æ–º
            const isBrowser = browserProcesses.some(browser => 
                processName.includes(browser.toLowerCase()) ||
                appName.toLowerCase().includes('chrome') ||
                appName.toLowerCase().includes('firefox') ||
                appName.toLowerCase().includes('edge') ||
                appName.toLowerCase().includes('opera') ||
                appName.toLowerCase().includes('safari') ||
                appName.toLowerCase().includes('–±—Ä–∞—É–∑–µ—Ä')
            );

            // –í–ê–ñ–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–π –ø–æ–¥—Å—á–µ—Ç –¢–û–õ–¨–ö–û –ù–ï-–±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            if (!isBrowser) {
                const duration = parseInt(activity.duration || activity.total_time || activity.active_time || 0);
                if (duration > 0) {
                    const startTime = new Date(activity.timestamp || activity.start_time);
                    const endTime = new Date(startTime.getTime() + duration * 1000);

                    allActivities.push({
                        ...activity,
                        type: 'window',
                        start: startTime,
                        end: endTime,
                        duration: duration,
                        application: appName,
                        window_title: activity.window_title || activity.title || '',
                        productivity_score: getProductivityScore(activity)
                    });
                }
            }
        });

        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ù–ï-–±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${allActivities.length}`);
    }

    // –≠–¢–ê–ü 2: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç–¥–µ–ª—å–Ω–æ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∏—Ö
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ì–ò–ë–†–ò–î–ù–´–ô –ø–æ–¥—Ö–æ–¥ - –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ –±—Ä–∞—É–∑–µ—Ä–∞—Ö
    const allBrowserSessions = {};

    // 2.1 –ë—Ä–∞—É–∑–µ—Ä—ã –∏–∑ window_activity
    if (data.activities && Array.isArray(data.activities)) {
        data.activities.forEach(activity => {
            const processName = (activity.process_name || activity.app_name || '').toLowerCase();
            const appName = activity.app_name || activity.process_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            const isBrowser = browserProcesses.some(browser => 
                processName.includes(browser.toLowerCase()) ||
                appName.toLowerCase().includes('chrome') ||
                appName.toLowerCase().includes('firefox') ||
                appName.toLowerCase().includes('edge') ||
                appName.toLowerCase().includes('opera') ||
                appName.toLowerCase().includes('safari')
            );

            if (isBrowser) {
                if (!allBrowserSessions[appName]) {
                    allBrowserSessions[appName] = [];
                }

                const duration = parseInt(activity.duration || activity.total_time || activity.active_time || 0);
                if (duration > 0) {
                    const startTime = new Date(activity.timestamp || activity.start_time);
                    const endTime = new Date(startTime.getTime() + duration * 1000);

                    allBrowserSessions[appName].push({
                        source: 'window_activity',
                        start: startTime,
                        end: endTime,
                        duration: duration,
                        window_title: activity.window_title || '–ë—Ä–∞—É–∑–µ—Ä',
                        productivity_score: 60
                    });
                }
            }
        });
    }

    // 2.2 –î–∞–Ω–Ω—ã–µ –∏–∑ browser_activity
    if (data.browser_activity && Array.isArray(data.browser_activity)) {
        data.browser_activity.forEach(activity => {
            const browserName = activity.browser_name || activity.browser || '–ë—Ä–∞—É–∑–µ—Ä';
            
            if (!allBrowserSessions[browserName]) {
                allBrowserSessions[browserName] = [];
            }

            const duration = parseInt(activity.total_time || activity.duration || 0);
            if (duration > 0) {
                const startTime = new Date(activity.timestamp || activity.start_time);
                const endTime = new Date(startTime.getTime() + duration * 1000);

                allBrowserSessions[browserName].push({
                    source: 'browser_activity',
                    start: startTime,
                    end: endTime,
                    duration: duration,
                    window_title: activity.url || '–ë—Ä–∞—É–∑–µ—Ä–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                    productivity_score: 60
                });
            }
        });
    }

    // 2.3 –î–∞–Ω–Ω—ã–µ –∏–∑ website_visits (—Ç–æ–ª—å–∫–æ –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏)
    // website_visits –ù–ï –¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ–¥—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —É–∂–µ —É—á—Ç–µ–Ω–æ –≤ browser_activity

    // –≠–¢–ê–ü 3: –û–±—ä–µ–¥–∏–Ω—è–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–π
    Object.keys(allBrowserSessions).forEach(browserName => {
        const sessions = allBrowserSessions[browserName];
        
        if (sessions.length === 0) return;

        console.log(`üåê –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä ${browserName}: ${sessions.length} —Å–µ—Å—Å–∏–π`);

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Å—Å–∏–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
        sessions.sort((a, b) => a.start - b.start);

        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è –ø–µ—Ä–∏–æ–¥—ã
        const mergedPeriods = [];
        let currentPeriod = null;

        sessions.forEach(session => {
            if (!currentPeriod) {
                currentPeriod = {
                    start: session.start,
                    end: session.end,
                    sessions: [session]
                };
            } else {
                // –ï—Å–ª–∏ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ (—Å –±—É—Ñ–µ—Ä–æ–º 10 —Å–µ–∫)
                if (session.start <= new Date(currentPeriod.end.getTime() + 10000)) {
                    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–µ—Ä–∏–æ–¥—ã
                    currentPeriod.end = new Date(Math.max(currentPeriod.end.getTime(), session.end.getTime()));
                    currentPeriod.sessions.push(session);
                } else {
                    // –ï—Å–ª–∏ –Ω–µ—Ç –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π
                    mergedPeriods.push(currentPeriod);
                    currentPeriod = {
                        start: session.start,
                        end: session.end,
                        sessions: [session]
                    };
                }
            }
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–∏–æ–¥
        if (currentPeriod) {
            mergedPeriods.push(currentPeriod);
        }

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        mergedPeriods.forEach(period => {
            const periodDuration = Math.floor((period.end - period.start) / 1000);
            
            // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            const windowTitles = period.sessions
                .map(s => s.window_title)
                .filter((title, idx, arr) => title && arr.indexOf(title) === idx)
                .slice(0, 3)
                .join(', ');

            const finalWindowTitle = windowTitles + 
                (period.sessions.length > 3 ? ` (–∏ –µ—â–µ ${period.sessions.length - 3})` : '');

            allActivities.push({
                type: 'browser',
                start: period.start,
                end: period.end,
                duration: periodDuration,
                application: browserName,
                app_name: browserName,
                window_title: finalWindowTitle || '–ë—Ä–∞—É–∑–µ—Ä–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                productivity_score: 60,
                timestamp: period.start.toISOString()
            });
        });

        const totalBrowserTime = mergedPeriods.reduce((total, p) => total + Math.floor((p.end - p.start) / 1000), 0);
        console.log(`‚úÖ ${browserName}: ${sessions.length} —Å–µ—Å—Å–∏–π ‚Üí ${mergedPeriods.length} –ø–µ—Ä–∏–æ–¥–æ–≤ = ${Math.floor(totalBrowserTime/60)}–º ${totalBrowserTime%60}—Å`);
    });

    console.log(`üéØ –ò–¢–û–ì–û –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ: ${allActivities.length}`);
    console.log(`   - –ù–ï-–±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${allActivities.filter(a => a.type !== 'browser').length}`);
    console.log(`   - –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ): ${allActivities.filter(a => a.type === 'browser').length}`);

    return allActivities;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–µ–±-—Å–∞–π—Ç–∞
function calculateWebsiteProductivity(url) {
    const productiveDomains = [
        'github.com', 'stackoverflow.com', 'docs.', 'documentation',
        'learn.', 'tutorial', 'course', 'edu', 'office.com', 'google.com/docs'
    ];

    const unproductiveDomains = [
        'youtube.com', 'facebook.com', 'instagram.com', 'twitter.com',
        'vk.com', 'tiktok.com', 'netflix.com', 'twitch.tv'
    ];

    const lowerUrl = url.toLowerCase();

    if (productiveDomains.some(domain => lowerUrl.includes(domain))) {
        return 80;
    }

    if (unproductiveDomains.some(domain => lowerUrl.includes(domain))) {
        return 20;
    }

    return 50; // –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π —Å —Ç–æ—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –≤–µ–±-—Å–∞–π—Ç–æ–≤
function mergeAllActivitiesWithWebsites(data) {
    console.log('üîÑ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π —Å —Ç–æ—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –≤–µ–±-—Å–∞–π—Ç–æ–≤');

    const allActivities = [];

    // –°–ø–∏—Å–æ–∫ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –æ–±—â–µ–≥–æ –ø–æ–¥—Å—á–µ—Ç–∞
    const browserProcesses = [
        'chrome.exe', 'firefox.exe', 'msedge.exe', 'opera.exe',
        'brave.exe', 'vivaldi.exe', 'safari.exe', 'browser.exe',
        'opera_gx.exe', 'tor.exe', 'arc.exe', 'palemoon.exe'
    ];

    // –≠–¢–ê–ü 1: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¢–û–õ–¨–ö–û –ù–ï-–ë–†–ê–£–ó–ï–†–ù–´–ï –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–∑ window_activity
    if (data.activities && Array.isArray(data.activities)) {
        console.log('üì± –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω (–ë–ï–ó –±—Ä–∞—É–∑–µ—Ä–æ–≤)');
        
        data.activities.forEach(activity => {
            const processName = (activity.process_name || activity.app_name || '').toLowerCase();
            const appName = activity.app_name || activity.process_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –±—Ä–∞—É–∑–µ—Ä–æ–º
            const isBrowser = browserProcesses.some(browser => 
                processName.includes(browser.toLowerCase()) ||
                appName.toLowerCase().includes('chrome') ||
                appName.toLowerCase().includes('firefox') ||
                appName.toLowerCase().includes('edge') ||
                appName.toLowerCase().includes('opera') ||
                appName.toLowerCase().includes('safari') ||
                appName.toLowerCase().includes('–±—Ä–∞—É–∑–µ—Ä')
            );

            // –í–ê–ñ–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–π –ø–æ–¥—Å—á–µ—Ç –¢–û–õ–¨–ö–û –ù–ï-–±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            if (!isBrowser) {
                const duration = parseInt(activity.duration || activity.total_time || activity.active_time || 0);
                if (duration > 0) {
                    const startTime = new Date(activity.timestamp || activity.start_time);
                    const endTime = new Date(startTime.getTime() + duration * 1000);

                    allActivities.push({
                        ...activity,
                        type: 'window',
                        start: startTime,
                        end: endTime,
                        duration: duration,
                        application: appName,
                        window_title: activity.window_title || activity.title || '',
                        productivity_score: getProductivityScore(activity)
                    });
                }
            }
        });

        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ù–ï-–±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${allActivities.length}`);
    }

    // –≠–¢–ê–ü 2: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–ß–ù–´–ï –¥–∞–Ω–Ω—ã–µ –≤–µ–±-—Å–∞–π—Ç–æ–≤ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if (data.website_visits && Array.isArray(data.website_visits) && data.website_visits.length > 0) {
        console.log('üåê –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¢–û–ß–ù–´–ï –¥–∞–Ω–Ω—ã–µ –≤–µ–±-—Å–∞–π—Ç–æ–≤:', data.website_visits.length);
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ—Å–µ—â–µ–Ω–∏—è —Å–∞–π—Ç–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –±–ª–∏–∑–∫–∏—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        const websiteActivities = [];
        
        data.website_visits.forEach(visit => {
            if (!visit.timestamp) return;
            
            const startTime = new Date(visit.timestamp);
            // –î–ª—è –≤–µ–±-—Å–∞–π—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞
            const duration = parseInt(visit.duration || 60); // 60 —Å–µ–∫—É–Ω–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            const endTime = new Date(startTime.getTime() + duration * 1000);
            
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ URL
            const productivity = calculateWebsiteProductivity(visit.url || '');
            
            websiteActivities.push({
                type: 'website',
                start: startTime,
                end: endTime,
                duration: duration,
                application: visit.browser_name || visit.browser || '–ë—Ä–∞—É–∑–µ—Ä',
                window_title: visit.title || visit.url || '–í–µ–±-—Å–∞–π—Ç',
                url: visit.url,
                productivity_score: productivity,
                timestamp: visit.timestamp,
                browser: visit.browser_name || visit.browser
            });
        });
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ–±-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        websiteActivities.sort((a, b) => a.start - b.start);
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –±–ª–∏–∑–∫–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤–µ–±-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –º–∏–∫—Ä–æ-–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const mergedWebsiteActivities = [];
        let currentWebActivity = null;
        
        websiteActivities.forEach(activity => {
            if (!currentWebActivity) {
                currentWebActivity = { ...activity };
            } else {
                // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 30 —Å–µ–∫—É–Ω–¥ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞
                const timeDiff = (activity.start - currentWebActivity.end) / 1000;
                
                if (timeDiff <= 30 && activity.browser === currentWebActivity.browser) {
                    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                    currentWebActivity.end = activity.end;
                    currentWebActivity.duration = Math.floor((currentWebActivity.end - currentWebActivity.start) / 1000);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞, –µ—Å–ª–∏ –Ω–æ–≤—ã–π –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π
                    if (activity.window_title && activity.window_title.length > currentWebActivity.window_title.length) {
                        currentWebActivity.window_title = activity.window_title;
                    }
                    
                    // –£—Å—Ä–µ–¥–Ω—è–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
                    currentWebActivity.productivity_score = Math.round((currentWebActivity.productivity_score + activity.productivity_score) / 2);
                } else {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é
                    mergedWebsiteActivities.push(currentWebActivity);
                    currentWebActivity = { ...activity };
                }
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        if (currentWebActivity) {
            mergedWebsiteActivities.push(currentWebActivity);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –≤–µ–±-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫ –æ–±—â–µ–º—É —Å–ø–∏—Å–∫—É
        allActivities.push(...mergedWebsiteActivities);
        
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤–µ–±-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: ${websiteActivities.length} ‚Üí ${mergedWebsiteActivities.length} (–ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –±–ª–∏–∑–∫–∏—Ö)`);
    } else {
        console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-—Å–∞–π—Ç–æ–≤ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –±—Ä–∞—É–∑–µ—Ä–æ–≤');
        
        // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-—Å–∞–π—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤
        if (data.activities && Array.isArray(data.activities)) {
            data.activities.forEach(activity => {
                const processName = (activity.process_name || activity.app_name || '').toLowerCase();
                const appName = activity.app_name || activity.process_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

                const isBrowser = browserProcesses.some(browser => 
                    processName.includes(browser.toLowerCase()) ||
                    appName.toLowerCase().includes('chrome') ||
                    appName.toLowerCase().includes('firefox') ||
                    appName.toLowerCase().includes('edge') ||
                    appName.toLowerCase().includes('opera') ||
                    appName.toLowerCase().includes('safari')
                );

                if (isBrowser) {
                    const duration = parseInt(activity.duration || activity.total_time || activity.active_time || 0);
                    if (duration > 0) {
                        const startTime = new Date(activity.timestamp || activity.start_time);
                        const endTime = new Date(startTime.getTime() + duration * 1000);

                        allActivities.push({
                            ...activity,
                            type: 'browser',
                            start: startTime,
                            end: endTime,
                            duration: duration,
                            application: appName,
                            window_title: activity.window_title || '–ë—Ä–∞—É–∑–µ—Ä–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                            productivity_score: 60
                        });
                    }
                }
            });
        }
    }

    console.log(`üéØ –ò–¢–û–ì–û –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ —É–ª—É—á—à–µ–Ω–Ω–æ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ: ${allActivities.length}`);
    console.log(`   - –ù–ï-–±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${allActivities.filter(a => a.type === 'window').length}`);
    console.log(`   - –í–µ–±-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—Ç–æ—á–Ω—ã–µ): ${allActivities.filter(a => a.type === 'website').length}`);
    console.log(`   - –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–æ–±—â–∏–µ): ${allActivities.filter(a => a.type === 'browser').length}`);

    return allActivities;
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
function filterDataByEmployee(data, employeeId = null, deviceId = null) {
    if (!data || !Array.isArray(data)) {
        return data;
    }

    let filtered = data;

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
    if (employeeId) {
        console.log(`üîç –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É: ${employeeId}`);
        filtered = filtered.filter(item => {
            const matches = item.employee_name === employeeId ||
                item.employee_id === employeeId ||
                item.user_name === employeeId ||
                item.user_id === employeeId;

            if (matches) {
                console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${employeeId}:`, {
                    employee_name: item.employee_name,
                    employee_id: item.employee_id,
                    user_name: item.user_name,
                    user_id: item.user_id,
                    app_name: item.app_name || item.url || item.title
                });
            }

            return matches;
        });
        console.log(`üìä –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É ${employeeId}: ${filtered.length} –∑–∞–ø–∏—Å–µ–π`);
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
    if (deviceId) {
        console.log(`üîç –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É: ${deviceId}`);
        filtered = filtered.filter(item => {
            const matches = item.device_id === deviceId ||
                item.computer_name === deviceId ||
                item.hostname === deviceId;

            if (matches) {
                console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ${deviceId}:`, {
                    device_id: item.device_id,
                    computer_name: item.computer_name,
                    hostname: item.hostname
                });
            }

            return matches;
        });
        console.log(`üìä –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É ${deviceId}: ${filtered.length} –∑–∞–ø–∏—Å–µ–π`);
    }

    return filtered;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
function getCurrentFilters() {
    const employeeFilter = document.getElementById('employee-filter');
    const deviceFilter = document.getElementById('device-filter');

    return {
        employeeId: employeeFilter && employeeFilter.value ? employeeFilter.value : null,
        deviceId: deviceFilter && deviceFilter.value ? deviceFilter.value : null
    };
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤—ã–º–∏ —Å–ø–æ–π–ª–µ—Ä–∞–º–∏ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏

function toggleMajorPeriod(periodIndex) {
    console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫—Ä—É–ø–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞:', periodIndex);

    const header = document.querySelector(`tr.major-period-header[data-major-index="${periodIndex}"]`);
    const icon = header?.querySelector('.period-icon');

    if (!header) {
        console.log('–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—Ä—É–ø–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω:', periodIndex);
        return;
    }

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ (–ø–æ–¥–ø–µ—Ä–∏–æ–¥—ã –∏ —Å–æ–±—ã—Ç–∏—è)
    const rows = document.querySelectorAll(`tr[data-parent-major="${periodIndex}"]:not(.major-period-header)`);
    console.log('–ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è:', rows.length);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –∏–∫–æ–Ω–∫–µ
    const isCurrentlyCollapsed = icon?.className.includes('chevron-right');
    console.log('–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (—Å–≤–µ—Ä–Ω—É—Ç–æ):', isCurrentlyCollapsed);

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
    rows.forEach(row => {
        row.style.display = isCurrentlyCollapsed ? '' : 'none';
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∏ –∫–ª–∞—Å—Å –∑–∞–≥–æ–ª–æ–≤–∫–∞
    if (icon) {
        if (isCurrentlyCollapsed) {
            // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É –≤–Ω–∏–∑
            icon.className = 'bi bi-chevron-down period-icon me-2';
            header.classList.remove('major-collapsed');
            console.log('–ü–µ—Ä–∏–æ–¥ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç');
        } else {
            // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É –≤–ø—Ä–∞–≤–æ
            icon.className = 'bi bi-chevron-right period-icon me-2';
            header.classList.add('major-collapsed');
            console.log('–ü–µ—Ä–∏–æ–¥ —Å–≤–µ—Ä–Ω—É—Ç');
        }
    }
}

function toggleMinorPeriod(majorIndex, minorIndex) {
    console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–ø–µ—Ä–∏–æ–¥–∞:', majorIndex, minorIndex);

    const header = document.querySelector(`tr.minor-period-header[data-minor-index="${majorIndex}-${minorIndex}"]`);
    const icon = header?.querySelector('.period-icon');

    if (!header) {
        console.log('–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–¥–ø–µ—Ä–∏–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω:', majorIndex, minorIndex);
        return;
    }

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Å–æ–±—ã—Ç–∏–π —ç—Ç–æ–≥–æ –ø–æ–¥–ø–µ—Ä–∏–æ–¥–∞
    const rows = document.querySelectorAll(`tr.activity-event[data-parent-minor="${majorIndex}-${minorIndex}"]`);
    console.log('–ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è:', rows.length);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –∏–∫–æ–Ω–∫–µ
    const isCurrentlyCollapsed = icon?.className.includes('chevron-right');
    console.log('–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–µ—Ä–∏–æ–¥–∞ (—Å–≤–µ—Ä–Ω—É—Ç–æ):', isCurrentlyCollapsed);

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
    rows.forEach(row => {
        row.style.display = isCurrentlyCollapsed ? '' : 'none';
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∏ –∫–ª–∞—Å—Å –∑–∞–≥–æ–ª–æ–≤–∫–∞
    if (icon) {
        if (isCurrentlyCollapsed) {
            // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É –≤–Ω–∏–∑
            icon.className = 'bi bi-chevron-down period-icon me-2';
            header.classList.remove('minor-collapsed');
            console.log('–ü–æ–¥–ø–µ—Ä–∏–æ–¥ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç');
        } else {
            // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É –≤–ø—Ä–∞–≤–æ
            icon.className = 'bi bi-chevron-right period-icon me-2';
            header.classList.add('minor-collapsed');
            console.log('–ü–æ–¥–ø–µ—Ä–∏–æ–¥ —Å–≤–µ—Ä–Ω—É—Ç');
        }
    }
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∫—Ä—É–ø–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤
function toggleAllMajorPeriods(collapse = null) {
    const tbody = document.querySelector('#chronology-table tbody');
    if (!tbody) return;

    const majorHeaders = tbody.querySelectorAll('.major-period-header');

    if (collapse === null) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        const firstHeader = majorHeaders[0];
        collapse = firstHeader && !firstHeader.classList.contains('major-collapsed');
    }

    majorHeaders.forEach((header, index) => {
        const periodIndex = header.getAttribute('data-major-index');
        const isCurrentlyCollapsed = header.classList.contains('major-collapsed');

        if (collapse && !isCurrentlyCollapsed) {
            toggleMajorPeriod(periodIndex);
        } else if (!collapse && isCurrentlyCollapsed) {
            toggleMajorPeriod(periodIndex);
        }
    });

    console.log('–í—Å–µ –∫—Ä—É–ø–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã:', collapse ? '—Å–≤–µ—Ä–Ω—É—Ç—ã' : '—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã');
}

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö –ø–æ–¥–ø–µ—Ä–∏–æ–¥–æ–≤
function toggleAllMinorPeriods(collapse = null) {
    const tbody = document.querySelector('#chronology-table tbody');
    if (!tbody) return;

    const minorHeaders = tbody.querySelectorAll('.minor-period-header');

    if (collapse === null) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–¥–ø–µ—Ä–∏–æ–¥–∞
        const firstHeader = minorHeaders[0];
        collapse = firstHeader && !firstHeader.classList.contains('minor-collapsed');
    }

    minorHeaders.forEach(header => {
        const periodKey = header.getAttribute('data-minor-index');
        if (periodKey) {
            const [majorIndex, minorIndex] = periodKey.split('-');
            const isCurrentlyCollapsed = header.classList.contains('minor-collapsed');

            if (collapse && !isCurrentlyCollapsed) {
                toggleMinorPeriod(majorIndex, minorIndex);
            } else if (!collapse && isCurrentlyCollapsed) {
                toggleMinorPeriod(majorIndex, minorIndex);
            }
        }
    });

    console.log('–í—Å–µ –ø–æ–¥–ø–µ—Ä–∏–æ–¥—ã:', collapse ? '—Å–≤–µ—Ä–Ω—É—Ç—ã' : '—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
function hasScreenshotForTime(timestamp, appName) {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–ª—è:', timestamp, appName);
    
    const screenshot = findScreenshotByTime(timestamp, appName);
    const hasScreenshot = !!screenshot;
    
    console.log('üì∏ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:', {
        timestamp,
        appName,
        hasScreenshot,
        matchQuality: screenshot?._matchQuality,
        timeDiff: screenshot?._timeDiff
    });
    
    return hasScreenshot;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–ª–∏—á–∏—è
function createScreenshotButton(timeStr, appName) {
    const hasScreenshot = hasScreenshotForTime(timeStr, appName);
    const iconClass = hasScreenshot ? 'bi-camera-fill text-primary' : 'bi-camera text-muted';
    const title = hasScreenshot ? `–°–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞–π–¥–µ–Ω –¥–ª—è ${timeStr}` : `–ü–æ–∏—Å–∫ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–ª—è ${timeStr}`;
    const btnClass = hasScreenshot ? 'btn-primary' : 'btn-outline-secondary';

    return `<button class="btn btn-sm ${btnClass} screenshot-btn ms-2" 
            onclick="openScreenshotFromChronology('${timeStr}', '${appName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}', this)" 
            title="${title}">
            <i class="${iconClass}"></i>
        </button>`;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–æ–π–ª–µ—Ä–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function () {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–æ–π–ª–µ—Ä–∞–º–∏ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏');

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    document.addEventListener('click', function (event) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫—Ä—É–ø–Ω—ã–º –ø–µ—Ä–∏–æ–¥–∞–º
        if (event.target.closest('.major-period-header')) {
            const header = event.target.closest('.major-period-header');
            const periodIndex = header.getAttribute('data-major-index');
            if (periodIndex !== null) {
                event.preventDefault();
                event.stopPropagation();
                console.log('–ö–ª–∏–∫ –ø–æ –∫—Ä—É–ø–Ω–æ–º—É –ø–µ—Ä–∏–æ–¥—É:', periodIndex);
                toggleMajorPeriod(periodIndex);
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–¥–ø–µ—Ä–∏–æ–¥–∞–º
        else if (event.target.closest('.minor-period-header')) {
            const header = event.target.closest('.minor-period-header');
            const periodKey = header.getAttribute('data-minor-index');
            if (periodKey) {
                const [majorIndex, minorIndex] = periodKey.split('-');
                event.preventDefault();
                event.stopPropagation();
                console.log('–ö–ª–∏–∫ –ø–æ –ø–æ–¥–ø–µ—Ä–∏–æ–¥—É:', majorIndex, minorIndex);
                toggleMinorPeriod(majorIndex, minorIndex);
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º —á–∞—Å–æ–≤ (–¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–∫–æ–Ω)
        else if (event.target.closest('.hour-header')) {
            const header = event.target.closest('.hour-header');
            if (header && !event.target.closest('.btn')) { // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤–Ω—É—Ç—Ä–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                event.preventDefault();
                event.stopPropagation();
                console.log('–ö–ª–∏–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É —á–∞—Å–∞');
                
                // –ù–∞—Ö–æ–¥–∏–º —á–∞—Å –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                let hour = null;
                let nextElement = header.nextElementSibling;
                while (nextElement && !hour) {
                    if (nextElement.dataset.hourGroup) {
                        hour = nextElement.dataset.hourGroup;
                        break;
                    }
                    nextElement = nextElement.nextElementSibling;
                }
                
                if (hour !== null) {
                    const tbody = header.closest('tbody');
                    const relatedEvents = tbody.querySelectorAll(`tr[data-hour-group="${hour}"]`);
                    const icon = header.querySelector('.collapse-icon i');
                    const isCollapsed = header.classList.contains('collapsed');

                    console.log('–ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —á–∞—Å–∞', hour, ':', relatedEvents.length);

                    if (isCollapsed) {
                        // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                        header.classList.remove('collapsed');
                        if (icon) icon.className = 'bi bi-chevron-down';
                        relatedEvents.forEach(row => {
                            row.style.display = '';
                        });
                        console.log('–ß–∞—Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç');
                    } else {
                        // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                        header.classList.add('collapsed');
                        if (icon) icon.className = 'bi bi-chevron-right';
                        relatedEvents.forEach(row => {
                            row.style.display = 'none';
                        });
                        console.log('–ß–∞—Å —Å–≤–µ—Ä–Ω—É—Ç');
                    }
                }
            }
        }
    });

    console.log('–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å–ø–æ–π–ª–µ—Ä–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ');
});

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏

function findScreenshotByTime(timestamp, appName) {
    console.log('üîç –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏:', timestamp, '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', appName);

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –∏–∑ window.lastLoadedData
    const screenshots = window.lastLoadedData?.screenshots || [];

    if (screenshots.length === 0) {
        console.log('–ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤');
        showError('–°–∫—Ä–∏–Ω—à–æ—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ.');
        return null;
    }

    // –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è –∏–∑ —Å—Ç—Ä–æ–∫–∏ (—Ñ–æ—Ä–º–∞—Ç: "20:30:42")
    const targetTime = parseTimeString(timestamp);
    if (!targetTime) {
        console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤—Ä–µ–º—è:', timestamp);
        return null;
    }

    console.log('–ò—â–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏:', targetTime, '–ø—Ä–æ—Ü–µ—Å—Å:', appName);

    // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –ø—Ä–æ—Ü–µ—Å—Å—É –∏ –≤—Ä–µ–º–µ–Ω–∏ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 2 –º–∏–Ω—É—Ç)
    let bestExactMatch = null;
    let minExactTimeDiff = Infinity;
    const EXACT_SEARCH_WINDOW = 2 * 60 * 1000; // 2 –º–∏–Ω—É—Ç—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    // –ó–∞—Ç–µ–º –∏—â–µ–º –±–ª–∏–∑–∫–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 5 –º–∏–Ω—É—Ç)
    let bestCloseMatch = null;
    let minCloseTimeDiff = Infinity;
    const CLOSE_SEARCH_WINDOW = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    screenshots.forEach(screenshot => {
        const screenshotTime = new Date(screenshot.timestamp);
        const timeDiff = Math.abs(targetTime.getTime() - screenshotTime.getTime());
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
        const screenshotApp = (screenshot.app_name || screenshot.active_app || '').toLowerCase();
        const targetApp = (appName || '').toLowerCase();
        
        // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
        const exactProcessMatch = screenshotApp === targetApp || 
                                 screenshotApp.includes(targetApp) || 
                                 targetApp.includes(screenshotApp);
        
        // –ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–¥–ª—è .exe —Ñ–∞–π–ª–æ–≤)
        const partialProcessMatch = screenshotApp.replace('.exe', '') === targetApp.replace('.exe', '') ||
                                   screenshotApp.split('.')[0] === targetApp.split('.')[0];

        console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç: ${screenshot.timestamp} (${screenshotApp}) vs ${targetApp}, —Ä–∞–∑–Ω–∏—Ü–∞: ${Math.round(timeDiff/1000)}—Å`);

        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1: –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 2 –º–∏–Ω—É—Ç
        if ((exactProcessMatch || partialProcessMatch) && timeDiff <= EXACT_SEARCH_WINDOW && timeDiff < minExactTimeDiff) {
            minExactTimeDiff = timeDiff;
            bestExactMatch = screenshot;
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${screenshot.timestamp} (${screenshotApp}), —Ä–∞–∑–Ω–∏—Ü–∞: ${Math.round(timeDiff/1000)}—Å`);
        }
        
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: –ë–ª–∏–∑–∫–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 5 –º–∏–Ω—É—Ç (–ª—é–±–æ–π –ø—Ä–æ—Ü–µ—Å—Å)
        else if (timeDiff <= CLOSE_SEARCH_WINDOW && timeDiff < minCloseTimeDiff) {
            minCloseTimeDiff = timeDiff;
            bestCloseMatch = screenshot;
            console.log(`üî∂ –ù–∞–π–¥–µ–Ω–æ –±–ª–∏–∑–∫–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${screenshot.timestamp} (${screenshotApp}), —Ä–∞–∑–Ω–∏—Ü–∞: ${Math.round(timeDiff/1000)}—Å`);
        }
    });

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const bestMatch = bestExactMatch || bestCloseMatch;
    
    if (bestMatch) {
        const matchType = bestExactMatch ? '—Ç–æ—á–Ω–æ–µ' : '–±–ª–∏–∑–∫–æ–µ';
        const timeDiff = bestExactMatch ? minExactTimeDiff : minCloseTimeDiff;
        console.log(`üéØ –í—ã–±—Ä–∞–Ω ${matchType} —Å–∫—Ä–∏–Ω—à–æ—Ç:`, bestMatch.timestamp, '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', bestMatch.app_name || bestMatch.active_app);
        console.log('–í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–∞–∑–Ω–∏—Ü–∞:', Math.round(timeDiff / 1000), '—Å–µ–∫—É–Ω–¥');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—á–µ—Å—Ç–≤–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        bestMatch._matchQuality = bestExactMatch ? 'exact' : 'close';
        bestMatch._timeDiff = timeDiff;
    } else {
        console.log('‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 5 –º–∏–Ω—É—Ç –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞', appName);
    }

    return bestMatch;
}

function parseTimeString(timeStr) {
    // –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "20:30:42" –∏–ª–∏ "20:30:42 –¥–æ 20:37:34"
    const timeMatch = timeStr.match(/(\d{2}):(\d{2}):(\d{2})/);
    if (!timeMatch) return null;

    const [, hours, minutes, seconds] = timeMatch;

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –∏–∑ —Ñ–∏–ª—å—Ç—Ä–∞
    const selectedDate = document.getElementById('date-filter')?.value;
    if (!selectedDate) {
        console.log('–ù–µ –≤—ã–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞ –≤ —Ñ–∏–ª—å—Ç—Ä–µ');
        return null;
    }

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Date —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
    const targetDate = new Date(selectedDate);
    targetDate.setHours(parseInt(hours), parseInt(minutes), parseInt(seconds), 0);

    return targetDate;
}

function openScreenshotFromChronology(timestamp, appName, elementButton) {
    console.log('üñºÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∏–∑ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏:', timestamp, appName);

    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    if (elementButton) {
        elementButton.classList.add('loading');
        elementButton.innerHTML = '<i class="bi bi-hourglass-split"></i>';
    }

    // –ò—â–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    const screenshot = findScreenshotByTime(timestamp, appName);

    if (screenshot) {
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
        switchToScreenshotsTab();

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
        setTimeout(() => {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞—á–µ—Å—Ç–≤–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
            let modalTitle = `–°–∫—Ä–∏–Ω—à–æ—Ç: ${screenshot.app_name || screenshot.active_app || appName}`;
            if (screenshot._matchQuality === 'exact') {
                modalTitle += ' ‚úÖ (—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)';
            } else if (screenshot._matchQuality === 'close') {
                const timeDiffSec = Math.round(screenshot._timeDiff / 1000);
                modalTitle += ` üî∂ (¬±${timeDiffSec}—Å)`;
            }

            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
            openScreenshotModal(
                screenshot.screenshot,
                screenshot.timestamp,
                modalTitle,
                getProductivityScore(screenshot) >= 0.5
            );

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π –∫–∞—á–µ—Å—Ç–≤–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
            if (elementButton) {
                elementButton.classList.remove('loading');
                let iconClass = 'bi-camera text-muted';
                let title = `–°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ${timestamp}`;
                
                if (screenshot._matchQuality === 'exact') {
                    iconClass = 'bi-camera-fill text-success';
                    title = `–¢–æ—á–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è ${timestamp} (${appName})`;
                } else if (screenshot._matchQuality === 'close') {
                    iconClass = 'bi-camera text-warning';
                    const timeDiffSec = Math.round(screenshot._timeDiff / 1000);
                    title = `–ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è ${timestamp} (¬±${timeDiffSec}—Å)`;
                }
                
                elementButton.innerHTML = `<i class="${iconClass}"></i>`;
                elementButton.title = title;
            }
        }, 300);

    } else {
        // –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        const errorMsg = `–°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ ${timestamp}${appName ? ' –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ ' + appName : ''}`;
        showError(errorMsg);
        console.log('‚ùå', errorMsg);

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        if (elementButton) {
            elementButton.classList.remove('loading');
            elementButton.innerHTML = '<i class="bi bi-camera-slash text-muted"></i>';
            elementButton.title = `–°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è ${timestamp}`;
        }
    }
}

function switchToScreenshotsTab() {
    console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤');

    // –ò—â–µ–º –≤–∫–ª–∞–¥–∫—É —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    const screenshotsTab = document.querySelector('[data-bs-target="#screenshots"]') ||
        document.querySelector('a[href="#screenshots"]') ||
        document.getElementById('screenshots-tab');

    if (screenshotsTab) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Bootstrap –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
        const tabInstance = new bootstrap.Tab(screenshotsTab);
        tabInstance.show();
        console.log('–ü–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤');
    } else {
        console.log('–í–∫–ª–∞–¥–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
}

function addScreenshotButtonToActivity(activityElement, timestamp, appName) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–Ω–æ–ø–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    if (activityElement.querySelector('.screenshot-btn')) {
        return; // –ö–Ω–æ–ø–∫–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞
    }

    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    const screenshotBtn = document.createElement('button');
    screenshotBtn.className = 'btn btn-sm btn-outline-info screenshot-btn ms-2';
    screenshotBtn.innerHTML = '<i class="bi bi-camera"></i>';
    screenshotBtn.title = `–ù–∞–π—Ç–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è ${timestamp}`;
    screenshotBtn.onclick = function (e) {
        e.preventDefault();
        e.stopPropagation();
        openScreenshotFromChronology(timestamp, appName, this);
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –ø–µ—Ä–≤—É—é —è—á–µ–π–∫—É (–≤—Ä–µ–º—è)
    const timeCell = activityElement.querySelector('td:first-child');
    if (timeCell) {
        timeCell.appendChild(screenshotBtn);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
window.findScreenshotByTime = findScreenshotByTime;
window.openScreenshotFromChronology = openScreenshotFromChronology;
window.switchToScreenshotsTab = switchToScreenshotsTab;
window.addScreenshotButtonToActivity = addScreenshotButtonToActivity;
window.toggleMajorPeriod = toggleMajorPeriod;
window.toggleMinorPeriod = toggleMinorPeriod;
window.toggleAllMajorPeriods = toggleAllMajorPeriods;
window.toggleAllMinorPeriods = toggleAllMinorPeriods;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—ã—á–Ω–æ–≥–æ —Ç–∞–±–µ–ª—è (–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞)
function initRegularTimesheet() {
    console.log('üïê initRegularTimesheet: —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –∫–∞–∫ –∑–∞–≥–ª—É—à–∫–∞');
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–æ–¥—É–ª–µ
}
window.hasScreenshotForTime = hasScreenshotForTime;
window.createScreenshotButton = createScreenshotButton;

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏
function testScreenshotSearch() {
    const testTime = "20:30:42";
    const testApp = "Chrome";
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏:', testTime, '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', testApp);

    const screenshot = findScreenshotByTime(testTime, testApp);
    if (screenshot) {
        console.log('–ù–∞–π–¥–µ–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç:', screenshot);
        return screenshot;
    } else {
        console.log('–°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return null;
    }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–æ–∫ –≤ HTML
window.toggleMajorPeriod = toggleMajorPeriod;
window.toggleMinorPeriod = toggleMinorPeriod;
window.toggleAllMajorPeriods = toggleAllMajorPeriods;
window.toggleAllMinorPeriods = toggleAllMinorPeriods;

